{"ast":null,"code":"import { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nexport function mergeScan(accumulator, seed, concurrent = Infinity) {\n  return operate((source, subscriber) => {\n    let state = seed;\n    return mergeInternals(source, subscriber, (value, index) => accumulator(state, value, index), concurrent, value => {\n      state = value;\n    }, false, undefined, () => state = null);\n  });\n}","map":{"version":3,"names":["operate","mergeInternals","mergeScan","accumulator","seed","concurrent","Infinity","source","subscriber","state","value","index","undefined"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/rxjs/dist/esm/internal/operators/mergeScan.js"],"sourcesContent":["import {operate} from '../util/lift';\nimport {mergeInternals} from './mergeInternals';\n\nexport function mergeScan(accumulator, seed, concurrent = Infinity) {\n  return operate((source, subscriber) => {\n    let state = seed;\n    return mergeInternals(source, subscriber, (value, index) => accumulator(state, value, index), concurrent, (value) => {\n      state = value;\n    }, false, undefined, () => (state = null));\n  });\n}\n\n"],"mappings":"AAAA,SAAQA,OAAO,QAAO,cAAc;AACpC,SAAQC,cAAc,QAAO,kBAAkB;AAE/C,OAAO,SAASC,SAASA,CAACC,WAAW,EAAEC,IAAI,EAAEC,UAAU,GAAGC,QAAQ,EAAE;EAClE,OAAON,OAAO,CAAC,CAACO,MAAM,EAAEC,UAAU,KAAK;IACrC,IAAIC,KAAK,GAAGL,IAAI;IAChB,OAAOH,cAAc,CAACM,MAAM,EAAEC,UAAU,EAAE,CAACE,KAAK,EAAEC,KAAK,KAAKR,WAAW,CAACM,KAAK,EAAEC,KAAK,EAAEC,KAAK,CAAC,EAAEN,UAAU,EAAGK,KAAK,IAAK;MACnHD,KAAK,GAAGC,KAAK;IACf,CAAC,EAAE,KAAK,EAAEE,SAAS,EAAE,MAAOH,KAAK,GAAG,IAAK,CAAC;EAC5C,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}