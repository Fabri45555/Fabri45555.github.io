{"ast":null,"code":"import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nexport function race(...sources) {\n  sources = argsOrArgArray(sources);\n  return sources.length === 1 ? innerFrom(sources[0]) : new Observable(raceInit(sources));\n}\nexport function raceInit(sources) {\n  return subscriber => {\n    let subscriptions = [];\n    for (let i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n      subscriptions.push(innerFrom(sources[i]).subscribe(createOperatorSubscriber(subscriber, value => {\n        if (subscriptions) {\n          for (let s = 0; s < subscriptions.length; s++) {\n            s !== i && subscriptions[s].unsubscribe();\n          }\n          subscriptions = null;\n        }\n        subscriber.next(value);\n      })));\n    }\n  };\n}","map":{"version":3,"names":["Observable","innerFrom","argsOrArgArray","createOperatorSubscriber","race","sources","length","raceInit","subscriber","subscriptions","i","closed","push","subscribe","value","s","unsubscribe","next"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/rxjs/dist/esm/internal/observable/race.js"],"sourcesContent":["import {Observable} from '../Observable';\nimport {innerFrom} from './innerFrom';\nimport {argsOrArgArray} from '../util/argsOrArgArray';\nimport {createOperatorSubscriber} from '../operators/OperatorSubscriber';\n\nexport function race(...sources) {\n  sources = argsOrArgArray(sources);\n  return sources.length === 1 ? innerFrom(sources[0]) : new Observable(raceInit(sources));\n}\n\nexport function raceInit(sources) {\n  return (subscriber) => {\n    let subscriptions = [];\n    for (let i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n      subscriptions.push(innerFrom(sources[i]).subscribe(createOperatorSubscriber(subscriber, (value) => {\n        if (subscriptions) {\n          for (let s = 0; s < subscriptions.length; s++) {\n            s !== i && subscriptions[s].unsubscribe();\n          }\n          subscriptions = null;\n        }\n        subscriber.next(value);\n      })));\n    }\n  };\n}\n\n"],"mappings":"AAAA,SAAQA,UAAU,QAAO,eAAe;AACxC,SAAQC,SAAS,QAAO,aAAa;AACrC,SAAQC,cAAc,QAAO,wBAAwB;AACrD,SAAQC,wBAAwB,QAAO,iCAAiC;AAExE,OAAO,SAASC,IAAIA,CAAC,GAAGC,OAAO,EAAE;EAC/BA,OAAO,GAAGH,cAAc,CAACG,OAAO,CAAC;EACjC,OAAOA,OAAO,CAACC,MAAM,KAAK,CAAC,GAAGL,SAAS,CAACI,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,IAAIL,UAAU,CAACO,QAAQ,CAACF,OAAO,CAAC,CAAC;AACzF;AAEA,OAAO,SAASE,QAAQA,CAACF,OAAO,EAAE;EAChC,OAAQG,UAAU,IAAK;IACrB,IAAIC,aAAa,GAAG,EAAE;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAED,aAAa,IAAI,CAACD,UAAU,CAACG,MAAM,IAAID,CAAC,GAAGL,OAAO,CAACC,MAAM,EAAEI,CAAC,EAAE,EAAE;MAC9ED,aAAa,CAACG,IAAI,CAACX,SAAS,CAACI,OAAO,CAACK,CAAC,CAAC,CAAC,CAACG,SAAS,CAACV,wBAAwB,CAACK,UAAU,EAAGM,KAAK,IAAK;QACjG,IAAIL,aAAa,EAAE;UACjB,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,aAAa,CAACH,MAAM,EAAES,CAAC,EAAE,EAAE;YAC7CA,CAAC,KAAKL,CAAC,IAAID,aAAa,CAACM,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;UAC3C;UACAP,aAAa,GAAG,IAAI;QACtB;QACAD,UAAU,CAACS,IAAI,CAACH,KAAK,CAAC;MACxB,CAAC,CAAC,CAAC,CAAC;IACN;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}