{"ast":null,"code":"import { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { isFunction } from '../util/isFunction';\nexport function publishReplay(bufferSize, windowTime, selectorOrScheduler, timestampProvider) {\n  if (selectorOrScheduler && !isFunction(selectorOrScheduler)) {\n    timestampProvider = selectorOrScheduler;\n  }\n  const selector = isFunction(selectorOrScheduler) ? selectorOrScheduler : undefined;\n  return source => multicast(new ReplaySubject(bufferSize, windowTime, timestampProvider), selector)(source);\n}","map":{"version":3,"names":["ReplaySubject","multicast","isFunction","publishReplay","bufferSize","windowTime","selectorOrScheduler","timestampProvider","selector","undefined","source"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/rxjs/dist/esm/internal/operators/publishReplay.js"],"sourcesContent":["import {ReplaySubject} from '../ReplaySubject';\nimport {multicast} from './multicast';\nimport {isFunction} from '../util/isFunction';\n\nexport function publishReplay(bufferSize, windowTime, selectorOrScheduler, timestampProvider) {\n  if (selectorOrScheduler && !isFunction(selectorOrScheduler)) {\n    timestampProvider = selectorOrScheduler;\n  }\n  const selector = isFunction(selectorOrScheduler) ? selectorOrScheduler : undefined;\n  return (source) => multicast(new ReplaySubject(bufferSize, windowTime, timestampProvider), selector)(source);\n}\n\n"],"mappings":"AAAA,SAAQA,aAAa,QAAO,kBAAkB;AAC9C,SAAQC,SAAS,QAAO,aAAa;AACrC,SAAQC,UAAU,QAAO,oBAAoB;AAE7C,OAAO,SAASC,aAAaA,CAACC,UAAU,EAAEC,UAAU,EAAEC,mBAAmB,EAAEC,iBAAiB,EAAE;EAC5F,IAAID,mBAAmB,IAAI,CAACJ,UAAU,CAACI,mBAAmB,CAAC,EAAE;IAC3DC,iBAAiB,GAAGD,mBAAmB;EACzC;EACA,MAAME,QAAQ,GAAGN,UAAU,CAACI,mBAAmB,CAAC,GAAGA,mBAAmB,GAAGG,SAAS;EAClF,OAAQC,MAAM,IAAKT,SAAS,CAAC,IAAID,aAAa,CAACI,UAAU,EAAEC,UAAU,EAAEE,iBAAiB,CAAC,EAAEC,QAAQ,CAAC,CAACE,MAAM,CAAC;AAC9G"},"metadata":{},"sourceType":"module","externalDependencies":[]}