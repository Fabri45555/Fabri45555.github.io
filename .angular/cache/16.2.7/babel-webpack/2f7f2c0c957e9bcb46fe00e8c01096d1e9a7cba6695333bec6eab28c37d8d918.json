{"ast":null,"code":"import { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nimport { defer } from './defer';\nimport { scheduleIterable } from '../scheduled/scheduleIterable';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrScheduler, scheduler) {\n  let resultSelector;\n  let initialState;\n  if (arguments.length === 1) {\n    ({\n      initialState,\n      condition,\n      iterate,\n      resultSelector = identity,\n      scheduler\n    } = initialStateOrOptions);\n  } else {\n    initialState = initialStateOrOptions;\n    if (!resultSelectorOrScheduler || isScheduler(resultSelectorOrScheduler)) {\n      resultSelector = identity;\n      scheduler = resultSelectorOrScheduler;\n    } else {\n      resultSelector = resultSelectorOrScheduler;\n    }\n  }\n  function* gen() {\n    for (let state = initialState; !condition || condition(state); state = iterate(state)) {\n      yield resultSelector(state);\n    }\n  }\n  return defer(scheduler ? () => scheduleIterable(gen(), scheduler) : gen);\n}","map":{"version":3,"names":["identity","isScheduler","defer","scheduleIterable","generate","initialStateOrOptions","condition","iterate","resultSelectorOrScheduler","scheduler","resultSelector","initialState","arguments","length","gen","state"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/rxjs/dist/esm/internal/observable/generate.js"],"sourcesContent":["import {identity} from '../util/identity';\nimport {isScheduler} from '../util/isScheduler';\nimport {defer} from './defer';\nimport {scheduleIterable} from '../scheduled/scheduleIterable';\n\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrScheduler, scheduler) {\n  let resultSelector;\n  let initialState;\n  if (arguments.length === 1) {\n    ({\n      initialState,\n      condition,\n      iterate,\n      resultSelector = identity,\n      scheduler,\n    } = initialStateOrOptions);\n  } else {\n    initialState = initialStateOrOptions;\n    if (!resultSelectorOrScheduler || isScheduler(resultSelectorOrScheduler)) {\n      resultSelector = identity;\n      scheduler = resultSelectorOrScheduler;\n    } else {\n      resultSelector = resultSelectorOrScheduler;\n    }\n  }\n\n  function* gen() {\n    for (let state = initialState; !condition || condition(state); state = iterate(state)) {\n      yield resultSelector(state);\n    }\n  }\n\n  return defer((scheduler\n    ?\n    () => scheduleIterable(gen(), scheduler)\n    :\n    gen));\n}\n\n"],"mappings":"AAAA,SAAQA,QAAQ,QAAO,kBAAkB;AACzC,SAAQC,WAAW,QAAO,qBAAqB;AAC/C,SAAQC,KAAK,QAAO,SAAS;AAC7B,SAAQC,gBAAgB,QAAO,+BAA+B;AAE9D,OAAO,SAASC,QAAQA,CAACC,qBAAqB,EAAEC,SAAS,EAAEC,OAAO,EAAEC,yBAAyB,EAAEC,SAAS,EAAE;EACxG,IAAIC,cAAc;EAClB,IAAIC,YAAY;EAChB,IAAIC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1B,CAAC;MACCF,YAAY;MACZL,SAAS;MACTC,OAAO;MACPG,cAAc,GAAGV,QAAQ;MACzBS;IACF,CAAC,GAAGJ,qBAAqB;EAC3B,CAAC,MAAM;IACLM,YAAY,GAAGN,qBAAqB;IACpC,IAAI,CAACG,yBAAyB,IAAIP,WAAW,CAACO,yBAAyB,CAAC,EAAE;MACxEE,cAAc,GAAGV,QAAQ;MACzBS,SAAS,GAAGD,yBAAyB;IACvC,CAAC,MAAM;MACLE,cAAc,GAAGF,yBAAyB;IAC5C;EACF;EAEA,UAAUM,GAAGA,CAAA,EAAG;IACd,KAAK,IAAIC,KAAK,GAAGJ,YAAY,EAAE,CAACL,SAAS,IAAIA,SAAS,CAACS,KAAK,CAAC,EAAEA,KAAK,GAAGR,OAAO,CAACQ,KAAK,CAAC,EAAE;MACrF,MAAML,cAAc,CAACK,KAAK,CAAC;IAC7B;EACF;EAEA,OAAOb,KAAK,CAAEO,SAAS,GAErB,MAAMN,gBAAgB,CAACW,GAAG,CAAC,CAAC,EAAEL,SAAS,CAAC,GAExCK,GAAI,CAAC;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}