{"ast":null,"code":"import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n  return new Observable(subscriber => {\n    let iterator;\n    executeSchedule(subscriber, scheduler, () => {\n      iterator = input[Symbol_iterator]();\n      executeSchedule(subscriber, scheduler, () => {\n        let value;\n        let done;\n        try {\n          ({\n            value,\n            done\n          } = iterator.next());\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n        }\n      }, 0, true);\n    });\n    return () => isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return();\n  });\n}","map":{"version":3,"names":["Observable","iterator","Symbol_iterator","isFunction","executeSchedule","scheduleIterable","input","scheduler","subscriber","value","done","next","err","error","complete","return"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/rxjs/dist/esm/internal/scheduled/scheduleIterable.js"],"sourcesContent":["import {Observable} from '../Observable';\nimport {iterator as Symbol_iterator} from '../symbol/iterator';\nimport {isFunction} from '../util/isFunction';\nimport {executeSchedule} from '../util/executeSchedule';\n\nexport function scheduleIterable(input, scheduler) {\n  return new Observable((subscriber) => {\n    let iterator;\n    executeSchedule(subscriber, scheduler, () => {\n      iterator = input[Symbol_iterator]();\n      executeSchedule(subscriber, scheduler, () => {\n        let value;\n        let done;\n        try {\n          ({value, done} = iterator.next());\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n        }\n      }, 0, true);\n    });\n    return () => isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return();\n  });\n}\n\n"],"mappings":"AAAA,SAAQA,UAAU,QAAO,eAAe;AACxC,SAAQC,QAAQ,IAAIC,eAAe,QAAO,oBAAoB;AAC9D,SAAQC,UAAU,QAAO,oBAAoB;AAC7C,SAAQC,eAAe,QAAO,yBAAyB;AAEvD,OAAO,SAASC,gBAAgBA,CAACC,KAAK,EAAEC,SAAS,EAAE;EACjD,OAAO,IAAIP,UAAU,CAAEQ,UAAU,IAAK;IACpC,IAAIP,QAAQ;IACZG,eAAe,CAACI,UAAU,EAAED,SAAS,EAAE,MAAM;MAC3CN,QAAQ,GAAGK,KAAK,CAACJ,eAAe,CAAC,CAAC,CAAC;MACnCE,eAAe,CAACI,UAAU,EAAED,SAAS,EAAE,MAAM;QAC3C,IAAIE,KAAK;QACT,IAAIC,IAAI;QACR,IAAI;UACF,CAAC;YAACD,KAAK;YAAEC;UAAI,CAAC,GAAGT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClC,CAAC,CAAC,OAAOC,GAAG,EAAE;UACZJ,UAAU,CAACK,KAAK,CAACD,GAAG,CAAC;UACrB;QACF;QACA,IAAIF,IAAI,EAAE;UACRF,UAAU,CAACM,QAAQ,CAAC,CAAC;QACvB,CAAC,MAAM;UACLN,UAAU,CAACG,IAAI,CAACF,KAAK,CAAC;QACxB;MACF,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IACb,CAAC,CAAC;IACF,OAAO,MAAMN,UAAU,CAACF,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACc,MAAM,CAAC,IAAId,QAAQ,CAACc,MAAM,CAAC,CAAC;EACnH,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}