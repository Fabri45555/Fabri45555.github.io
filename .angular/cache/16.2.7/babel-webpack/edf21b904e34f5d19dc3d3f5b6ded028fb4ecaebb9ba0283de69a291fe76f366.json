{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Version, InjectionToken, inject, NgModule, Optional, Inject, LOCALE_ID, Injectable, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, Output, ViewChild, ANIMATION_MODULE_TYPE as ANIMATION_MODULE_TYPE$1, NgZone, ElementRef } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$1 } from '@angular/cdk';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { Platform, _isTestEnvironment, normalizePassiveListenerOptions, _getEventTarget } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Observable, Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/** Current version of Angular Material. */\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nconst _c2 = [\"text\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabled)(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\");\n  }\n}\nfunction MatOption_mat_pseudo_checkbox_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r2.disabled);\n  }\n}\nfunction MatOption_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r3.group.label, \")\");\n  }\n}\nconst _c3 = [[[\"mat-icon\"]], \"*\"];\nconst _c4 = [\"mat-icon\", \"*\"];\nconst VERSION = new Version('16.2.10');\n\n/** @docs-private */\nclass AnimationCurves {\n  static #_ = this.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  static #_2 = this.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  static #_3 = this.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  static #_4 = this.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n\n/** @docs-private */\nclass AnimationDurations {\n  static #_ = this.COMPLEX = '375ms';\n  static #_2 = this.ENTERING = '225ms';\n  static #_3 = this.EXITING = '195ms';\n}\n\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n  constructor(highContrastModeDetector, _sanityChecks, _document) {\n    this._sanityChecks = _sanityChecks;\n    this._document = _document;\n    /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n    this._hasDoneGlobalChecks = false;\n    // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n    // in MatCommonModule.\n    highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    if (!this._hasDoneGlobalChecks) {\n      this._hasDoneGlobalChecks = true;\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Inject in here so the reference to `Platform` can be removed in production mode.\n        const platform = inject(Platform, {\n          optional: true\n        });\n        if (this._checkIsEnabled('doctype')) {\n          _checkDoctypeIsDefined(this._document);\n        }\n        if (this._checkIsEnabled('theme')) {\n          _checkThemeIsPresent(this._document, !!platform?.isBrowser);\n        }\n        if (this._checkIsEnabled('version')) {\n          _checkCdkVersionMatch();\n        }\n      }\n    }\n  }\n\n  /** Gets whether a specific sanity check is enabled. */\n  _checkIsEnabled(name) {\n    if (_isTestEnvironment()) {\n      return false;\n    }\n    if (typeof this._sanityChecks === 'boolean') {\n      return this._sanityChecks;\n    }\n    return !!this._sanityChecks[name];\n  }\n  static #_ = this.ɵfac = function MatCommonModule_Factory(t) {\n    return new (t || MatCommonModule)(i0.ɵɵinject(i1.HighContrastModeDetector), i0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), i0.ɵɵinject(DOCUMENT));\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatCommonModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [BidiModule, BidiModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [BidiModule]\n    }]\n  }], function () {\n    return [{\n      type: i1.HighContrastModeDetector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MATERIAL_SANITY_CHECKS]\n      }]\n    }, {\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/** Checks that the page has a doctype. */\nfunction _checkDoctypeIsDefined(doc) {\n  if (!doc.doctype) {\n    console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n  }\n}\n\n/** Checks that a theme has been included. */\nfunction _checkThemeIsPresent(doc, isBrowser) {\n  // We need to assert that the `body` is defined, because these checks run very early\n  // and the `body` won't be defined if the consumer put their scripts in the `head`.\n  if (!doc.body || !isBrowser) {\n    return;\n  }\n  const testElement = doc.createElement('div');\n  testElement.classList.add('mat-theme-loaded-marker');\n  doc.body.appendChild(testElement);\n  const computedStyle = getComputedStyle(testElement);\n  // In some situations the computed style of the test element can be null. For example in\n  // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  if (computedStyle && computedStyle.display !== 'none') {\n    console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n  }\n  testElement.remove();\n}\n\n/** Checks whether the Material version matches the CDK version. */\nfunction _checkCdkVersionMatch() {\n  if (VERSION.full !== VERSION$1.full) {\n    console.warn('The Angular Material version (' + VERSION.full + ') does not match ' + 'the Angular CDK version (' + VERSION$1.full + ').\\n' + 'Please ensure the versions of these two packages exactly match.');\n  }\n}\nfunction mixinDisabled(base) {\n  return class extends base {\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    constructor(...args) {\n      super(...args);\n      this._disabled = false;\n    }\n  };\n}\nfunction mixinColor(base, defaultColor) {\n  return class extends base {\n    get color() {\n      return this._color;\n    }\n    set color(value) {\n      const colorPalette = value || this.defaultColor;\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n        this._color = colorPalette;\n      }\n    }\n    constructor(...args) {\n      super(...args);\n      this.defaultColor = defaultColor;\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\nfunction mixinDisableRipple(base) {\n  return class extends base {\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n      return this._disableRipple;\n    }\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n    constructor(...args) {\n      super(...args);\n      this._disableRipple = false;\n    }\n  };\n}\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n  return class extends base {\n    get tabIndex() {\n      return this.disabled ? -1 : this._tabIndex;\n    }\n    set tabIndex(value) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n    }\n    constructor(...args) {\n      super(...args);\n      this._tabIndex = defaultTabIndex;\n      this.defaultTabIndex = defaultTabIndex;\n    }\n  };\n}\nfunction mixinErrorState(base) {\n  return class extends base {\n    /** Updates the error state based on the provided error state matcher. */\n    updateErrorState() {\n      const oldState = this.errorState;\n      const parent = this._parentFormGroup || this._parentForm;\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      const control = this.ngControl ? this.ngControl.control : null;\n      const newState = matcher.isErrorState(control, parent);\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n    constructor(...args) {\n      super(...args);\n      /** Whether the component is in an error state. */\n      this.errorState = false;\n    }\n  };\n}\n\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      /** Whether this directive has been marked as initialized. */\n      this._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n      this._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n      this.initialized = new Observable(subscriber => {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (this._isInitialized) {\n          this._notifySubscriber(subscriber);\n        } else {\n          this._pendingSubscribers.push(subscriber);\n        }\n      });\n    }\n\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n    _markInitialized() {\n      if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n      }\n      this._isInitialized = true;\n      this._pendingSubscribers.forEach(this._notifySubscriber);\n      this._pendingSubscribers = null;\n    }\n\n    /** Emits and completes the subscriber stream (should only emit once). */\n    _notifySubscriber(subscriber) {\n      subscriber.next();\n      subscriber.complete();\n    }\n  };\n}\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n  constructor() {\n    this._localeChanges = new Subject();\n    /** A stream that emits when the locale changes. */\n    this.localeChanges = this._localeChanges;\n  }\n\n  /**\n   * Given a potential date object, returns that same date object if it is\n   * a valid date, or `null` if it's not a valid date.\n   * @param obj The object to check.\n   * @returns A date or `null`.\n   */\n  getValidDateOrNull(obj) {\n    return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n  }\n\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value) {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first, second) {\n    return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n  }\n\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first, second) {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date, min, max) {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n  constructor(matDateLocale,\n  /**\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 14.0.0\n   */\n  _platform) {\n    super();\n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    this.useUtcForDisplay = false;\n    super.setLocale(matDateLocale);\n  }\n  getYear(date) {\n    return date.getFullYear();\n  }\n  getMonth(date) {\n    return date.getMonth();\n  }\n  getDate(date) {\n    return date.getDate();\n  }\n  getDayOfWeek(date) {\n    return date.getDay();\n  }\n  getMonthNames(style) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      month: style,\n      timeZone: 'utc'\n    });\n    return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n  }\n  getDateNames() {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      day: 'numeric',\n      timeZone: 'utc'\n    });\n    return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n  }\n  getDayOfWeekNames(style) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      weekday: style,\n      timeZone: 'utc'\n    });\n    return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n  }\n  getYearName(date) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      year: 'numeric',\n      timeZone: 'utc'\n    });\n    return this._format(dtf, date);\n  }\n  getFirstDayOfWeek() {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n  getNumDaysInMonth(date) {\n    return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n  clone(date) {\n    return new Date(date.getTime());\n  }\n  createDate(year, month, date) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      // Check for invalid month and date (except upper bound on date which we have to check after\n      // creating the Date).\n      if (month < 0 || month > 11) {\n        throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n      }\n      if (date < 1) {\n        throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n      }\n    }\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n    return result;\n  }\n  today() {\n    return new Date();\n  }\n  parse(value, parseFormat) {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n  format(date, displayFormat) {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      ...displayFormat,\n      timeZone: 'utc'\n    });\n    return this._format(dtf, date);\n  }\n  addCalendarYears(date, years) {\n    return this.addCalendarMonths(date, years * 12);\n  }\n  addCalendarMonths(date, months) {\n    let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n    return newDate;\n  }\n  addCalendarDays(date, days) {\n    return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n  toIso8601(date) {\n    return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n  }\n\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value) {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n  isDateInstance(obj) {\n    return obj instanceof Date;\n  }\n  isValid(date) {\n    return !isNaN(date.getTime());\n  }\n  invalid() {\n    return new Date(NaN);\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  _createDateWithOverflow(year, month, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setFullYear` and `setHours` instead.\n    const d = new Date();\n    d.setFullYear(year, month, date);\n    d.setHours(0, 0, 0, 0);\n    return d;\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  _2digit(n) {\n    return ('00' + n).slice(-2);\n  }\n\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containing the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  _format(dtf, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n    const d = new Date();\n    d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n    return dtf.format(d);\n  }\n  static #_ = this.ɵfac = function NativeDateAdapter_Factory(t) {\n    return new (t || NativeDateAdapter)(i0.ɵɵinject(MAT_DATE_LOCALE, 8), i0.ɵɵinject(i1$1.Platform));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NativeDateAdapter,\n    factory: NativeDateAdapter.ɵfac\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NativeDateAdapter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_LOCALE]\n      }]\n    }, {\n      type: i1$1.Platform\n    }];\n  }, null);\n})();\nconst MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\nclass NativeDateModule {\n  static #_ = this.ɵfac = function NativeDateModule_Factory(t) {\n    return new (t || NativeDateModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NativeDateModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [{\n      provide: DateAdapter,\n      useClass: NativeDateAdapter\n    }]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NativeDateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: DateAdapter,\n        useClass: NativeDateAdapter\n      }]\n    }]\n  }], null, null);\n})();\nclass MatNativeDateModule {\n  static #_ = this.ɵfac = function MatNativeDateModule_Factory(t) {\n    return new (t || MatNativeDateModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatNativeDateModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [{\n      provide: MAT_DATE_FORMATS,\n      useValue: MAT_NATIVE_DATE_FORMATS\n    }],\n    imports: [NativeDateModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatNativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NativeDateModule],\n      providers: [{\n        provide: MAT_DATE_FORMATS,\n        useValue: MAT_NATIVE_DATE_FORMATS\n      }]\n    }]\n  }], null, null);\n})();\n\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.dirty || form && form.submitted));\n  }\n  static #_ = this.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) {\n    return new (t || ShowOnDirtyErrorStateMatcher)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ShowOnDirtyErrorStateMatcher,\n    factory: ShowOnDirtyErrorStateMatcher.ɵfac\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.touched || form && form.submitted));\n  }\n  static #_ = this.ɵfac = function ErrorStateMatcher_Factory(t) {\n    return new (t || ErrorStateMatcher)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ErrorStateMatcher,\n    factory: ErrorStateMatcher.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ErrorStateMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n  static #_ = this.ɵfac = function MatLine_Factory(t) {\n    return new (t || MatLine)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatLine,\n    selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n    hostAttrs: [1, \"mat-line\"]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLine, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-line], [matLine]',\n      host: {\n        'class': 'mat-line'\n      }\n    }]\n  }], null, null);\n})();\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(({\n    length\n  }) => {\n    setClass(element, `${prefix}-2-line`, false);\n    setClass(element, `${prefix}-3-line`, false);\n    setClass(element, `${prefix}-multi-line`, false);\n    if (length === 2 || length === 3) {\n      setClass(element, `${prefix}-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `${prefix}-multi-line`, true);\n    }\n  });\n}\n\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n  element.nativeElement.classList.toggle(className, isAdd);\n}\nclass MatLineModule {\n  static #_ = this.ɵfac = function MatLineModule_Factory(t) {\n    return new (t || MatLineModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatLineModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, MatCommonModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLineModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatLine, MatCommonModule],\n      declarations: [MatLine]\n    }]\n  }], null, null);\n})();\n\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n  constructor(_renderer, /** Reference to the ripple HTML element. */\n  element, /** Ripple configuration used for the ripple. */\n  config, /* Whether animations are forcibly disabled for ripples through CSS. */\n  _animationForciblyDisabledThroughCss = false) {\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n    /** Current state of the ripple. */\n    this.state = 3 /* RippleState.HIDDEN */;\n  }\n\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions$1 = normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n\n/** Manages events through delegation so that as few event handlers as possible are bound. */\nclass RippleEventManager {\n  constructor() {\n    this._events = new Map();\n    /** Event handler that is bound and which dispatches the events to the different targets. */\n    this._delegateEventHandler = event => {\n      const target = _getEventTarget(event);\n      if (target) {\n        this._events.get(event.type)?.forEach((handlers, element) => {\n          if (element === target || element.contains(target)) {\n            handlers.forEach(handler => handler.handleEvent(event));\n          }\n        });\n      }\n    };\n  }\n\n  /** Adds an event handler. */\n  addHandler(ngZone, name, element, handler) {\n    const handlersForEvent = this._events.get(name);\n    if (handlersForEvent) {\n      const handlersForElement = handlersForEvent.get(element);\n      if (handlersForElement) {\n        handlersForElement.add(handler);\n      } else {\n        handlersForEvent.set(element, new Set([handler]));\n      }\n    } else {\n      this._events.set(name, new Map([[element, new Set([handler])]]));\n      ngZone.runOutsideAngular(() => {\n        document.addEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n      });\n    }\n  }\n\n  /** Removes an event handler. */\n  removeHandler(name, element, handler) {\n    const handlersForEvent = this._events.get(name);\n    if (!handlersForEvent) {\n      return;\n    }\n    const handlersForElement = handlersForEvent.get(element);\n    if (!handlersForElement) {\n      return;\n    }\n    handlersForElement.delete(handler);\n    if (handlersForElement.size === 0) {\n      handlersForEvent.delete(element);\n    }\n    if (handlersForEvent.size === 0) {\n      this._events.delete(name);\n      document.removeEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n    }\n  }\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n  enterDuration: 225,\n  exitDuration: 150\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions = normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n  static #_ = this._eventManager = new RippleEventManager();\n  constructor(_target, _ngZone, elementOrElementRef, _platform) {\n    this._target = _target;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    /** Whether the pointer is currently down or not. */\n    this._isPointerDown = false;\n    /**\n     * Map of currently active ripple references.\n     * The ripple reference is mapped to its element event listeners.\n     * The reason why `| null` is used is that event listeners are added only\n     * when the condition is truthy (see the `_startFadeOutTransition` method).\n     */\n    this._activeRipples = new Map();\n    /** Whether pointer-up event listeners have been registered. */\n    this._pointerUpEventsRegistered = false;\n    // Only do anything if we're on the browser.\n    if (_platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n    }\n  }\n\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n  fadeInRipple(x, y, config = {}) {\n    const containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n    const animationConfig = {\n      ...defaultRippleAnimationConfig,\n      ...config.animation\n    };\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const enterDuration = animationConfig.enterDuration;\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n    // If a custom color has been specified, set it as inline style. If no color is\n    // set, the default color will be applied through the ripple theme styles.\n    if (config.color != null) {\n      ripple.style.backgroundColor = config.color;\n    }\n    ripple.style.transitionDuration = `${enterDuration}ms`;\n    this._containerElement.appendChild(ripple);\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical to ensure that the `scale` animates properly.\n    // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    const computedStyles = window.getComputedStyle(ripple);\n    const userTransitionProperty = computedStyles.transitionProperty;\n    const userTransitionDuration = computedStyles.transitionDuration;\n    // Note: We detect whether animation is forcibly disabled through CSS (e.g. through\n    // `transition: none` or `display: none`). This is technically unexpected since animations are\n    // controlled through the animation config, but this exists for backwards compatibility. This\n    // logic does not need to be super accurate since it covers some edge cases which can be easily\n    // avoided by users.\n    const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' ||\n    // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n    // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n    userTransitionDuration === '0s' || userTransitionDuration === '0s, 0s' ||\n    // If the container is 0x0, it's likely `display: none`.\n    containerRect.width === 0 && containerRect.height === 0;\n    // Exposed reference to the ripple that will be returned.\n    const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss);\n    // Start the enter animation by setting the transform/scale to 100%. The animation will\n    // execute as part of this statement because we forced a style recalculation before.\n    // Note: We use a 3d transform here in order to avoid an issue in Safari where\n    // the ripples aren't clipped when inside the shadow DOM (see #24028).\n    ripple.style.transform = 'scale3d(1, 1, 1)';\n    rippleRef.state = 0 /* RippleState.FADING_IN */;\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n    let eventListeners = null;\n    // Do not register the `transition` event listener if fade-in and fade-out duration\n    // are set to zero. The events won't fire anyway and we can save resources here.\n    if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n      this._ngZone.runOutsideAngular(() => {\n        const onTransitionEnd = () => this._finishRippleTransition(rippleRef);\n        const onTransitionCancel = () => this._destroyRipple(rippleRef);\n        ripple.addEventListener('transitionend', onTransitionEnd);\n        // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n        // directly as otherwise we would keep it part of the ripple container forever.\n        // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n        ripple.addEventListener('transitioncancel', onTransitionCancel);\n        eventListeners = {\n          onTransitionEnd,\n          onTransitionCancel\n        };\n      });\n    }\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.set(rippleRef, eventListeners);\n    // In case there is no fade-in transition duration, we need to manually call the transition\n    // end listener because `transitionend` doesn't fire if there is no transition.\n    if (animationForciblyDisabledThroughCss || !enterDuration) {\n      this._finishRippleTransition(rippleRef);\n    }\n    return rippleRef;\n  }\n\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef) {\n    // For ripples already fading out or hidden, this should be a noop.\n    if (rippleRef.state === 2 /* RippleState.FADING_OUT */ || rippleRef.state === 3 /* RippleState.HIDDEN */) {\n      return;\n    }\n    const rippleEl = rippleRef.element;\n    const animationConfig = {\n      ...defaultRippleAnimationConfig,\n      ...rippleRef.config.animation\n    };\n    // This starts the fade-out transition and will fire the transition end listener that\n    // removes the ripple element from the DOM.\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = 2 /* RippleState.FADING_OUT */;\n    // In case there is no fade-out transition duration, we need to manually call the\n    // transition end listener because `transitionend` doesn't fire if there is no transition.\n    if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n      this._finishRippleTransition(rippleRef);\n    }\n  }\n\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n  }\n\n  /** Fades out all currently active non-persistent ripples. */\n  fadeOutAllNonPersistent() {\n    this._getActiveRipples().forEach(ripple => {\n      if (!ripple.config.persistent) {\n        ripple.fadeOut();\n      }\n    });\n  }\n\n  /** Sets up the trigger event listeners */\n  setupTriggerEvents(elementOrElementRef) {\n    const element = coerceElement(elementOrElementRef);\n    if (!this._platform.isBrowser || !element || element === this._triggerElement) {\n      return;\n    }\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n    this._triggerElement = element;\n    // Use event delegation for the trigger events since they're\n    // set up during creation and are performance-sensitive.\n    pointerDownEvents.forEach(type => {\n      RippleRenderer._eventManager.addHandler(this._ngZone, type, element, this);\n    });\n  }\n\n  /**\n   * Handles all registered events.\n   * @docs-private\n   */\n  handleEvent(event) {\n    if (event.type === 'mousedown') {\n      this._onMousedown(event);\n    } else if (event.type === 'touchstart') {\n      this._onTouchStart(event);\n    } else {\n      this._onPointerUp();\n    }\n    // If pointer-up events haven't been registered yet, do so now.\n    // We do this on-demand in order to reduce the total number of event listeners\n    // registered by the ripples, which speeds up the rendering time for large UIs.\n    if (!this._pointerUpEventsRegistered) {\n      // The events for hiding the ripple are bound directly on the trigger, because:\n      // 1. Some of them occur frequently (e.g. `mouseleave`) and any advantage we get from\n      // delegation will be diminished by having to look through all the data structures often.\n      // 2. They aren't as performance-sensitive, because they're bound only after the user\n      // has interacted with an element.\n      this._ngZone.runOutsideAngular(() => {\n        pointerUpEvents.forEach(type => {\n          this._triggerElement.addEventListener(type, this, passiveCapturingEventOptions);\n        });\n      });\n      this._pointerUpEventsRegistered = true;\n    }\n  }\n\n  /** Method that will be called if the fade-in or fade-in transition completed. */\n  _finishRippleTransition(rippleRef) {\n    if (rippleRef.state === 0 /* RippleState.FADING_IN */) {\n      this._startFadeOutTransition(rippleRef);\n    } else if (rippleRef.state === 2 /* RippleState.FADING_OUT */) {\n      this._destroyRipple(rippleRef);\n    }\n  }\n\n  /**\n   * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n   * is not held down anymore.\n   */\n  _startFadeOutTransition(rippleRef) {\n    const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n    const {\n      persistent\n    } = rippleRef.config;\n    rippleRef.state = 1 /* RippleState.VISIBLE */;\n    // When the timer runs out while the user has kept their pointer down, we want to\n    // keep only the persistent ripples and the latest transient ripple. We do this,\n    // because we don't want stacked transient ripples to appear after their enter\n    // animation has finished.\n    if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n      rippleRef.fadeOut();\n    }\n  }\n\n  /** Destroys the given ripple by removing it from the DOM and updating its state. */\n  _destroyRipple(rippleRef) {\n    const eventListeners = this._activeRipples.get(rippleRef) ?? null;\n    this._activeRipples.delete(rippleRef);\n    // Clear out the cached bounding rect if we have no more ripples.\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    }\n    // If the current ref is the most recent transient ripple, unset it\n    // avoid memory leaks.\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n    rippleRef.state = 3 /* RippleState.HIDDEN */;\n    if (eventListeners !== null) {\n      rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n      rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n    }\n    rippleRef.element.remove();\n  }\n\n  /** Function being called whenever the trigger is being pressed using mouse. */\n  _onMousedown(event) {\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\n    // ripple in this case for consistency with the non-screen-reader experience.\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n    const isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n    if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n    }\n  }\n\n  /** Function being called whenever the trigger is being pressed using touch. */\n  _onTouchStart(event) {\n    if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true;\n      // Use `changedTouches` so we skip any touches where the user put\n      // their finger down, but used another finger to tap the element again.\n      const touches = event.changedTouches;\n      // According to the typings the touches should always be defined, but in some cases\n      // the browser appears to not assign them in tests which leads to flakes.\n      if (touches) {\n        for (let i = 0; i < touches.length; i++) {\n          this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n        }\n      }\n    }\n  }\n\n  /** Function being called whenever the trigger is being released. */\n  _onPointerUp() {\n    if (!this._isPointerDown) {\n      return;\n    }\n    this._isPointerDown = false;\n    // Fade-out all ripples that are visible and not persistent.\n    this._getActiveRipples().forEach(ripple => {\n      // By default, only ripples that are completely visible will fade out on pointer release.\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n      const isVisible = ripple.state === 1 /* RippleState.VISIBLE */ || ripple.config.terminateOnPointerUp && ripple.state === 0 /* RippleState.FADING_IN */;\n      if (!ripple.config.persistent && isVisible) {\n        ripple.fadeOut();\n      }\n    });\n  }\n  _getActiveRipples() {\n    return Array.from(this._activeRipples.keys());\n  }\n\n  /** Removes previously registered event listeners from the trigger element. */\n  _removeTriggerEvents() {\n    const trigger = this._triggerElement;\n    if (trigger) {\n      pointerDownEvents.forEach(type => RippleRenderer._eventManager.removeHandler(type, trigger, this));\n      if (this._pointerUpEventsRegistered) {\n        pointerUpEvents.forEach(type => trigger.removeEventListener(type, this, passiveCapturingEventOptions));\n      }\n    }\n  }\n}\n\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    if (value) {\n      this.fadeOutAllNonPersistent();\n    }\n    this._disabled = value;\n    this._setupTriggerEventsIfEnabled();\n  }\n\n  /**\n   * The element that triggers the ripple when click events are received.\n   * Defaults to the directive's host element.\n   */\n  get trigger() {\n    return this._trigger || this._elementRef.nativeElement;\n  }\n  set trigger(trigger) {\n    this._trigger = trigger;\n    this._setupTriggerEventsIfEnabled();\n  }\n  constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n    this._elementRef = _elementRef;\n    this._animationMode = _animationMode;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n    this.radius = 0;\n    this._disabled = false;\n    /** @docs-private Whether ripple directive is initialized and the input bindings are set. */\n    this._isInitialized = false;\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n  }\n  ngOnInit() {\n    this._isInitialized = true;\n    this._setupTriggerEventsIfEnabled();\n  }\n  ngOnDestroy() {\n    this._rippleRenderer._removeTriggerEvents();\n  }\n\n  /** Fades out all currently showing ripple elements. */\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n\n  /** Fades out all currently showing non-persistent ripple elements. */\n  fadeOutAllNonPersistent() {\n    this._rippleRenderer.fadeOutAllNonPersistent();\n  }\n\n  /**\n   * Ripple configuration from the directive's input values.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleConfig() {\n    return {\n      centered: this.centered,\n      radius: this.radius,\n      color: this.color,\n      animation: {\n        ...this._globalOptions.animation,\n        ...(this._animationMode === 'NoopAnimations' ? {\n          enterDuration: 0,\n          exitDuration: 0\n        } : {}),\n        ...this.animation\n      },\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp\n    };\n  }\n\n  /**\n   * Whether ripples on pointer-down are disabled or not.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleDisabled() {\n    return this.disabled || !!this._globalOptions.disabled;\n  }\n\n  /** Sets up the trigger event listeners if ripples are enabled. */\n  _setupTriggerEventsIfEnabled() {\n    if (!this.disabled && this._isInitialized) {\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\n    }\n  }\n\n  /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n  launch(configOrX, y = 0, config) {\n    if (typeof configOrX === 'number') {\n      return this._rippleRenderer.fadeInRipple(configOrX, y, {\n        ...this.rippleConfig,\n        ...config\n      });\n    } else {\n      return this._rippleRenderer.fadeInRipple(0, 0, {\n        ...this.rippleConfig,\n        ...configOrX\n      });\n    }\n  }\n  static #_ = this.ɵfac = function MatRipple_Factory(t) {\n    return new (t || MatRipple)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.Platform), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatRipple,\n    selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]],\n    hostAttrs: [1, \"mat-ripple\"],\n    hostVars: 2,\n    hostBindings: function MatRipple_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n      }\n    },\n    inputs: {\n      color: [\"matRippleColor\", \"color\"],\n      unbounded: [\"matRippleUnbounded\", \"unbounded\"],\n      centered: [\"matRippleCentered\", \"centered\"],\n      radius: [\"matRippleRadius\", \"radius\"],\n      animation: [\"matRippleAnimation\", \"animation\"],\n      disabled: [\"matRippleDisabled\", \"disabled\"],\n      trigger: [\"matRippleTrigger\", \"trigger\"]\n    },\n    exportAs: [\"matRipple\"]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRipple, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-ripple], [matRipple]',\n      exportAs: 'matRipple',\n      host: {\n        'class': 'mat-ripple',\n        '[class.mat-ripple-unbounded]': 'unbounded'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1$1.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    color: [{\n      type: Input,\n      args: ['matRippleColor']\n    }],\n    unbounded: [{\n      type: Input,\n      args: ['matRippleUnbounded']\n    }],\n    centered: [{\n      type: Input,\n      args: ['matRippleCentered']\n    }],\n    radius: [{\n      type: Input,\n      args: ['matRippleRadius']\n    }],\n    animation: [{\n      type: Input,\n      args: ['matRippleAnimation']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['matRippleDisabled']\n    }],\n    trigger: [{\n      type: Input,\n      args: ['matRippleTrigger']\n    }]\n  });\n})();\nclass MatRippleModule {\n  static #_ = this.ɵfac = function MatRippleModule_Factory(t) {\n    return new (t || MatRippleModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatRippleModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, MatCommonModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRippleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatRipple, MatCommonModule],\n      declarations: [MatRipple]\n    }]\n  }], null, null);\n})();\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n  constructor(_animationMode) {\n    this._animationMode = _animationMode;\n    /** Display state of the checkbox. */\n    this.state = 'unchecked';\n    /** Whether the checkbox is disabled. */\n    this.disabled = false;\n    /**\n     * Appearance of the pseudo checkbox. Default appearance of 'full' renders a checkmark/mixedmark\n     * indicator inside a square box. 'minimal' appearance only renders the checkmark/mixedmark.\n     */\n    this.appearance = 'full';\n  }\n  static #_ = this.ɵfac = function MatPseudoCheckbox_Factory(t) {\n    return new (t || MatPseudoCheckbox)(i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatPseudoCheckbox,\n    selectors: [[\"mat-pseudo-checkbox\"]],\n    hostAttrs: [1, \"mat-pseudo-checkbox\"],\n    hostVars: 12,\n    hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"mat-pseudo-checkbox-minimal\", ctx.appearance === \"minimal\")(\"mat-pseudo-checkbox-full\", ctx.appearance === \"full\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      }\n    },\n    inputs: {\n      state: \"state\",\n      disabled: \"disabled\",\n      appearance: \"appearance\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function MatPseudoCheckbox_Template(rf, ctx) {},\n    styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-full{border:2px solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'mat-pseudo-checkbox',\n      template: '',\n      host: {\n        'class': 'mat-pseudo-checkbox',\n        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n        '[class.mat-pseudo-checkbox-minimal]': 'appearance === \"minimal\"',\n        '[class.mat-pseudo-checkbox-full]': 'appearance === \"full\"',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-full{border:2px solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    state: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }]\n  });\n})();\nclass MatPseudoCheckboxModule {\n  static #_ = this.ɵfac = function MatPseudoCheckboxModule_Factory(t) {\n    return new (t || MatPseudoCheckboxModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatPseudoCheckboxModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatPseudoCheckbox],\n      declarations: [MatPseudoCheckbox]\n    }]\n  }], null, null);\n})();\n\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nconst _MatOptgroupMixinBase = mixinDisabled(class {});\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n  constructor(parent) {\n    super();\n    /** Unique id for the underlying label. */\n    this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    this._inert = parent?.inertGroups ?? false;\n  }\n  static #_ = this.ɵfac = function _MatOptgroupBase_Factory(t) {\n    return new (t || _MatOptgroupBase)(i0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _MatOptgroupBase,\n    inputs: {\n      label: \"label\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatOptgroupBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    label: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵMatOptgroup_BaseFactory;\n    return function MatOptgroup_Factory(t) {\n      return (ɵMatOptgroup_BaseFactory || (ɵMatOptgroup_BaseFactory = i0.ɵɵgetInheritedFactory(MatOptgroup)))(t || MatOptgroup);\n    };\n  }();\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatOptgroup,\n    selectors: [[\"mat-optgroup\"]],\n    hostAttrs: [1, \"mat-mdc-optgroup\"],\n    hostVars: 3,\n    hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\"\n    },\n    exportAs: [\"matOptgroup\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_OPTGROUP,\n      useExisting: MatOptgroup\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 5,\n    vars: 4,\n    consts: [[\"role\", \"presentation\", 1, \"mat-mdc-optgroup-label\", 3, \"id\"], [1, \"mdc-list-item__primary-text\"]],\n    template: function MatOptgroup_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"span\", 0)(1, \"span\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵprojection(3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵprojection(4, 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mdc-list-item--disabled\", ctx.disabled);\n        i0.ɵɵproperty(\"id\", ctx._labelId);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n      }\n    },\n    styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color);font-family:var(--mat-optgroup-label-text-font);line-height:var(--mat-optgroup-label-text-line-height);font-size:var(--mat-optgroup-label-text-size);letter-spacing:var(--mat-optgroup-label-text-tracking);font-weight:var(--mat-optgroup-label-text-weight)}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;min-height:48px}.mat-mdc-optgroup-label:focus{outline:none}[dir=rtl] .mat-mdc-optgroup-label,.mat-mdc-optgroup-label[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOptgroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-optgroup',\n      exportAs: 'matOptgroup',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled'],\n      host: {\n        'class': 'mat-mdc-optgroup',\n        '[attr.role]': '_inert ? null : \"group\"',\n        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n        '[attr.aria-labelledby]': '_inert ? null : _labelId'\n      },\n      providers: [{\n        provide: MAT_OPTGROUP,\n        useExisting: MatOptgroup\n      }],\n      template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  role=\\\"presentation\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n      styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color);font-family:var(--mat-optgroup-label-text-font);line-height:var(--mat-optgroup-label-text-line-height);font-size:var(--mat-optgroup-label-text-size);letter-spacing:var(--mat-optgroup-label-text-tracking);font-weight:var(--mat-optgroup-label-text-weight)}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;min-height:48px}.mat-mdc-optgroup-label:focus{outline:none}[dir=rtl] .mat-mdc-optgroup-label,.mat-mdc-optgroup-label[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal}\"]\n    }]\n  }], null, null);\n})();\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n  constructor( /** Reference to the option that emitted the event. */\n  source, /** Whether the change in the option's value was a result of a user action. */\n  isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n}\nclass _MatOptionBase {\n  /** Whether the wrapping component is in multiple selection mode. */\n  get multiple() {\n    return this._parent && this._parent.multiple;\n  }\n\n  /** Whether or not the option is currently selected. */\n  get selected() {\n    return this._selected;\n  }\n\n  /** Whether the option is disabled. */\n  get disabled() {\n    return this.group && this.group.disabled || this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  /** Whether ripples for the option are disabled. */\n  get disableRipple() {\n    return !!(this._parent && this._parent.disableRipple);\n  }\n\n  /** Whether to display checkmark for single-selection. */\n  get hideSingleSelectionIndicator() {\n    return !!(this._parent && this._parent.hideSingleSelectionIndicator);\n  }\n  constructor(_element, _changeDetectorRef, _parent, group) {\n    this._element = _element;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parent = _parent;\n    this.group = group;\n    this._selected = false;\n    this._active = false;\n    this._disabled = false;\n    this._mostRecentViewValue = '';\n    /** The unique ID of the option. */\n    this.id = `mat-option-${_uniqueIdCounter++}`;\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onSelectionChange = new EventEmitter();\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    this._stateChanges = new Subject();\n  }\n\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active() {\n    return this._active;\n  }\n\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue() {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._text?.nativeElement.textContent || '').trim();\n  }\n\n  /** Selects the option. */\n  select(emitEvent = true) {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      if (emitEvent) {\n        this._emitSelectionChangeEvent();\n      }\n    }\n  }\n\n  /** Deselects the option. */\n  deselect(emitEvent = true) {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      if (emitEvent) {\n        this._emitSelectionChangeEvent();\n      }\n    }\n  }\n\n  /** Sets focus onto this option. */\n  focus(_origin, options) {\n    // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n    // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n    const element = this._getHostElement();\n    if (typeof element.focus === 'function') {\n      element.focus(options);\n    }\n  }\n\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles() {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles() {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel() {\n    return this.viewValue;\n  }\n\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n      this._selectViaInteraction();\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n  _selectViaInteraction() {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  // This method is only used by `MatLegacyOption`. Keeping it here to avoid breaking the types.\n  // That's because `MatLegacyOption` use `MatOption` type in a few places such as\n  // `MatOptionSelectionChange`. It is safe to delete this when `MatLegacyOption` is deleted.\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Gets the host DOM element. */\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n      if (viewValue !== this._mostRecentViewValue) {\n        if (this._mostRecentViewValue) {\n          this._stateChanges.next();\n        }\n        this._mostRecentViewValue = viewValue;\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  /** Emits the selection change event. */\n  _emitSelectionChangeEvent(isUserInput = false) {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n  static #_ = this.ɵfac = function _MatOptionBase_Factory(t) {\n    i0.ɵɵinvalidFactory();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _MatOptionBase,\n    viewQuery: function _MatOptionBase_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c2, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._text = _t.first);\n      }\n    },\n    inputs: {\n      value: \"value\",\n      id: \"id\",\n      disabled: \"disabled\"\n    },\n    outputs: {\n      onSelectionChange: \"onSelectionChange\"\n    }\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatOptionBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined\n    }, {\n      type: _MatOptgroupBase\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    _text: [{\n      type: ViewChild,\n      args: ['text', {\n        static: true\n      }]\n    }]\n  });\n})();\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n  constructor(element, changeDetectorRef, parent, group) {\n    super(element, changeDetectorRef, parent, group);\n  }\n  static #_ = this.ɵfac = function MatOption_Factory(t) {\n    return new (t || MatOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), i0.ɵɵdirectiveInject(MAT_OPTGROUP, 8));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatOption,\n    selectors: [[\"mat-option\"]],\n    hostAttrs: [\"role\", \"option\", 1, \"mat-mdc-option\", \"mdc-list-item\"],\n    hostVars: 11,\n    hostBindings: function MatOption_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n          return ctx._selectViaInteraction();\n        })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled.toString());\n        i0.ɵɵclassProp(\"mdc-list-item--selected\", ctx.selected)(\"mat-mdc-option-multiple\", ctx.multiple)(\"mat-mdc-option-active\", ctx.active)(\"mdc-list-item--disabled\", ctx.disabled);\n      }\n    },\n    exportAs: [\"matOption\"],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c4,\n    decls: 8,\n    vars: 5,\n    consts: [[\"class\", \"mat-mdc-option-pseudo-checkbox\", \"aria-hidden\", \"true\", 3, \"disabled\", \"state\", 4, \"ngIf\"], [1, \"mdc-list-item__primary-text\"], [\"text\", \"\"], [\"class\", \"mat-mdc-option-pseudo-checkbox\", \"state\", \"checked\", \"aria-hidden\", \"true\", \"appearance\", \"minimal\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"cdk-visually-hidden\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-mdc-option-ripple\", \"mat-mdc-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\", \"state\"], [\"state\", \"checked\", \"aria-hidden\", \"true\", \"appearance\", \"minimal\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\"], [1, \"cdk-visually-hidden\"]],\n    template: function MatOption_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c3);\n        i0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementStart(2, \"span\", 1, 2);\n        i0.ɵɵprojection(4, 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, MatOption_mat_pseudo_checkbox_5_Template, 1, 1, \"mat-pseudo-checkbox\", 3);\n        i0.ɵɵtemplate(6, MatOption_span_6_Template, 2, 1, \"span\", 4);\n        i0.ɵɵelement(7, \"div\", 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.multiple && ctx.selected && !ctx.hideSingleSelectionIndicator);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.group && ctx.group._inert);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n      }\n    },\n    dependencies: [MatRipple, i3.NgIf, MatPseudoCheckbox],\n    styles: [\".mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color);font-family:var(--mat-option-label-text-font);line-height:var(--mat-option-label-text-line-height);font-size:var(--mat-option-label-text-size);letter-spacing:var(--mat-option-label-text-tracking);font-weight:var(--mat-option-label-text-weight);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color)}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color)}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-option',\n      exportAs: 'matOption',\n      host: {\n        'role': 'option',\n        '[class.mdc-list-item--selected]': 'selected',\n        '[class.mat-mdc-option-multiple]': 'multiple',\n        '[class.mat-mdc-option-active]': 'active',\n        '[class.mdc-list-item--disabled]': 'disabled',\n        '[id]': 'id',\n        // Set aria-selected to false for non-selected items and true for selected items. Conform to\n        // [WAI ARIA Listbox authoring practices guide](\n        //  https://www.w3.org/WAI/ARIA/apg/patterns/listbox/), \"If any options are selected, each\n        // selected option has either aria-selected or aria-checked  set to true. All options that are\n        // selectable but not selected have either aria-selected or aria-checked set to false.\" Align\n        // aria-selected implementation of Chips and List components.\n        //\n        // Set `aria-selected=\"false\"` on not-selected listbox options to fix VoiceOver announcing\n        // every option as \"selected\" (#21491).\n        '[attr.aria-selected]': 'selected',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        'class': 'mat-mdc-option mdc-list-item'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<!-- Set aria-hidden=\\\"true\\\" to this DOM node and other decorative nodes in this file. This might\\n be contributing to issue where sometimes VoiceOver focuses on a TextNode in the a11y tree instead\\n of the Option node (#23202). Most assistive technology will generally ignore non-role,\\n non-text-content elements. Adding aria-hidden seems to make VoiceOver behave more consistently. -->\\n<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-mdc-option-pseudo-checkbox\\\" [disabled]=\\\"disabled\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" aria-hidden=\\\"true\\\"></mat-pseudo-checkbox>\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- Render checkmark at the end for single-selection. -->\\n<mat-pseudo-checkbox *ngIf=\\\"!multiple && selected && !hideSingleSelectionIndicator\\\"\\n    class=\\\"mat-mdc-option-pseudo-checkbox\\\" [disabled]=\\\"disabled\\\" state=\\\"checked\\\"\\n    aria-hidden=\\\"true\\\" appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-mdc-option-ripple mat-mdc-focus-indicator\\\" aria-hidden=\\\"true\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n      styles: [\".mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color);font-family:var(--mat-option-label-text-font);line-height:var(--mat-option-label-text-line-height);font-size:var(--mat-option-label-text-size);letter-spacing:var(--mat-option-label-text-tracking);font-weight:var(--mat-option-label-text-weight);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color)}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color)}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }]\n    }, {\n      type: MatOptgroup,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTGROUP]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n    return groupCounter;\n  }\n  return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n  return currentScrollPosition;\n}\nclass MatOptionModule {\n  static #_ = this.ɵfac = function MatOptionModule_Factory(t) {\n    return new (t || MatOptionModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatOptionModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOptionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n      exports: [MatOption, MatOptgroup],\n      declarations: [MatOption, MatOptgroup]\n    }]\n  }], null, null);\n})();\n\n/** The options for the MatRippleLoader's event listeners. */\nconst eventListenerOptions = {\n  capture: true\n};\n/** The events that should trigger the initialization of the ripple. */\nconst rippleInteractionEvents = ['focus', 'click', 'mouseenter', 'touchstart'];\n/** The attribute attached to a component whose ripple has not yet been initialized. */\nconst matRippleUninitialized = 'mat-ripple-loader-uninitialized';\n/** Additional classes that should be added to the ripple when it is rendered. */\nconst matRippleClassName = 'mat-ripple-loader-class-name';\n/** Whether the ripple should be centered. */\nconst matRippleCentered = 'mat-ripple-loader-centered';\n/** Whether the ripple should be disabled. */\nconst matRippleDisabled = 'mat-ripple-loader-disabled';\n\n/**\n * Handles attaching ripples on demand.\n *\n * This service allows us to avoid eagerly creating & attaching MatRipples.\n * It works by creating & attaching a ripple only when a component is first interacted with.\n */\nclass MatRippleLoader {\n  constructor() {\n    this._document = inject(DOCUMENT, {\n      optional: true\n    });\n    this._animationMode = inject(ANIMATION_MODULE_TYPE$1, {\n      optional: true\n    });\n    this._globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n      optional: true\n    });\n    this._platform = inject(Platform);\n    this._ngZone = inject(NgZone);\n    /** Handles creating and attaching component internals when a component it is initially interacted with. */\n    this._onInteraction = event => {\n      if (!(event.target instanceof HTMLElement)) {\n        return;\n      }\n      const eventTarget = event.target;\n      // TODO(wagnermaciel): Consider batching these events to improve runtime performance.\n      const element = eventTarget.closest(`[${matRippleUninitialized}]`);\n      if (element) {\n        this.createRipple(element);\n      }\n    };\n    this._ngZone.runOutsideAngular(() => {\n      for (const event of rippleInteractionEvents) {\n        this._document?.addEventListener(event, this._onInteraction, eventListenerOptions);\n      }\n    });\n  }\n  ngOnDestroy() {\n    for (const event of rippleInteractionEvents) {\n      this._document?.removeEventListener(event, this._onInteraction, eventListenerOptions);\n    }\n  }\n\n  /**\n   * Configures the ripple that will be rendered by the ripple loader.\n   *\n   * Stores the given information about how the ripple should be configured on the host\n   * element so that it can later be retrived & used when the ripple is actually created.\n   */\n  configureRipple(host, config) {\n    // Indicates that the ripple has not yet been rendered for this component.\n    host.setAttribute(matRippleUninitialized, '');\n    // Store the additional class name(s) that should be added to the ripple element.\n    if (config.className || !host.hasAttribute(matRippleClassName)) {\n      host.setAttribute(matRippleClassName, config.className || '');\n    }\n    // Store whether the ripple should be centered.\n    if (config.centered) {\n      host.setAttribute(matRippleCentered, '');\n    }\n    if (config.disabled) {\n      host.setAttribute(matRippleDisabled, '');\n    }\n  }\n\n  /** Returns the ripple instance for the given host element. */\n  getRipple(host) {\n    if (host.matRipple) {\n      return host.matRipple;\n    }\n    return this.createRipple(host);\n  }\n\n  /** Sets the disabled state on the ripple instance corresponding to the given host element. */\n  setDisabled(host, disabled) {\n    const ripple = host.matRipple;\n    // If the ripple has already been instantiated, just disable it.\n    if (ripple) {\n      ripple.disabled = disabled;\n      return;\n    }\n    // Otherwise, set an attribute so we know what the\n    // disabled state should be when the ripple is initialized.\n    if (disabled) {\n      host.setAttribute(matRippleDisabled, '');\n    } else {\n      host.removeAttribute(matRippleDisabled);\n    }\n  }\n\n  /** Creates a MatRipple and appends it to the given element. */\n  createRipple(host) {\n    if (!this._document) {\n      return;\n    }\n    // Create the ripple element.\n    host.querySelector('.mat-ripple')?.remove();\n    const rippleEl = this._document.createElement('span');\n    rippleEl.classList.add('mat-ripple', host.getAttribute(matRippleClassName));\n    host.append(rippleEl);\n    // Create the MatRipple.\n    const ripple = new MatRipple(new ElementRef(rippleEl), this._ngZone, this._platform, this._globalRippleOptions ? this._globalRippleOptions : undefined, this._animationMode ? this._animationMode : undefined);\n    ripple._isInitialized = true;\n    ripple.trigger = host;\n    ripple.centered = host.hasAttribute(matRippleCentered);\n    ripple.disabled = host.hasAttribute(matRippleDisabled);\n    this.attachRipple(host, ripple);\n    return ripple;\n  }\n  attachRipple(host, ripple) {\n    host.removeAttribute(matRippleUninitialized);\n    host.matRipple = ripple;\n  }\n  static #_ = this.ɵfac = function MatRippleLoader_Factory(t) {\n    return new (t || MatRippleLoader)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MatRippleLoader,\n    factory: MatRippleLoader.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRippleLoader, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleLoader, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines };","map":{"version":3,"names":["i0","Version","InjectionToken","inject","NgModule","Optional","Inject","LOCALE_ID","Injectable","Directive","Input","Component","ViewEncapsulation","ChangeDetectionStrategy","EventEmitter","Output","ViewChild","ANIMATION_MODULE_TYPE","ANIMATION_MODULE_TYPE$1","NgZone","ElementRef","i1","isFakeMousedownFromScreenReader","isFakeTouchstartFromScreenReader","BidiModule","VERSION","VERSION$1","i3","DOCUMENT","CommonModule","i1$1","Platform","_isTestEnvironment","normalizePassiveListenerOptions","_getEventTarget","coerceBooleanProperty","coerceNumberProperty","coerceElement","Observable","Subject","startWith","ENTER","SPACE","hasModifierKey","_c0","_c1","_c2","MatOption_mat_pseudo_checkbox_0_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","disabled","selected","MatOption_mat_pseudo_checkbox_5_Template","ctx_r2","MatOption_span_6_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r3","ɵɵadvance","ɵɵtextInterpolate1","group","label","_c3","_c4","AnimationCurves","_","STANDARD_CURVE","_2","DECELERATION_CURVE","_3","ACCELERATION_CURVE","_4","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","providedIn","factory","MatCommonModule","constructor","highContrastModeDetector","_sanityChecks","_document","_hasDoneGlobalChecks","_applyBodyHighContrastModeCssClasses","ngDevMode","platform","optional","_checkIsEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","isBrowser","_checkCdkVersionMatch","name","ɵfac","MatCommonModule_Factory","t","ɵɵinject","HighContrastModeDetector","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","imports","ɵsetClassMetadata","args","exports","undefined","decorators","Document","doc","doctype","console","warn","body","testElement","createElement","classList","add","appendChild","computedStyle","getComputedStyle","display","remove","full","mixinDisabled","base","_disabled","value","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","mixinDisableRipple","disableRipple","_disableRipple","mixinTabIndex","defaultTabIndex","tabIndex","_tabIndex","mixinErrorState","updateErrorState","oldState","errorState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","stateChanges","next","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","push","_markInitialized","Error","forEach","complete","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","DateAdapter","_localeChanges","localeChanges","getValidDateOrNull","obj","isDateInstance","isValid","deserialize","invalid","setLocale","locale","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","max","MAT_DATE_FORMATS","ISO_8601_REGEX","range","length","valueFunction","valuesArray","Array","i","NativeDateAdapter","matDateLocale","_platform","useUtcForDisplay","getFullYear","getDayOfWeek","getDay","getMonthNames","style","dtf","Intl","DateTimeFormat","month","timeZone","_format","Date","getDateNames","day","getDayOfWeekNames","weekday","getYearName","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","getTime","createDate","result","today","parse","parseFormat","format","displayFormat","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","isNaN","NaN","d","setFullYear","setHours","n","slice","setUTCFullYear","setUTCHours","getHours","getMinutes","getSeconds","getMilliseconds","NativeDateAdapter_Factory","ɵprov","ɵɵdefineInjectable","token","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","NativeDateModule_Factory","providers","provide","useClass","MatNativeDateModule","MatNativeDateModule_Factory","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ShowOnDirtyErrorStateMatcher_Factory","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","MatLine","MatLine_Factory","ɵdir","ɵɵdefineDirective","selectors","hostAttrs","selector","host","setLines","lines","element","prefix","changes","pipe","subscribe","setClass","className","isAdd","toggle","MatLineModule","MatLineModule_Factory","declarations","RippleRef","_renderer","config","_animationForciblyDisabledThroughCss","state","fadeOut","fadeOutRipple","passiveCapturingEventOptions$1","passive","capture","RippleEventManager","_events","Map","_delegateEventHandler","event","target","get","handlers","contains","handler","handleEvent","addHandler","ngZone","handlersForEvent","handlersForElement","set","Set","runOutsideAngular","document","addEventListener","removeHandler","delete","size","removeEventListener","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveCapturingEventOptions","pointerDownEvents","pointerUpEvents","RippleRenderer","_eventManager","_target","_ngZone","elementOrElementRef","_isPointerDown","_activeRipples","_pointerUpEventsRegistered","_containerElement","fadeInRipple","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","height","radius","distanceToFurthestCorner","offsetX","offsetY","ripple","backgroundColor","transitionDuration","computedStyles","window","userTransitionProperty","transitionProperty","userTransitionDuration","animationForciblyDisabledThroughCss","rippleRef","transform","persistent","_mostRecentTransientRipple","eventListeners","onTransitionEnd","_finishRippleTransition","onTransitionCancel","_destroyRipple","rippleEl","opacity","fadeOutAll","_getActiveRipples","fadeOutAllNonPersistent","setupTriggerEvents","_triggerElement","_removeTriggerEvents","_onMousedown","_onTouchStart","_onPointerUp","_startFadeOutTransition","isMostRecentTransientRipple","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","clientX","clientY","rippleConfig","touches","changedTouches","isVisible","terminateOnPointerUp","from","keys","trigger","rect","distX","Math","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","_setupTriggerEventsIfEnabled","_trigger","globalOptions","_animationMode","_globalOptions","_rippleRenderer","ngOnInit","ngOnDestroy","launch","configOrX","MatRipple_Factory","ɵɵdirectiveInject","hostVars","hostBindings","MatRipple_HostBindings","ɵɵclassProp","unbounded","inputs","exportAs","MatRippleModule","MatRippleModule_Factory","MatPseudoCheckbox","appearance","MatPseudoCheckbox_Factory","ɵcmp","ɵɵdefineComponent","MatPseudoCheckbox_HostBindings","decls","vars","template","MatPseudoCheckbox_Template","styles","encapsulation","changeDetection","None","OnPush","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MAT_OPTION_PARENT_COMPONENT","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_MatOptgroupBase","_labelId","_inert","inertGroups","_MatOptgroupBase_Factory","features","ɵɵInheritDefinitionFeature","MAT_OPTGROUP","MatOptgroup","ɵMatOptgroup_BaseFactory","MatOptgroup_Factory","ɵɵgetInheritedFactory","MatOptgroup_HostBindings","ɵɵattribute","toString","ɵɵProvidersFeature","useExisting","ngContentSelectors","consts","MatOptgroup_Template","ɵɵprojectionDef","ɵɵprojection","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","_MatOptionBase","multiple","_parent","_selected","hideSingleSelectionIndicator","_element","_changeDetectorRef","_active","_mostRecentViewValue","id","onSelectionChange","_stateChanges","active","viewValue","_text","textContent","trim","select","emitEvent","markForCheck","_emitSelectionChangeEvent","deselect","focus","_origin","options","_getHostElement","setActiveStyles","setInactiveStyles","getLabel","_handleKeydown","keyCode","_selectViaInteraction","preventDefault","_getTabIndex","ngAfterViewChecked","emit","_MatOptionBase_Factory","ɵɵinvalidFactory","viewQuery","_MatOptionBase_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","outputs","ChangeDetectorRef","static","MatOption","changeDetectorRef","MatOption_Factory","MatOption_HostBindings","ɵɵlistener","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","$event","ɵɵhostProperty","MatOption_Template","ɵɵtemplate","dependencies","NgIf","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","MatOptionModule","MatOptionModule_Factory","eventListenerOptions","rippleInteractionEvents","matRippleUninitialized","matRippleClassName","matRippleCentered","matRippleDisabled","MatRippleLoader","_globalRippleOptions","_onInteraction","HTMLElement","eventTarget","closest","createRipple","configureRipple","setAttribute","hasAttribute","getRipple","matRipple","setDisabled","removeAttribute","querySelector","getAttribute","append","attachRipple","MatRippleLoader_Factory"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/@angular/material/fesm2022/core.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport {\n  Version,\n  InjectionToken,\n  inject,\n  NgModule,\n  Optional,\n  Inject,\n  LOCALE_ID,\n  Injectable,\n  Directive,\n  Input,\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  EventEmitter,\n  Output,\n  ViewChild,\n  ANIMATION_MODULE_TYPE as ANIMATION_MODULE_TYPE$1,\n  NgZone,\n  ElementRef\n} from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport {isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader} from '@angular/cdk/a11y';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {VERSION as VERSION$1} from '@angular/cdk';\nimport * as i3 from '@angular/common';\nimport {DOCUMENT, CommonModule} from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport {Platform, _isTestEnvironment, normalizePassiveListenerOptions, _getEventTarget} from '@angular/cdk/platform';\nimport {coerceBooleanProperty, coerceNumberProperty, coerceElement} from '@angular/cdk/coercion';\nimport {Observable, Subject} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {ENTER, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\n\n/** Current version of Angular Material. */\nconst VERSION = new Version('16.2.10');\n\n/** @docs-private */\nclass AnimationCurves {\n  static {\n    this.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  }\n  static {\n    this.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  }\n  static {\n    this.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  }\n  static {\n    this.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n  }\n}\n\n/** @docs-private */\nclass AnimationDurations {\n  static {\n    this.COMPLEX = '375ms';\n  }\n  static {\n    this.ENTERING = '225ms';\n  }\n  static {\n    this.EXITING = '195ms';\n  }\n}\n\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n  constructor(highContrastModeDetector, _sanityChecks, _document) {\n    this._sanityChecks = _sanityChecks;\n    this._document = _document;\n    /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n    this._hasDoneGlobalChecks = false;\n    // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n    // in MatCommonModule.\n    highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    if (!this._hasDoneGlobalChecks) {\n      this._hasDoneGlobalChecks = true;\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Inject in here so the reference to `Platform` can be removed in production mode.\n        const platform = inject(Platform, {optional: true});\n        if (this._checkIsEnabled('doctype')) {\n          _checkDoctypeIsDefined(this._document);\n        }\n        if (this._checkIsEnabled('theme')) {\n          _checkThemeIsPresent(this._document, !!platform?.isBrowser);\n        }\n        if (this._checkIsEnabled('version')) {\n          _checkCdkVersionMatch();\n        }\n      }\n    }\n  }\n\n  /** Gets whether a specific sanity check is enabled. */\n  _checkIsEnabled(name) {\n    if (_isTestEnvironment()) {\n      return false;\n    }\n    if (typeof this._sanityChecks === 'boolean') {\n      return this._sanityChecks;\n    }\n    return !!this._sanityChecks[name];\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCommonModule,\n      deps: [{token: i1.HighContrastModeDetector}, {token: MATERIAL_SANITY_CHECKS, optional: true}, {token: DOCUMENT}],\n      target: i0.ɵɵFactoryTarget.NgModule\n    });\n  }\n  static {\n    this.ɵmod = i0.ɵɵngDeclareNgModule({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCommonModule,\n      imports: [BidiModule],\n      exports: [BidiModule]\n    });\n  }\n  static {\n    this.ɵinj = i0.ɵɵngDeclareInjector({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCommonModule,\n      imports: [BidiModule, BidiModule]\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCommonModule, decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [BidiModule],\n    }]\n  }], ctorParameters: function () {\n    return [{type: i1.HighContrastModeDetector}, {\n      type: undefined, decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MATERIAL_SANITY_CHECKS]\n      }]\n    }, {\n      type: Document, decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }\n});\n\n/** Checks that the page has a doctype. */\nfunction _checkDoctypeIsDefined(doc) {\n  if (!doc.doctype) {\n    console.warn('Current document does not have a doctype. This may cause ' +\n      'some Angular Material components not to behave as expected.');\n  }\n}\n\n/** Checks that a theme has been included. */\nfunction _checkThemeIsPresent(doc, isBrowser) {\n  // We need to assert that the `body` is defined, because these checks run very early\n  // and the `body` won't be defined if the consumer put their scripts in the `head`.\n  if (!doc.body || !isBrowser) {\n    return;\n  }\n  const testElement = doc.createElement('div');\n  testElement.classList.add('mat-theme-loaded-marker');\n  doc.body.appendChild(testElement);\n  const computedStyle = getComputedStyle(testElement);\n  // In some situations the computed style of the test element can be null. For example in\n  // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  if (computedStyle && computedStyle.display !== 'none') {\n    console.warn('Could not find Angular Material core theme. Most Material ' +\n      'components may not work as expected. For more info refer ' +\n      'to the theming guide: https://material.angular.io/guide/theming');\n  }\n  testElement.remove();\n}\n\n/** Checks whether the Material version matches the CDK version. */\nfunction _checkCdkVersionMatch() {\n  if (VERSION.full !== VERSION$1.full) {\n    console.warn('The Angular Material version (' +\n      VERSION.full +\n      ') does not match ' +\n      'the Angular CDK version (' +\n      VERSION$1.full +\n      ').\\n' +\n      'Please ensure the versions of these two packages exactly match.');\n  }\n}\n\nfunction mixinDisabled(base) {\n  return class extends base {\n    get disabled() {\n      return this._disabled;\n    }\n\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n\n    constructor(...args) {\n      super(...args);\n      this._disabled = false;\n    }\n  };\n}\n\nfunction mixinColor(base, defaultColor) {\n  return class extends base {\n    get color() {\n      return this._color;\n    }\n\n    set color(value) {\n      const colorPalette = value || this.defaultColor;\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n        this._color = colorPalette;\n      }\n    }\n\n    constructor(...args) {\n      super(...args);\n      this.defaultColor = defaultColor;\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\n\nfunction mixinDisableRipple(base) {\n  return class extends base {\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n      return this._disableRipple;\n    }\n\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n\n    constructor(...args) {\n      super(...args);\n      this._disableRipple = false;\n    }\n  };\n}\n\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n  return class extends base {\n    get tabIndex() {\n      return this.disabled ? -1 : this._tabIndex;\n    }\n\n    set tabIndex(value) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n    }\n\n    constructor(...args) {\n      super(...args);\n      this._tabIndex = defaultTabIndex;\n      this.defaultTabIndex = defaultTabIndex;\n    }\n  };\n}\n\nfunction mixinErrorState(base) {\n  return class extends base {\n    /** Updates the error state based on the provided error state matcher. */\n    updateErrorState() {\n      const oldState = this.errorState;\n      const parent = this._parentFormGroup || this._parentForm;\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      const control = this.ngControl ? this.ngControl.control : null;\n      const newState = matcher.isErrorState(control, parent);\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n\n    constructor(...args) {\n      super(...args);\n      /** Whether the component is in an error state. */\n      this.errorState = false;\n    }\n  };\n}\n\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      /** Whether this directive has been marked as initialized. */\n      this._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n      this._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n      this.initialized = new Observable(subscriber => {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (this._isInitialized) {\n          this._notifySubscriber(subscriber);\n        } else {\n          this._pendingSubscribers.push(subscriber);\n        }\n      });\n    }\n\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n    _markInitialized() {\n      if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('This directive has already been marked as initialized and ' +\n          'should not be called twice.');\n      }\n      this._isInitialized = true;\n      this._pendingSubscribers.forEach(this._notifySubscriber);\n      this._pendingSubscribers = null;\n    }\n\n    /** Emits and completes the subscriber stream (should only emit once). */\n    _notifySubscriber(subscriber) {\n      subscriber.next();\n      subscriber.complete();\n    }\n  };\n}\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY,\n});\n\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n  constructor() {\n    this._localeChanges = new Subject();\n    /** A stream that emits when the locale changes. */\n    this.localeChanges = this._localeChanges;\n  }\n\n  /**\n   * Given a potential date object, returns that same date object if it is\n   * a valid date, or `null` if it's not a valid date.\n   * @param obj The object to check.\n   * @returns A date or `null`.\n   */\n  getValidDateOrNull(obj) {\n    return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n  }\n\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value) {\n    if (value == null || (this.isDateInstance(value) && this.isValid(value))) {\n      return value;\n    }\n    return this.invalid();\n  }\n\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first, second) {\n    return (this.getYear(first) - this.getYear(second) ||\n      this.getMonth(first) - this.getMonth(second) ||\n      this.getDate(first) - this.getDate(second));\n  }\n\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first, second) {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date, min, max) {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n  constructor(matDateLocale,\n              /**\n               * @deprecated No longer being used. To be removed.\n               * @breaking-change 14.0.0\n               */\n              _platform) {\n    super();\n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    this.useUtcForDisplay = false;\n    super.setLocale(matDateLocale);\n  }\n\n  getYear(date) {\n    return date.getFullYear();\n  }\n\n  getMonth(date) {\n    return date.getMonth();\n  }\n\n  getDate(date) {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date) {\n    return date.getDay();\n  }\n\n  getMonthNames(style) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {month: style, timeZone: 'utc'});\n    return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n  }\n\n  getDateNames() {\n    const dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric', timeZone: 'utc'});\n    return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n  }\n\n  getDayOfWeekNames(style) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {weekday: style, timeZone: 'utc'});\n    return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n  }\n\n  getYearName(date) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric', timeZone: 'utc'});\n    return this._format(dtf, date);\n  }\n\n  getFirstDayOfWeek() {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n\n  getNumDaysInMonth(date) {\n    return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n\n  clone(date) {\n    return new Date(date.getTime());\n  }\n\n  createDate(year, month, date) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      // Check for invalid month and date (except upper bound on date which we have to check after\n      // creating the Date).\n      if (month < 0 || month > 11) {\n        throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n      }\n      if (date < 1) {\n        throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n      }\n    }\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n    return result;\n  }\n\n  today() {\n    return new Date();\n  }\n\n  parse(value, parseFormat) {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n\n  format(date, displayFormat) {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n    const dtf = new Intl.DateTimeFormat(this.locale, {...displayFormat, timeZone: 'utc'});\n    return this._format(dtf, date);\n  }\n\n  addCalendarYears(date, years) {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date, months) {\n    let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != (((this.getMonth(date) + months) % 12) + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n    return newDate;\n  }\n\n  addCalendarDays(date, days) {\n    return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n\n  toIso8601(date) {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate()),\n    ].join('-');\n  }\n\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value) {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj) {\n    return obj instanceof Date;\n  }\n\n  isValid(date) {\n    return !isNaN(date.getTime());\n  }\n\n  invalid() {\n    return new Date(NaN);\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  _createDateWithOverflow(year, month, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setFullYear` and `setHours` instead.\n    const d = new Date();\n    d.setFullYear(year, month, date);\n    d.setHours(0, 0, 0, 0);\n    return d;\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  _2digit(n) {\n    return ('00' + n).slice(-2);\n  }\n\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containing the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  _format(dtf, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n    const d = new Date();\n    d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n    return dtf.format(d);\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: NativeDateAdapter,\n      deps: [{token: MAT_DATE_LOCALE, optional: true}, {token: i1$1.Platform}],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.ɵprov = i0.ɵɵngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: NativeDateAdapter\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: NativeDateAdapter, decorators: [{\n    type: Injectable\n  }], ctorParameters: function () {\n    return [{\n      type: undefined, decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_LOCALE]\n      }]\n    }, {type: i1$1.Platform}];\n  }\n});\n\nconst MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n    monthYearLabel: {year: 'numeric', month: 'short'},\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\n  },\n};\n\nclass NativeDateModule {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: NativeDateModule,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.NgModule\n    });\n  }\n  static {\n    this.ɵmod = i0.ɵɵngDeclareNgModule({minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: NativeDateModule});\n  }\n  static {\n    this.ɵinj = i0.ɵɵngDeclareInjector({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: NativeDateModule,\n      providers: [{provide: DateAdapter, useClass: NativeDateAdapter}]\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: NativeDateModule, decorators: [{\n    type: NgModule,\n    args: [{\n      providers: [{provide: DateAdapter, useClass: NativeDateAdapter}],\n    }]\n  }]\n});\n\nclass MatNativeDateModule {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatNativeDateModule,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.NgModule\n    });\n  }\n  static {\n    this.ɵmod = i0.ɵɵngDeclareNgModule({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatNativeDateModule,\n      imports: [NativeDateModule]\n    });\n  }\n  static {\n    this.ɵinj = i0.ɵɵngDeclareInjector({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatNativeDateModule,\n      providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS}],\n      imports: [NativeDateModule]\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatNativeDateModule, decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [NativeDateModule],\n      providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS}],\n    }]\n  }]\n});\n\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: ShowOnDirtyErrorStateMatcher,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.ɵprov = i0.ɵɵngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: ShowOnDirtyErrorStateMatcher\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, decorators: [{\n    type: Injectable\n  }]\n});\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: ErrorStateMatcher,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.ɵprov = i0.ɵɵngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: ErrorStateMatcher,\n      providedIn: 'root'\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ErrorStateMatcher, decorators: [{\n    type: Injectable,\n    args: [{providedIn: 'root'}]\n  }]\n});\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatLine,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatLine,\n      selector: \"[mat-line], [matLine]\",\n      host: {classAttribute: \"mat-line\"},\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatLine, decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[mat-line], [matLine]',\n      host: {'class': 'mat-line'},\n    }]\n  }]\n});\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(({length}) => {\n    setClass(element, `${prefix}-2-line`, false);\n    setClass(element, `${prefix}-3-line`, false);\n    setClass(element, `${prefix}-multi-line`, false);\n    if (length === 2 || length === 3) {\n      setClass(element, `${prefix}-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `${prefix}-multi-line`, true);\n    }\n  });\n}\n\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n  element.nativeElement.classList.toggle(className, isAdd);\n}\n\nclass MatLineModule {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatLineModule,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.NgModule\n    });\n  }\n  static {\n    this.ɵmod = i0.ɵɵngDeclareNgModule({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatLineModule,\n      declarations: [MatLine],\n      imports: [MatCommonModule],\n      exports: [MatLine, MatCommonModule]\n    });\n  }\n  static {\n    this.ɵinj = i0.ɵɵngDeclareInjector({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatLineModule,\n      imports: [MatCommonModule, MatCommonModule]\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatLineModule, decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatLine, MatCommonModule],\n      declarations: [MatLine],\n    }]\n  }]\n});\n\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n  constructor(_renderer,\n              /** Reference to the ripple HTML element. */\n              element,\n              /** Ripple configuration used for the ripple. */\n              config,\n              /* Whether animations are forcibly disabled for ripples through CSS. */\n              _animationForciblyDisabledThroughCss = false) {\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n    /** Current state of the ripple. */\n    this.state = 3 /* RippleState.HIDDEN */;\n  }\n\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions$1 = normalizePassiveListenerOptions({\n  passive: true,\n  capture: true,\n});\n\n/** Manages events through delegation so that as few event handlers as possible are bound. */\nclass RippleEventManager {\n  constructor() {\n    this._events = new Map();\n    /** Event handler that is bound and which dispatches the events to the different targets. */\n    this._delegateEventHandler = (event) => {\n      const target = _getEventTarget(event);\n      if (target) {\n        this._events.get(event.type)?.forEach((handlers, element) => {\n          if (element === target || element.contains(target)) {\n            handlers.forEach(handler => handler.handleEvent(event));\n          }\n        });\n      }\n    };\n  }\n\n  /** Adds an event handler. */\n  addHandler(ngZone, name, element, handler) {\n    const handlersForEvent = this._events.get(name);\n    if (handlersForEvent) {\n      const handlersForElement = handlersForEvent.get(element);\n      if (handlersForElement) {\n        handlersForElement.add(handler);\n      } else {\n        handlersForEvent.set(element, new Set([handler]));\n      }\n    } else {\n      this._events.set(name, new Map([[element, new Set([handler])]]));\n      ngZone.runOutsideAngular(() => {\n        document.addEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n      });\n    }\n  }\n\n  /** Removes an event handler. */\n  removeHandler(name, element, handler) {\n    const handlersForEvent = this._events.get(name);\n    if (!handlersForEvent) {\n      return;\n    }\n    const handlersForElement = handlersForEvent.get(element);\n    if (!handlersForElement) {\n      return;\n    }\n    handlersForElement.delete(handler);\n    if (handlersForElement.size === 0) {\n      handlersForEvent.delete(element);\n    }\n    if (handlersForEvent.size === 0) {\n      this._events.delete(name);\n      document.removeEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n    }\n  }\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n  enterDuration: 225,\n  exitDuration: 150,\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions = normalizePassiveListenerOptions({\n  passive: true,\n  capture: true,\n});\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n  static {\n    this._eventManager = new RippleEventManager();\n  }\n\n  constructor(_target, _ngZone, elementOrElementRef, _platform) {\n    this._target = _target;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    /** Whether the pointer is currently down or not. */\n    this._isPointerDown = false;\n    /**\n     * Map of currently active ripple references.\n     * The ripple reference is mapped to its element event listeners.\n     * The reason why `| null` is used is that event listeners are added only\n     * when the condition is truthy (see the `_startFadeOutTransition` method).\n     */\n    this._activeRipples = new Map();\n    /** Whether pointer-up event listeners have been registered. */\n    this._pointerUpEventsRegistered = false;\n    // Only do anything if we're on the browser.\n    if (_platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n    }\n  }\n\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n  fadeInRipple(x, y, config = {}) {\n    const containerRect = (this._containerRect =\n      this._containerRect || this._containerElement.getBoundingClientRect());\n    const animationConfig = {...defaultRippleAnimationConfig, ...config.animation};\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const enterDuration = animationConfig.enterDuration;\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n    // If a custom color has been specified, set it as inline style. If no color is\n    // set, the default color will be applied through the ripple theme styles.\n    if (config.color != null) {\n      ripple.style.backgroundColor = config.color;\n    }\n    ripple.style.transitionDuration = `${enterDuration}ms`;\n    this._containerElement.appendChild(ripple);\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical to ensure that the `scale` animates properly.\n    // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    const computedStyles = window.getComputedStyle(ripple);\n    const userTransitionProperty = computedStyles.transitionProperty;\n    const userTransitionDuration = computedStyles.transitionDuration;\n    // Note: We detect whether animation is forcibly disabled through CSS (e.g. through\n    // `transition: none` or `display: none`). This is technically unexpected since animations are\n    // controlled through the animation config, but this exists for backwards compatibility. This\n    // logic does not need to be super accurate since it covers some edge cases which can be easily\n    // avoided by users.\n    const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' ||\n      // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n      // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n      userTransitionDuration === '0s' ||\n      userTransitionDuration === '0s, 0s' ||\n      // If the container is 0x0, it's likely `display: none`.\n      (containerRect.width === 0 && containerRect.height === 0);\n    // Exposed reference to the ripple that will be returned.\n    const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss);\n    // Start the enter animation by setting the transform/scale to 100%. The animation will\n    // execute as part of this statement because we forced a style recalculation before.\n    // Note: We use a 3d transform here in order to avoid an issue in Safari where\n    // the ripples aren't clipped when inside the shadow DOM (see #24028).\n    ripple.style.transform = 'scale3d(1, 1, 1)';\n    rippleRef.state = 0 /* RippleState.FADING_IN */;\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n    let eventListeners = null;\n    // Do not register the `transition` event listener if fade-in and fade-out duration\n    // are set to zero. The events won't fire anyway and we can save resources here.\n    if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n      this._ngZone.runOutsideAngular(() => {\n        const onTransitionEnd = () => this._finishRippleTransition(rippleRef);\n        const onTransitionCancel = () => this._destroyRipple(rippleRef);\n        ripple.addEventListener('transitionend', onTransitionEnd);\n        // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n        // directly as otherwise we would keep it part of the ripple container forever.\n        // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n        ripple.addEventListener('transitioncancel', onTransitionCancel);\n        eventListeners = {onTransitionEnd, onTransitionCancel};\n      });\n    }\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.set(rippleRef, eventListeners);\n    // In case there is no fade-in transition duration, we need to manually call the transition\n    // end listener because `transitionend` doesn't fire if there is no transition.\n    if (animationForciblyDisabledThroughCss || !enterDuration) {\n      this._finishRippleTransition(rippleRef);\n    }\n    return rippleRef;\n  }\n\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef) {\n    // For ripples already fading out or hidden, this should be a noop.\n    if (rippleRef.state === 2 /* RippleState.FADING_OUT */ || rippleRef.state === 3 /* RippleState.HIDDEN */) {\n      return;\n    }\n    const rippleEl = rippleRef.element;\n    const animationConfig = {...defaultRippleAnimationConfig, ...rippleRef.config.animation};\n    // This starts the fade-out transition and will fire the transition end listener that\n    // removes the ripple element from the DOM.\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = 2 /* RippleState.FADING_OUT */;\n    // In case there is no fade-out transition duration, we need to manually call the\n    // transition end listener because `transitionend` doesn't fire if there is no transition.\n    if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n      this._finishRippleTransition(rippleRef);\n    }\n  }\n\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n  }\n\n  /** Fades out all currently active non-persistent ripples. */\n  fadeOutAllNonPersistent() {\n    this._getActiveRipples().forEach(ripple => {\n      if (!ripple.config.persistent) {\n        ripple.fadeOut();\n      }\n    });\n  }\n\n  /** Sets up the trigger event listeners */\n  setupTriggerEvents(elementOrElementRef) {\n    const element = coerceElement(elementOrElementRef);\n    if (!this._platform.isBrowser || !element || element === this._triggerElement) {\n      return;\n    }\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n    this._triggerElement = element;\n    // Use event delegation for the trigger events since they're\n    // set up during creation and are performance-sensitive.\n    pointerDownEvents.forEach(type => {\n      RippleRenderer._eventManager.addHandler(this._ngZone, type, element, this);\n    });\n  }\n\n  /**\n   * Handles all registered events.\n   * @docs-private\n   */\n  handleEvent(event) {\n    if (event.type === 'mousedown') {\n      this._onMousedown(event);\n    } else if (event.type === 'touchstart') {\n      this._onTouchStart(event);\n    } else {\n      this._onPointerUp();\n    }\n    // If pointer-up events haven't been registered yet, do so now.\n    // We do this on-demand in order to reduce the total number of event listeners\n    // registered by the ripples, which speeds up the rendering time for large UIs.\n    if (!this._pointerUpEventsRegistered) {\n      // The events for hiding the ripple are bound directly on the trigger, because:\n      // 1. Some of them occur frequently (e.g. `mouseleave`) and any advantage we get from\n      // delegation will be diminished by having to look through all the data structures often.\n      // 2. They aren't as performance-sensitive, because they're bound only after the user\n      // has interacted with an element.\n      this._ngZone.runOutsideAngular(() => {\n        pointerUpEvents.forEach(type => {\n          this._triggerElement.addEventListener(type, this, passiveCapturingEventOptions);\n        });\n      });\n      this._pointerUpEventsRegistered = true;\n    }\n  }\n\n  /** Method that will be called if the fade-in or fade-in transition completed. */\n  _finishRippleTransition(rippleRef) {\n    if (rippleRef.state === 0 /* RippleState.FADING_IN */) {\n      this._startFadeOutTransition(rippleRef);\n    } else if (rippleRef.state === 2 /* RippleState.FADING_OUT */) {\n      this._destroyRipple(rippleRef);\n    }\n  }\n\n  /**\n   * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n   * is not held down anymore.\n   */\n  _startFadeOutTransition(rippleRef) {\n    const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n    const {persistent} = rippleRef.config;\n    rippleRef.state = 1 /* RippleState.VISIBLE */;\n    // When the timer runs out while the user has kept their pointer down, we want to\n    // keep only the persistent ripples and the latest transient ripple. We do this,\n    // because we don't want stacked transient ripples to appear after their enter\n    // animation has finished.\n    if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n      rippleRef.fadeOut();\n    }\n  }\n\n  /** Destroys the given ripple by removing it from the DOM and updating its state. */\n  _destroyRipple(rippleRef) {\n    const eventListeners = this._activeRipples.get(rippleRef) ?? null;\n    this._activeRipples.delete(rippleRef);\n    // Clear out the cached bounding rect if we have no more ripples.\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    }\n    // If the current ref is the most recent transient ripple, unset it\n    // avoid memory leaks.\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n    rippleRef.state = 3 /* RippleState.HIDDEN */;\n    if (eventListeners !== null) {\n      rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n      rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n    }\n    rippleRef.element.remove();\n  }\n\n  /** Function being called whenever the trigger is being pressed using mouse. */\n  _onMousedown(event) {\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\n    // ripple in this case for consistency with the non-screen-reader experience.\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n    const isSyntheticEvent = this._lastTouchStartEvent &&\n      Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n    if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n    }\n  }\n\n  /** Function being called whenever the trigger is being pressed using touch. */\n  _onTouchStart(event) {\n    if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true;\n      // Use `changedTouches` so we skip any touches where the user put\n      // their finger down, but used another finger to tap the element again.\n      const touches = event.changedTouches;\n      // According to the typings the touches should always be defined, but in some cases\n      // the browser appears to not assign them in tests which leads to flakes.\n      if (touches) {\n        for (let i = 0; i < touches.length; i++) {\n          this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n        }\n      }\n    }\n  }\n\n  /** Function being called whenever the trigger is being released. */\n  _onPointerUp() {\n    if (!this._isPointerDown) {\n      return;\n    }\n    this._isPointerDown = false;\n    // Fade-out all ripples that are visible and not persistent.\n    this._getActiveRipples().forEach(ripple => {\n      // By default, only ripples that are completely visible will fade out on pointer release.\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n      const isVisible = ripple.state === 1 /* RippleState.VISIBLE */ ||\n        (ripple.config.terminateOnPointerUp && ripple.state === 0 /* RippleState.FADING_IN */);\n      if (!ripple.config.persistent && isVisible) {\n        ripple.fadeOut();\n      }\n    });\n  }\n\n  _getActiveRipples() {\n    return Array.from(this._activeRipples.keys());\n  }\n\n  /** Removes previously registered event listeners from the trigger element. */\n  _removeTriggerEvents() {\n    const trigger = this._triggerElement;\n    if (trigger) {\n      pointerDownEvents.forEach(type => RippleRenderer._eventManager.removeHandler(type, trigger, this));\n      if (this._pointerUpEventsRegistered) {\n        pointerUpEvents.forEach(type => trigger.removeEventListener(type, this, passiveCapturingEventOptions));\n      }\n    }\n  }\n}\n\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\n\nclass MatRipple {\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    if (value) {\n      this.fadeOutAllNonPersistent();\n    }\n    this._disabled = value;\n    this._setupTriggerEventsIfEnabled();\n  }\n\n  /**\n   * The element that triggers the ripple when click events are received.\n   * Defaults to the directive's host element.\n   */\n  get trigger() {\n    return this._trigger || this._elementRef.nativeElement;\n  }\n\n  set trigger(trigger) {\n    this._trigger = trigger;\n    this._setupTriggerEventsIfEnabled();\n  }\n\n  constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n    this._elementRef = _elementRef;\n    this._animationMode = _animationMode;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n    this.radius = 0;\n    this._disabled = false;\n    /** @docs-private Whether ripple directive is initialized and the input bindings are set. */\n    this._isInitialized = false;\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n  }\n\n  ngOnInit() {\n    this._isInitialized = true;\n    this._setupTriggerEventsIfEnabled();\n  }\n\n  ngOnDestroy() {\n    this._rippleRenderer._removeTriggerEvents();\n  }\n\n  /** Fades out all currently showing ripple elements. */\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n\n  /** Fades out all currently showing non-persistent ripple elements. */\n  fadeOutAllNonPersistent() {\n    this._rippleRenderer.fadeOutAllNonPersistent();\n  }\n\n  /**\n   * Ripple configuration from the directive's input values.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleConfig() {\n    return {\n      centered: this.centered,\n      radius: this.radius,\n      color: this.color,\n      animation: {\n        ...this._globalOptions.animation,\n        ...(this._animationMode === 'NoopAnimations' ? {enterDuration: 0, exitDuration: 0} : {}),\n        ...this.animation,\n      },\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n    };\n  }\n\n  /**\n   * Whether ripples on pointer-down are disabled or not.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleDisabled() {\n    return this.disabled || !!this._globalOptions.disabled;\n  }\n\n  /** Sets up the trigger event listeners if ripples are enabled. */\n  _setupTriggerEventsIfEnabled() {\n    if (!this.disabled && this._isInitialized) {\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\n    }\n  }\n\n  /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n  launch(configOrX, y = 0, config) {\n    if (typeof configOrX === 'number') {\n      return this._rippleRenderer.fadeInRipple(configOrX, y, {...this.rippleConfig, ...config});\n    } else {\n      return this._rippleRenderer.fadeInRipple(0, 0, {...this.rippleConfig, ...configOrX});\n    }\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatRipple,\n      deps: [{token: i0.ElementRef}, {token: i0.NgZone}, {token: i1$1.Platform}, {\n        token: MAT_RIPPLE_GLOBAL_OPTIONS,\n        optional: true\n      }, {token: ANIMATION_MODULE_TYPE, optional: true}],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatRipple,\n      selector: \"[mat-ripple], [matRipple]\",\n      inputs: {\n        color: [\"matRippleColor\", \"color\"],\n        unbounded: [\"matRippleUnbounded\", \"unbounded\"],\n        centered: [\"matRippleCentered\", \"centered\"],\n        radius: [\"matRippleRadius\", \"radius\"],\n        animation: [\"matRippleAnimation\", \"animation\"],\n        disabled: [\"matRippleDisabled\", \"disabled\"],\n        trigger: [\"matRippleTrigger\", \"trigger\"]\n      },\n      host: {properties: {\"class.mat-ripple-unbounded\": \"unbounded\"}, classAttribute: \"mat-ripple\"},\n      exportAs: [\"matRipple\"],\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRipple, decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[mat-ripple], [matRipple]',\n      exportAs: 'matRipple',\n      host: {\n        'class': 'mat-ripple',\n        '[class.mat-ripple-unbounded]': 'unbounded',\n      },\n    }]\n  }], ctorParameters: function () {\n    return [{type: i0.ElementRef}, {type: i0.NgZone}, {type: i1$1.Platform}, {\n      type: undefined, decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined, decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, propDecorators: {\n    color: [{\n      type: Input,\n      args: ['matRippleColor']\n    }], unbounded: [{\n      type: Input,\n      args: ['matRippleUnbounded']\n    }], centered: [{\n      type: Input,\n      args: ['matRippleCentered']\n    }], radius: [{\n      type: Input,\n      args: ['matRippleRadius']\n    }], animation: [{\n      type: Input,\n      args: ['matRippleAnimation']\n    }], disabled: [{\n      type: Input,\n      args: ['matRippleDisabled']\n    }], trigger: [{\n      type: Input,\n      args: ['matRippleTrigger']\n    }]\n  }\n});\n\nclass MatRippleModule {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatRippleModule,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.NgModule\n    });\n  }\n  static {\n    this.ɵmod = i0.ɵɵngDeclareNgModule({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatRippleModule,\n      declarations: [MatRipple],\n      imports: [MatCommonModule],\n      exports: [MatRipple, MatCommonModule]\n    });\n  }\n  static {\n    this.ɵinj = i0.ɵɵngDeclareInjector({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatRippleModule,\n      imports: [MatCommonModule, MatCommonModule]\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRippleModule, decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatRipple, MatCommonModule],\n      declarations: [MatRipple],\n    }]\n  }]\n});\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n  constructor(_animationMode) {\n    this._animationMode = _animationMode;\n    /** Display state of the checkbox. */\n    this.state = 'unchecked';\n    /** Whether the checkbox is disabled. */\n    this.disabled = false;\n    /**\n     * Appearance of the pseudo checkbox. Default appearance of 'full' renders a checkmark/mixedmark\n     * indicator inside a square box. 'minimal' appearance only renders the checkmark/mixedmark.\n     */\n    this.appearance = 'full';\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatPseudoCheckbox,\n      deps: [{token: ANIMATION_MODULE_TYPE, optional: true}],\n      target: i0.ɵɵFactoryTarget.Component\n    });\n  }\n  static {\n    this.ɵcmp = i0.ɵɵngDeclareComponent({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatPseudoCheckbox,\n      selector: \"mat-pseudo-checkbox\",\n      inputs: {state: \"state\", disabled: \"disabled\", appearance: \"appearance\"},\n      host: {\n        properties: {\n          \"class.mat-pseudo-checkbox-indeterminate\": \"state === \\\"indeterminate\\\"\",\n          \"class.mat-pseudo-checkbox-checked\": \"state === \\\"checked\\\"\",\n          \"class.mat-pseudo-checkbox-disabled\": \"disabled\",\n          \"class.mat-pseudo-checkbox-minimal\": \"appearance === \\\"minimal\\\"\",\n          \"class.mat-pseudo-checkbox-full\": \"appearance === \\\"full\\\"\",\n          \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\"\n        }, classAttribute: \"mat-pseudo-checkbox\"\n      },\n      ngImport: i0,\n      template: '',\n      isInline: true,\n      styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-full{border:2px solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\"],\n      changeDetection: i0.ChangeDetectionStrategy.OnPush,\n      encapsulation: i0.ViewEncapsulation.None\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPseudoCheckbox, decorators: [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'mat-pseudo-checkbox',\n      template: '',\n      host: {\n        'class': 'mat-pseudo-checkbox',\n        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n        '[class.mat-pseudo-checkbox-minimal]': 'appearance === \"minimal\"',\n        '[class.mat-pseudo-checkbox-full]': 'appearance === \"full\"',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n      },\n      styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-full{border:2px solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\"]\n    }]\n  }], ctorParameters: function () {\n    return [{\n      type: undefined, decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, propDecorators: {\n    state: [{\n      type: Input\n    }], disabled: [{\n      type: Input\n    }], appearance: [{\n      type: Input\n    }]\n  }\n});\n\nclass MatPseudoCheckboxModule {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatPseudoCheckboxModule,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.NgModule\n    });\n  }\n  static {\n    this.ɵmod = i0.ɵɵngDeclareNgModule({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatPseudoCheckboxModule,\n      declarations: [MatPseudoCheckbox],\n      imports: [MatCommonModule],\n      exports: [MatPseudoCheckbox]\n    });\n  }\n  static {\n    this.ɵinj = i0.ɵɵngDeclareInjector({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatPseudoCheckboxModule,\n      imports: [MatCommonModule]\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPseudoCheckboxModule, decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatPseudoCheckbox],\n      declarations: [MatPseudoCheckbox],\n    }]\n  }]\n});\n\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nconst _MatOptgroupMixinBase = mixinDisabled(class {\n});\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n  constructor(parent) {\n    super();\n    /** Unique id for the underlying label. */\n    this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    this._inert = parent?.inertGroups ?? false;\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: _MatOptgroupBase,\n      deps: [{token: MAT_OPTION_PARENT_COMPONENT, optional: true}],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: _MatOptgroupBase,\n      inputs: {label: \"label\"},\n      usesInheritance: true,\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatOptgroupBase, decorators: [{\n    type: Directive\n  }], ctorParameters: function () {\n    return [{\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, propDecorators: {\n    label: [{\n      type: Input\n    }]\n  }\n});\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatOptgroup,\n      deps: null,\n      target: i0.ɵɵFactoryTarget.Component\n    });\n  }\n  static {\n    this.ɵcmp = i0.ɵɵngDeclareComponent({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatOptgroup,\n      selector: \"mat-optgroup\",\n      inputs: {disabled: \"disabled\"},\n      host: {\n        properties: {\n          \"attr.role\": \"_inert ? null : \\\"group\\\"\",\n          \"attr.aria-disabled\": \"_inert ? null : disabled.toString()\",\n          \"attr.aria-labelledby\": \"_inert ? null : _labelId\"\n        }, classAttribute: \"mat-mdc-optgroup\"\n      },\n      providers: [{provide: MAT_OPTGROUP, useExisting: MatOptgroup}],\n      exportAs: [\"matOptgroup\"],\n      usesInheritance: true,\n      ngImport: i0,\n      template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  role=\\\"presentation\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n      styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color);font-family:var(--mat-optgroup-label-text-font);line-height:var(--mat-optgroup-label-text-line-height);font-size:var(--mat-optgroup-label-text-size);letter-spacing:var(--mat-optgroup-label-text-tracking);font-weight:var(--mat-optgroup-label-text-weight)}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;min-height:48px}.mat-mdc-optgroup-label:focus{outline:none}[dir=rtl] .mat-mdc-optgroup-label,.mat-mdc-optgroup-label[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal}\"],\n      changeDetection: i0.ChangeDetectionStrategy.OnPush,\n      encapsulation: i0.ViewEncapsulation.None\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatOptgroup, decorators: [{\n    type: Component,\n    args: [{\n      selector: 'mat-optgroup',\n      exportAs: 'matOptgroup',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled'],\n      host: {\n        'class': 'mat-mdc-optgroup',\n        '[attr.role]': '_inert ? null : \"group\"',\n        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n      },\n      providers: [{provide: MAT_OPTGROUP, useExisting: MatOptgroup}],\n      template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  role=\\\"presentation\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n      styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color);font-family:var(--mat-optgroup-label-text-font);line-height:var(--mat-optgroup-label-text-line-height);font-size:var(--mat-optgroup-label-text-size);letter-spacing:var(--mat-optgroup-label-text-tracking);font-weight:var(--mat-optgroup-label-text-weight)}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;min-height:48px}.mat-mdc-optgroup-label:focus{outline:none}[dir=rtl] .mat-mdc-optgroup-label,.mat-mdc-optgroup-label[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal}\"]\n    }]\n  }]\n});\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n  constructor(\n    /** Reference to the option that emitted the event. */\n    source,\n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n}\n\nclass _MatOptionBase {\n  /** Whether the wrapping component is in multiple selection mode. */\n  get multiple() {\n    return this._parent && this._parent.multiple;\n  }\n\n  /** Whether or not the option is currently selected. */\n  get selected() {\n    return this._selected;\n  }\n\n  /** Whether the option is disabled. */\n  get disabled() {\n    return (this.group && this.group.disabled) || this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  /** Whether ripples for the option are disabled. */\n  get disableRipple() {\n    return !!(this._parent && this._parent.disableRipple);\n  }\n\n  /** Whether to display checkmark for single-selection. */\n  get hideSingleSelectionIndicator() {\n    return !!(this._parent && this._parent.hideSingleSelectionIndicator);\n  }\n\n  constructor(_element, _changeDetectorRef, _parent, group) {\n    this._element = _element;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parent = _parent;\n    this.group = group;\n    this._selected = false;\n    this._active = false;\n    this._disabled = false;\n    this._mostRecentViewValue = '';\n    /** The unique ID of the option. */\n    this.id = `mat-option-${_uniqueIdCounter++}`;\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onSelectionChange = new EventEmitter();\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    this._stateChanges = new Subject();\n  }\n\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active() {\n    return this._active;\n  }\n\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue() {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._text?.nativeElement.textContent || '').trim();\n  }\n\n  /** Selects the option. */\n  select(emitEvent = true) {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      if (emitEvent) {\n        this._emitSelectionChangeEvent();\n      }\n    }\n  }\n\n  /** Deselects the option. */\n  deselect(emitEvent = true) {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      if (emitEvent) {\n        this._emitSelectionChangeEvent();\n      }\n    }\n  }\n\n  /** Sets focus onto this option. */\n  focus(_origin, options) {\n    // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n    // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n    const element = this._getHostElement();\n    if (typeof element.focus === 'function') {\n      element.focus(options);\n    }\n  }\n\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles() {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles() {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel() {\n    return this.viewValue;\n  }\n\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n      this._selectViaInteraction();\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n  _selectViaInteraction() {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  // This method is only used by `MatLegacyOption`. Keeping it here to avoid breaking the types.\n  // That's because `MatLegacyOption` use `MatOption` type in a few places such as\n  // `MatOptionSelectionChange`. It is safe to delete this when `MatLegacyOption` is deleted.\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Gets the host DOM element. */\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n      if (viewValue !== this._mostRecentViewValue) {\n        if (this._mostRecentViewValue) {\n          this._stateChanges.next();\n        }\n        this._mostRecentViewValue = viewValue;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  /** Emits the selection change event. */\n  _emitSelectionChangeEvent(isUserInput = false) {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: _MatOptionBase,\n      deps: \"invalid\",\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: _MatOptionBase,\n      inputs: {value: \"value\", id: \"id\", disabled: \"disabled\"},\n      outputs: {onSelectionChange: \"onSelectionChange\"},\n      viewQueries: [{propertyName: \"_text\", first: true, predicate: [\"text\"], descendants: true, static: true}],\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatOptionBase, decorators: [{\n    type: Directive\n  }], ctorParameters: function () {\n    return [{type: i0.ElementRef}, {type: i0.ChangeDetectorRef}, {type: undefined}, {type: _MatOptgroupBase}];\n  }, propDecorators: {\n    value: [{\n      type: Input\n    }], id: [{\n      type: Input\n    }], disabled: [{\n      type: Input\n    }], onSelectionChange: [{\n      type: Output\n    }], _text: [{\n      type: ViewChild,\n      args: ['text', {static: true}]\n    }]\n  }\n});\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n  constructor(element, changeDetectorRef, parent, group) {\n    super(element, changeDetectorRef, parent, group);\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatOption,\n      deps: [{token: i0.ElementRef}, {token: i0.ChangeDetectorRef}, {\n        token: MAT_OPTION_PARENT_COMPONENT,\n        optional: true\n      }, {token: MAT_OPTGROUP, optional: true}],\n      target: i0.ɵɵFactoryTarget.Component\n    });\n  }\n  static {\n    this.ɵcmp = i0.ɵɵngDeclareComponent({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatOption,\n      selector: \"mat-option\",\n      host: {\n        attributes: {\"role\": \"option\"},\n        listeners: {\"click\": \"_selectViaInteraction()\", \"keydown\": \"_handleKeydown($event)\"},\n        properties: {\n          \"class.mdc-list-item--selected\": \"selected\",\n          \"class.mat-mdc-option-multiple\": \"multiple\",\n          \"class.mat-mdc-option-active\": \"active\",\n          \"class.mdc-list-item--disabled\": \"disabled\",\n          \"id\": \"id\",\n          \"attr.aria-selected\": \"selected\",\n          \"attr.aria-disabled\": \"disabled.toString()\"\n        },\n        classAttribute: \"mat-mdc-option mdc-list-item\"\n      },\n      exportAs: [\"matOption\"],\n      usesInheritance: true,\n      ngImport: i0,\n      template: \"<!-- Set aria-hidden=\\\"true\\\" to this DOM node and other decorative nodes in this file. This might\\n be contributing to issue where sometimes VoiceOver focuses on a TextNode in the a11y tree instead\\n of the Option node (#23202). Most assistive technology will generally ignore non-role,\\n non-text-content elements. Adding aria-hidden seems to make VoiceOver behave more consistently. -->\\n<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-mdc-option-pseudo-checkbox\\\" [disabled]=\\\"disabled\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" aria-hidden=\\\"true\\\"></mat-pseudo-checkbox>\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- Render checkmark at the end for single-selection. -->\\n<mat-pseudo-checkbox *ngIf=\\\"!multiple && selected && !hideSingleSelectionIndicator\\\"\\n    class=\\\"mat-mdc-option-pseudo-checkbox\\\" [disabled]=\\\"disabled\\\" state=\\\"checked\\\"\\n    aria-hidden=\\\"true\\\" appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-mdc-option-ripple mat-mdc-focus-indicator\\\" aria-hidden=\\\"true\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n      styles: [\".mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color);font-family:var(--mat-option-label-text-font);line-height:var(--mat-option-label-text-line-height);font-size:var(--mat-option-label-text-size);letter-spacing:var(--mat-option-label-text-tracking);font-weight:var(--mat-option-label-text-weight);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color)}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color)}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n      dependencies: [{\n        kind: \"directive\",\n        type: MatRipple,\n        selector: \"[mat-ripple], [matRipple]\",\n        inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"],\n        exportAs: [\"matRipple\"]\n      }, {\n        kind: \"directive\",\n        type: i3.NgIf,\n        selector: \"[ngIf]\",\n        inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"]\n      }, {\n        kind: \"component\",\n        type: MatPseudoCheckbox,\n        selector: \"mat-pseudo-checkbox\",\n        inputs: [\"state\", \"disabled\", \"appearance\"]\n      }],\n      changeDetection: i0.ChangeDetectionStrategy.OnPush,\n      encapsulation: i0.ViewEncapsulation.None\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatOption, decorators: [{\n    type: Component,\n    args: [{\n      selector: 'mat-option',\n      exportAs: 'matOption',\n      host: {\n        'role': 'option',\n        '[class.mdc-list-item--selected]': 'selected',\n        '[class.mat-mdc-option-multiple]': 'multiple',\n        '[class.mat-mdc-option-active]': 'active',\n        '[class.mdc-list-item--disabled]': 'disabled',\n        '[id]': 'id',\n        // Set aria-selected to false for non-selected items and true for selected items. Conform to\n        // [WAI ARIA Listbox authoring practices guide](\n        //  https://www.w3.org/WAI/ARIA/apg/patterns/listbox/), \"If any options are selected, each\n        // selected option has either aria-selected or aria-checked  set to true. All options that are\n        // selectable but not selected have either aria-selected or aria-checked set to false.\" Align\n        // aria-selected implementation of Chips and List components.\n        //\n        // Set `aria-selected=\"false\"` on not-selected listbox options to fix VoiceOver announcing\n        // every option as \"selected\" (#21491).\n        '[attr.aria-selected]': 'selected',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        'class': 'mat-mdc-option mdc-list-item',\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<!-- Set aria-hidden=\\\"true\\\" to this DOM node and other decorative nodes in this file. This might\\n be contributing to issue where sometimes VoiceOver focuses on a TextNode in the a11y tree instead\\n of the Option node (#23202). Most assistive technology will generally ignore non-role,\\n non-text-content elements. Adding aria-hidden seems to make VoiceOver behave more consistently. -->\\n<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-mdc-option-pseudo-checkbox\\\" [disabled]=\\\"disabled\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" aria-hidden=\\\"true\\\"></mat-pseudo-checkbox>\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- Render checkmark at the end for single-selection. -->\\n<mat-pseudo-checkbox *ngIf=\\\"!multiple && selected && !hideSingleSelectionIndicator\\\"\\n    class=\\\"mat-mdc-option-pseudo-checkbox\\\" [disabled]=\\\"disabled\\\" state=\\\"checked\\\"\\n    aria-hidden=\\\"true\\\" appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-mdc-option-ripple mat-mdc-focus-indicator\\\" aria-hidden=\\\"true\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n      styles: [\".mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color);font-family:var(--mat-option-label-text-font);line-height:var(--mat-option-label-text-line-height);font-size:var(--mat-option-label-text-size);letter-spacing:var(--mat-option-label-text-tracking);font-weight:var(--mat-option-label-text-weight);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color)}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color)}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], ctorParameters: function () {\n    return [{type: i0.ElementRef}, {type: i0.ChangeDetectorRef}, {\n      type: undefined, decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }]\n    }, {\n      type: MatOptgroup, decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTGROUP]\n      }]\n    }];\n  }\n});\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n    return groupCounter;\n  }\n  return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n  return currentScrollPosition;\n}\n\nclass MatOptionModule {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatOptionModule,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.NgModule\n    });\n  }\n  static {\n    this.ɵmod = i0.ɵɵngDeclareNgModule({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatOptionModule,\n      declarations: [MatOption, MatOptgroup],\n      imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n      exports: [MatOption, MatOptgroup]\n    });\n  }\n  static {\n    this.ɵinj = i0.ɵɵngDeclareInjector({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatOptionModule,\n      imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatOptionModule, decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n      exports: [MatOption, MatOptgroup],\n      declarations: [MatOption, MatOptgroup],\n    }]\n  }]\n});\n\n/** The options for the MatRippleLoader's event listeners. */\nconst eventListenerOptions = {capture: true};\n/** The events that should trigger the initialization of the ripple. */\nconst rippleInteractionEvents = ['focus', 'click', 'mouseenter', 'touchstart'];\n/** The attribute attached to a component whose ripple has not yet been initialized. */\nconst matRippleUninitialized = 'mat-ripple-loader-uninitialized';\n/** Additional classes that should be added to the ripple when it is rendered. */\nconst matRippleClassName = 'mat-ripple-loader-class-name';\n/** Whether the ripple should be centered. */\nconst matRippleCentered = 'mat-ripple-loader-centered';\n/** Whether the ripple should be disabled. */\nconst matRippleDisabled = 'mat-ripple-loader-disabled';\n\n/**\n * Handles attaching ripples on demand.\n *\n * This service allows us to avoid eagerly creating & attaching MatRipples.\n * It works by creating & attaching a ripple only when a component is first interacted with.\n */\nclass MatRippleLoader {\n  constructor() {\n    this._document = inject(DOCUMENT, {optional: true});\n    this._animationMode = inject(ANIMATION_MODULE_TYPE$1, {optional: true});\n    this._globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {optional: true});\n    this._platform = inject(Platform);\n    this._ngZone = inject(NgZone);\n    /** Handles creating and attaching component internals when a component it is initially interacted with. */\n    this._onInteraction = (event) => {\n      if (!(event.target instanceof HTMLElement)) {\n        return;\n      }\n      const eventTarget = event.target;\n      // TODO(wagnermaciel): Consider batching these events to improve runtime performance.\n      const element = eventTarget.closest(`[${matRippleUninitialized}]`);\n      if (element) {\n        this.createRipple(element);\n      }\n    };\n    this._ngZone.runOutsideAngular(() => {\n      for (const event of rippleInteractionEvents) {\n        this._document?.addEventListener(event, this._onInteraction, eventListenerOptions);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    for (const event of rippleInteractionEvents) {\n      this._document?.removeEventListener(event, this._onInteraction, eventListenerOptions);\n    }\n  }\n\n  /**\n   * Configures the ripple that will be rendered by the ripple loader.\n   *\n   * Stores the given information about how the ripple should be configured on the host\n   * element so that it can later be retrived & used when the ripple is actually created.\n   */\n  configureRipple(host, config) {\n    // Indicates that the ripple has not yet been rendered for this component.\n    host.setAttribute(matRippleUninitialized, '');\n    // Store the additional class name(s) that should be added to the ripple element.\n    if (config.className || !host.hasAttribute(matRippleClassName)) {\n      host.setAttribute(matRippleClassName, config.className || '');\n    }\n    // Store whether the ripple should be centered.\n    if (config.centered) {\n      host.setAttribute(matRippleCentered, '');\n    }\n    if (config.disabled) {\n      host.setAttribute(matRippleDisabled, '');\n    }\n  }\n\n  /** Returns the ripple instance for the given host element. */\n  getRipple(host) {\n    if (host.matRipple) {\n      return host.matRipple;\n    }\n    return this.createRipple(host);\n  }\n\n  /** Sets the disabled state on the ripple instance corresponding to the given host element. */\n  setDisabled(host, disabled) {\n    const ripple = host.matRipple;\n    // If the ripple has already been instantiated, just disable it.\n    if (ripple) {\n      ripple.disabled = disabled;\n      return;\n    }\n    // Otherwise, set an attribute so we know what the\n    // disabled state should be when the ripple is initialized.\n    if (disabled) {\n      host.setAttribute(matRippleDisabled, '');\n    } else {\n      host.removeAttribute(matRippleDisabled);\n    }\n  }\n\n  /** Creates a MatRipple and appends it to the given element. */\n  createRipple(host) {\n    if (!this._document) {\n      return;\n    }\n    // Create the ripple element.\n    host.querySelector('.mat-ripple')?.remove();\n    const rippleEl = this._document.createElement('span');\n    rippleEl.classList.add('mat-ripple', host.getAttribute(matRippleClassName));\n    host.append(rippleEl);\n    // Create the MatRipple.\n    const ripple = new MatRipple(new ElementRef(rippleEl), this._ngZone, this._platform, this._globalRippleOptions ? this._globalRippleOptions : undefined, this._animationMode ? this._animationMode : undefined);\n    ripple._isInitialized = true;\n    ripple.trigger = host;\n    ripple.centered = host.hasAttribute(matRippleCentered);\n    ripple.disabled = host.hasAttribute(matRippleDisabled);\n    this.attachRipple(host, ripple);\n    return ripple;\n  }\n\n  attachRipple(host, ripple) {\n    host.removeAttribute(matRippleUninitialized);\n    host.matRipple = ripple;\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatRippleLoader,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.ɵprov = i0.ɵɵngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatRippleLoader,\n      providedIn: 'root'\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRippleLoader, decorators: [{\n    type: Injectable,\n    args: [{providedIn: 'root'}]\n  }], ctorParameters: function () {\n    return [];\n  }\n});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport {\n  AnimationCurves,\n  AnimationDurations,\n  DateAdapter,\n  ErrorStateMatcher,\n  MATERIAL_SANITY_CHECKS,\n  MAT_DATE_FORMATS,\n  MAT_DATE_LOCALE,\n  MAT_DATE_LOCALE_FACTORY,\n  MAT_NATIVE_DATE_FORMATS,\n  MAT_OPTGROUP,\n  MAT_OPTION_PARENT_COMPONENT,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  MatCommonModule,\n  MatLine,\n  MatLineModule,\n  MatNativeDateModule,\n  MatOptgroup,\n  MatOption,\n  MatOptionModule,\n  MatOptionSelectionChange,\n  MatPseudoCheckbox,\n  MatPseudoCheckboxModule,\n  MatRipple,\n  MatRippleLoader,\n  MatRippleModule,\n  NativeDateAdapter,\n  NativeDateModule,\n  RippleRef,\n  RippleRenderer,\n  ShowOnDirtyErrorStateMatcher,\n  VERSION,\n  _MatOptgroupBase,\n  _MatOptionBase,\n  _countGroupLabelsBeforeOption,\n  _getOptionScrollPosition,\n  defaultRippleAnimationConfig,\n  mixinColor,\n  mixinDisableRipple,\n  mixinDisabled,\n  mixinErrorState,\n  mixinInitialized,\n  mixinTabIndex,\n  setLines\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}