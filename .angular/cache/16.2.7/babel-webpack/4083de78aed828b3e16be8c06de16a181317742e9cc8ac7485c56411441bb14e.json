{"ast":null,"code":"import { EmptyError } from '../util/EmptyError';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function throwIfEmpty(errorFactory = defaultErrorFactory) {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(createOperatorSubscriber(subscriber, value => {\n      hasValue = true;\n      subscriber.next(value);\n    }, () => hasValue ? subscriber.complete() : subscriber.error(errorFactory())));\n  });\n}\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}","map":{"version":3,"names":["EmptyError","operate","createOperatorSubscriber","throwIfEmpty","errorFactory","defaultErrorFactory","source","subscriber","hasValue","subscribe","value","next","complete","error"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/rxjs/dist/esm/internal/operators/throwIfEmpty.js"],"sourcesContent":["import {EmptyError} from '../util/EmptyError';\nimport {operate} from '../util/lift';\nimport {createOperatorSubscriber} from './OperatorSubscriber';\n\nexport function throwIfEmpty(errorFactory = defaultErrorFactory) {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n      hasValue = true;\n      subscriber.next(value);\n    }, () => (hasValue ? subscriber.complete() : subscriber.error(errorFactory()))));\n  });\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n\n"],"mappings":"AAAA,SAAQA,UAAU,QAAO,oBAAoB;AAC7C,SAAQC,OAAO,QAAO,cAAc;AACpC,SAAQC,wBAAwB,QAAO,sBAAsB;AAE7D,OAAO,SAASC,YAAYA,CAACC,YAAY,GAAGC,mBAAmB,EAAE;EAC/D,OAAOJ,OAAO,CAAC,CAACK,MAAM,EAAEC,UAAU,KAAK;IACrC,IAAIC,QAAQ,GAAG,KAAK;IACpBF,MAAM,CAACG,SAAS,CAACP,wBAAwB,CAACK,UAAU,EAAGG,KAAK,IAAK;MAC/DF,QAAQ,GAAG,IAAI;MACfD,UAAU,CAACI,IAAI,CAACD,KAAK,CAAC;IACxB,CAAC,EAAE,MAAOF,QAAQ,GAAGD,UAAU,CAACK,QAAQ,CAAC,CAAC,GAAGL,UAAU,CAACM,KAAK,CAACT,YAAY,CAAC,CAAC,CAAE,CAAC,CAAC;EAClF,CAAC,CAAC;AACJ;AAEA,SAASC,mBAAmBA,CAAA,EAAG;EAC7B,OAAO,IAAIL,UAAU,CAAC,CAAC;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}