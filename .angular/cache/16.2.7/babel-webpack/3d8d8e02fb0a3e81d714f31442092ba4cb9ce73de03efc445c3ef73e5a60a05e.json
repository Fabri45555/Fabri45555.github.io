{"ast":null,"code":"/**\n * @license Angular v16.2.10\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ɵglobal, ɵRuntimeError, Injectable, InjectionToken, Inject, APP_ID, CSP_NONCE, PLATFORM_ID, Optional, ViewEncapsulation, RendererStyleFlags2, ɵinternalCreateApplication, ErrorHandler, ɵsetDocument, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵTESTABILITY_GETTER, ɵTESTABILITY, Testability, NgZone, TestabilityRegistry, ɵINJECTOR_SCOPE, RendererFactory2, ApplicationModule, NgModule, SkipSelf, ɵɵinject, ApplicationRef, ɵConsole, forwardRef, ɵXSS_SECURITY_URL, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, Injector, ENVIRONMENT_INITIALIZER, inject, ɵformatRuntimeError, makeEnvironmentProviders, ɵwithDomHydration, Version, makeStateKey as makeStateKey$1, TransferState as TransferState$1 } from '@angular/core';\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, isPlatformServer, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport { ɵwithHttpTransferCache } from '@angular/common/http';\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n  constructor() {\n    super(...arguments);\n    this.supportsDOMEvents = true;\n  }\n}\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n  static makeCurrent() {\n    ɵsetRootDomAdapter(new BrowserDomAdapter());\n  }\n  onAndCancel(el, evt, listener) {\n    el.addEventListener(evt, listener);\n    return () => {\n      el.removeEventListener(evt, listener);\n    };\n  }\n  dispatchEvent(el, evt) {\n    el.dispatchEvent(evt);\n  }\n  remove(node) {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  }\n  createElement(tagName, doc) {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n  createHtmlDocument() {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n  getDefaultDocument() {\n    return document;\n  }\n  isElementNode(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n  isShadowRoot(node) {\n    return node instanceof DocumentFragment;\n  }\n\n  /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n  getGlobalEventTarget(doc, target) {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n  getBaseHref(doc) {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n  resetBaseElement() {\n    baseElement = null;\n  }\n  getUserAgent() {\n    return window.navigator.userAgent;\n  }\n  getCookie(name) {\n    return ɵparseCookieValue(document.cookie, name);\n  }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n  baseElement = baseElement || document.querySelector('base');\n  return baseElement ? baseElement.getAttribute('href') : null;\n}\n\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode;\nfunction relativePath(url) {\n  urlParsingNode = urlParsingNode || document.createElement('a');\n  urlParsingNode.setAttribute('href', url);\n  const pathName = urlParsingNode.pathname;\n  return pathName.charAt(0) === '/' ? pathName : `/${pathName}`;\n}\nclass BrowserGetTestability {\n  addToWindow(registry) {\n    ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new ɵRuntimeError(5103 /* RuntimeErrorCode.TESTABILITY_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Could not find testability for element.');\n      }\n      return testability;\n    };\n    ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n    ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n    const whenAllStable = callback => {\n      const testabilities = ɵglobal['getAllAngularTestabilities']();\n      let count = testabilities.length;\n      let didWork = false;\n      const decrement = function (didWork_) {\n        didWork = didWork || didWork_;\n        count--;\n        if (count == 0) {\n          callback(didWork);\n        }\n      };\n      testabilities.forEach(testability => {\n        testability.whenStable(decrement);\n      });\n    };\n    if (!ɵglobal['frameworkStabilizers']) {\n      ɵglobal['frameworkStabilizers'] = [];\n    }\n    ɵglobal['frameworkStabilizers'].push(whenAllStable);\n  }\n  findTestabilityInTree(registry, elem, findInAncestors) {\n    if (elem == null) {\n      return null;\n    }\n    const t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (ɵgetDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, elem.host, true);\n    }\n    return this.findTestabilityInTree(registry, elem.parentElement, true);\n  }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n  build() {\n    return new XMLHttpRequest();\n  }\n  static #_ = this.ɵfac = function BrowserXhr_Factory(t) {\n    return new (t || BrowserXhr)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: BrowserXhr,\n    factory: BrowserXhr.ɵfac\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserXhr, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  constructor(plugins, _zone) {\n    this._zone = _zone;\n    this._eventNameToPlugin = new Map();\n    plugins.forEach(plugin => {\n      plugin.manager = this;\n    });\n    this._plugins = plugins.slice().reverse();\n  }\n\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n  addEventListener(element, eventName, handler) {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addEventListener(element, eventName, handler);\n  }\n\n  /**\n   * Retrieves the compilation zone in which event listeners are registered.\n   */\n  getZone() {\n    return this._zone;\n  }\n\n  /** @internal */\n  _findPluginFor(eventName) {\n    let plugin = this._eventNameToPlugin.get(eventName);\n    if (plugin) {\n      return plugin;\n    }\n    const plugins = this._plugins;\n    plugin = plugins.find(plugin => plugin.supports(eventName));\n    if (!plugin) {\n      throw new ɵRuntimeError(5101 /* RuntimeErrorCode.NO_PLUGIN_FOR_EVENT */, (typeof ngDevMode === 'undefined' || ngDevMode) && `No event manager plugin found for event ${eventName}`);\n    }\n    this._eventNameToPlugin.set(eventName, plugin);\n    return plugin;\n  }\n  static #_ = this.ɵfac = function EventManager_Factory(t) {\n    return new (t || EventManager)(i0.ɵɵinject(EVENT_MANAGER_PLUGINS), i0.ɵɵinject(i0.NgZone));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: EventManager,\n    factory: EventManager.ɵfac\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EventManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [EVENT_MANAGER_PLUGINS]\n      }]\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\nclass EventManagerPlugin {\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n}\n\n/** The style elements attribute name used to set value of `APP_ID` token. */\nconst APP_ID_ATTRIBUTE_NAME = 'ng-app-id';\nclass SharedStylesHost {\n  constructor(doc, appId, nonce, platformId = {}) {\n    this.doc = doc;\n    this.appId = appId;\n    this.nonce = nonce;\n    this.platformId = platformId;\n    // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n    this.styleRef = new Map();\n    this.hostNodes = new Set();\n    this.styleNodesInDOM = this.collectServerRenderedStyles();\n    this.platformIsServer = isPlatformServer(platformId);\n    this.resetHostNodes();\n  }\n  addStyles(styles) {\n    for (const style of styles) {\n      const usageCount = this.changeUsageCount(style, 1);\n      if (usageCount === 1) {\n        this.onStyleAdded(style);\n      }\n    }\n  }\n  removeStyles(styles) {\n    for (const style of styles) {\n      const usageCount = this.changeUsageCount(style, -1);\n      if (usageCount <= 0) {\n        this.onStyleRemoved(style);\n      }\n    }\n  }\n  ngOnDestroy() {\n    const styleNodesInDOM = this.styleNodesInDOM;\n    if (styleNodesInDOM) {\n      styleNodesInDOM.forEach(node => node.remove());\n      styleNodesInDOM.clear();\n    }\n    for (const style of this.getAllStyles()) {\n      this.onStyleRemoved(style);\n    }\n    this.resetHostNodes();\n  }\n  addHost(hostNode) {\n    this.hostNodes.add(hostNode);\n    for (const style of this.getAllStyles()) {\n      this.addStyleToHost(hostNode, style);\n    }\n  }\n  removeHost(hostNode) {\n    this.hostNodes.delete(hostNode);\n  }\n  getAllStyles() {\n    return this.styleRef.keys();\n  }\n  onStyleAdded(style) {\n    for (const host of this.hostNodes) {\n      this.addStyleToHost(host, style);\n    }\n  }\n  onStyleRemoved(style) {\n    const styleRef = this.styleRef;\n    styleRef.get(style)?.elements?.forEach(node => node.remove());\n    styleRef.delete(style);\n  }\n  collectServerRenderedStyles() {\n    const styles = this.doc.head?.querySelectorAll(`style[${APP_ID_ATTRIBUTE_NAME}=\"${this.appId}\"]`);\n    if (styles?.length) {\n      const styleMap = new Map();\n      styles.forEach(style => {\n        if (style.textContent != null) {\n          styleMap.set(style.textContent, style);\n        }\n      });\n      return styleMap;\n    }\n    return null;\n  }\n  changeUsageCount(style, delta) {\n    const map = this.styleRef;\n    if (map.has(style)) {\n      const styleRefValue = map.get(style);\n      styleRefValue.usage += delta;\n      return styleRefValue.usage;\n    }\n    map.set(style, {\n      usage: delta,\n      elements: []\n    });\n    return delta;\n  }\n  getStyleElement(host, style) {\n    const styleNodesInDOM = this.styleNodesInDOM;\n    const styleEl = styleNodesInDOM?.get(style);\n    if (styleEl?.parentNode === host) {\n      // `styleNodesInDOM` cannot be undefined due to the above `styleNodesInDOM?.get`.\n      styleNodesInDOM.delete(style);\n      styleEl.removeAttribute(APP_ID_ATTRIBUTE_NAME);\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // This attribute is solely used for debugging purposes.\n        styleEl.setAttribute('ng-style-reused', '');\n      }\n      return styleEl;\n    } else {\n      const styleEl = this.doc.createElement('style');\n      if (this.nonce) {\n        styleEl.setAttribute('nonce', this.nonce);\n      }\n      styleEl.textContent = style;\n      if (this.platformIsServer) {\n        styleEl.setAttribute(APP_ID_ATTRIBUTE_NAME, this.appId);\n      }\n      return styleEl;\n    }\n  }\n  addStyleToHost(host, style) {\n    const styleEl = this.getStyleElement(host, style);\n    host.appendChild(styleEl);\n    const styleRef = this.styleRef;\n    const styleElRef = styleRef.get(style)?.elements;\n    if (styleElRef) {\n      styleElRef.push(styleEl);\n    } else {\n      styleRef.set(style, {\n        elements: [styleEl],\n        usage: 1\n      });\n    }\n  }\n  resetHostNodes() {\n    const hostNodes = this.hostNodes;\n    hostNodes.clear();\n    // Re-add the head element back since this is the default host.\n    hostNodes.add(this.doc.head);\n  }\n  static #_ = this.ɵfac = function SharedStylesHost_Factory(t) {\n    return new (t || SharedStylesHost)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(APP_ID), i0.ɵɵinject(CSP_NONCE, 8), i0.ɵɵinject(PLATFORM_ID));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SharedStylesHost,\n    factory: SharedStylesHost.ɵfac\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [APP_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CSP_NONCE]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\nconst NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n  'math': 'http://www.w3.org/1998/MathML/'\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n/**\n * The default value for the `REMOVE_STYLES_ON_COMPONENT_DESTROY` DI token.\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT = false;\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") that indicates whether styles\n * of destroyed components should be removed from DOM.\n *\n * By default, the value is set to `false`. This will be changed in the next major version.\n * @publicApi\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY = new InjectionToken('RemoveStylesOnCompDestroy', {\n  providedIn: 'root',\n  factory: () => REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT\n});\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimStylesContent(compId, styles) {\n  return styles.map(s => s.replace(COMPONENT_REGEX, compId));\n}\nclass DomRendererFactory2 {\n  constructor(eventManager, sharedStylesHost, appId, removeStylesOnCompDestroy, doc, platformId, ngZone, nonce = null) {\n    this.eventManager = eventManager;\n    this.sharedStylesHost = sharedStylesHost;\n    this.appId = appId;\n    this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n    this.doc = doc;\n    this.platformId = platformId;\n    this.ngZone = ngZone;\n    this.nonce = nonce;\n    this.rendererByCompId = new Map();\n    this.platformIsServer = isPlatformServer(platformId);\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager, doc, ngZone, this.platformIsServer);\n  }\n  createRenderer(element, type) {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n    if (this.platformIsServer && type.encapsulation === ViewEncapsulation.ShadowDom) {\n      // Domino does not support shadow DOM.\n      type = {\n        ...type,\n        encapsulation: ViewEncapsulation.Emulated\n      };\n    }\n    const renderer = this.getOrCreateRenderer(element, type);\n    // Renderers have different logic due to different encapsulation behaviours.\n    // Ex: for emulated, an attribute is added to the element.\n    if (renderer instanceof EmulatedEncapsulationDomRenderer2) {\n      renderer.applyToHost(element);\n    } else if (renderer instanceof NoneEncapsulationDomRenderer) {\n      renderer.applyStyles();\n    }\n    return renderer;\n  }\n  getOrCreateRenderer(element, type) {\n    const rendererByCompId = this.rendererByCompId;\n    let renderer = rendererByCompId.get(type.id);\n    if (!renderer) {\n      const doc = this.doc;\n      const ngZone = this.ngZone;\n      const eventManager = this.eventManager;\n      const sharedStylesHost = this.sharedStylesHost;\n      const removeStylesOnCompDestroy = this.removeStylesOnCompDestroy;\n      const platformIsServer = this.platformIsServer;\n      switch (type.encapsulation) {\n        case ViewEncapsulation.Emulated:\n          renderer = new EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, type, this.appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n          break;\n        case ViewEncapsulation.ShadowDom:\n          return new ShadowDomRenderer(eventManager, sharedStylesHost, element, type, doc, ngZone, this.nonce, platformIsServer);\n        default:\n          renderer = new NoneEncapsulationDomRenderer(eventManager, sharedStylesHost, type, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n          break;\n      }\n      rendererByCompId.set(type.id, renderer);\n    }\n    return renderer;\n  }\n  ngOnDestroy() {\n    this.rendererByCompId.clear();\n  }\n  static #_ = this.ɵfac = function DomRendererFactory2_Factory(t) {\n    return new (t || DomRendererFactory2)(i0.ɵɵinject(EventManager), i0.ɵɵinject(SharedStylesHost), i0.ɵɵinject(APP_ID), i0.ɵɵinject(REMOVE_STYLES_ON_COMPONENT_DESTROY), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(CSP_NONCE));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DomRendererFactory2,\n    factory: DomRendererFactory2.ɵfac\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomRendererFactory2, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: EventManager\n    }, {\n      type: SharedStylesHost\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [APP_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [REMOVE_STYLES_ON_COMPONENT_DESTROY]\n      }]\n    }, {\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CSP_NONCE]\n      }]\n    }];\n  }, null);\n})();\nclass DefaultDomRenderer2 {\n  constructor(eventManager, doc, ngZone, platformIsServer) {\n    this.eventManager = eventManager;\n    this.doc = doc;\n    this.ngZone = ngZone;\n    this.platformIsServer = platformIsServer;\n    this.data = Object.create(null);\n    this.destroyNode = null;\n  }\n  destroy() {}\n  createElement(name, namespace) {\n    if (namespace) {\n      // TODO: `|| namespace` was added in\n      // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n      // support how Ivy passed around the namespace URI rather than short name at the time. It did\n      // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n      // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n      // namespaces should be and make it consistent.\n      // Related issues:\n      // https://github.com/angular/angular/issues/44028\n      // https://github.com/angular/angular/issues/44883\n      return this.doc.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n    }\n    return this.doc.createElement(name);\n  }\n  createComment(value) {\n    return this.doc.createComment(value);\n  }\n  createText(value) {\n    return this.doc.createTextNode(value);\n  }\n  appendChild(parent, newChild) {\n    const targetParent = isTemplateNode(parent) ? parent.content : parent;\n    targetParent.appendChild(newChild);\n  }\n  insertBefore(parent, newChild, refChild) {\n    if (parent) {\n      const targetParent = isTemplateNode(parent) ? parent.content : parent;\n      targetParent.insertBefore(newChild, refChild);\n    }\n  }\n  removeChild(parent, oldChild) {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n  selectRootElement(selectorOrNode, preserveContent) {\n    let el = typeof selectorOrNode === 'string' ? this.doc.querySelector(selectorOrNode) : selectorOrNode;\n    if (!el) {\n      throw new ɵRuntimeError(-5104 /* RuntimeErrorCode.ROOT_NODE_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) && `The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n    return el;\n  }\n  parentNode(node) {\n    return node.parentNode;\n  }\n  nextSibling(node) {\n    return node.nextSibling;\n  }\n  setAttribute(el, name, value, namespace) {\n    if (namespace) {\n      name = namespace + ':' + name;\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n  removeAttribute(el, name, namespace) {\n    if (namespace) {\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n  addClass(el, name) {\n    el.classList.add(name);\n  }\n  removeClass(el, name) {\n    el.classList.remove(name);\n  }\n  setStyle(el, style, value, flags) {\n    if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n      el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n  removeStyle(el, style, flags) {\n    if (flags & RendererStyleFlags2.DashCase) {\n      // removeProperty has no effect when used on camelCased properties.\n      el.style.removeProperty(style);\n    } else {\n      el.style[style] = '';\n    }\n  }\n  setProperty(el, name, value) {\n    (typeof ngDevMode === 'undefined' || ngDevMode) && checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n  setValue(node, value) {\n    node.nodeValue = value;\n  }\n  listen(target, event, callback) {\n    (typeof ngDevMode === 'undefined' || ngDevMode) && checkNoSyntheticProp(event, 'listener');\n    if (typeof target === 'string') {\n      target = ɵgetDOM().getGlobalEventTarget(this.doc, target);\n      if (!target) {\n        throw new Error(`Unsupported event target ${target} for event ${event}`);\n      }\n    }\n    return this.eventManager.addEventListener(target, event, this.decoratePreventDefault(callback));\n  }\n  decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle\n    // the two differently. In the first case, the special '__ngUnwrap__' token is passed to the\n    // unwrap the listener (see below).\n    return event => {\n      // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n      // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The\n      // debug_node can inspect the listener toString contents for the existence of this special\n      // token. Because the token is a string literal, it is ensured to not be modified by compiled\n      // code.\n      if (event === '__ngUnwrap__') {\n        return eventHandler;\n      }\n      // Run the event handler inside the ngZone because event handlers are not patched\n      // by Zone on the server. This is required only for tests.\n      const allowDefaultBehavior = this.platformIsServer ? this.ngZone.runGuarded(() => eventHandler(event)) : eventHandler(event);\n      if (allowDefaultBehavior === false) {\n        event.preventDefault();\n      }\n      return undefined;\n    };\n  }\n}\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new ɵRuntimeError(5105 /* RuntimeErrorCode.UNEXPECTED_SYNTHETIC_PROPERTY */, `Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n  }\n}\nfunction isTemplateNode(node) {\n  return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  constructor(eventManager, sharedStylesHost, hostEl, component, doc, ngZone, nonce, platformIsServer) {\n    super(eventManager, doc, ngZone, platformIsServer);\n    this.sharedStylesHost = sharedStylesHost;\n    this.hostEl = hostEl;\n    this.shadowRoot = hostEl.attachShadow({\n      mode: 'open'\n    });\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = shimStylesContent(component.id, component.styles);\n    for (const style of styles) {\n      const styleEl = document.createElement('style');\n      if (nonce) {\n        styleEl.setAttribute('nonce', nonce);\n      }\n      styleEl.textContent = style;\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n  nodeOrShadowRoot(node) {\n    return node === this.hostEl ? this.shadowRoot : node;\n  }\n  appendChild(parent, newChild) {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n  insertBefore(parent, newChild, refChild) {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n  removeChild(parent, oldChild) {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n  parentNode(node) {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n  destroy() {\n    this.sharedStylesHost.removeHost(this.shadowRoot);\n  }\n}\nclass NoneEncapsulationDomRenderer extends DefaultDomRenderer2 {\n  constructor(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId) {\n    super(eventManager, doc, ngZone, platformIsServer);\n    this.sharedStylesHost = sharedStylesHost;\n    this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n    this.styles = compId ? shimStylesContent(compId, component.styles) : component.styles;\n  }\n  applyStyles() {\n    this.sharedStylesHost.addStyles(this.styles);\n  }\n  destroy() {\n    if (!this.removeStylesOnCompDestroy) {\n      return;\n    }\n    this.sharedStylesHost.removeStyles(this.styles);\n  }\n}\nclass EmulatedEncapsulationDomRenderer2 extends NoneEncapsulationDomRenderer {\n  constructor(eventManager, sharedStylesHost, component, appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer) {\n    const compId = appId + '-' + component.id;\n    super(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId);\n    this.contentAttr = shimContentAttribute(compId);\n    this.hostAttr = shimHostAttribute(compId);\n  }\n  applyToHost(element) {\n    this.applyStyles();\n    this.setAttribute(element, this.hostAttr, '');\n  }\n  createElement(parent, name) {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\nclass DomEventsPlugin extends EventManagerPlugin {\n  constructor(doc) {\n    super(doc);\n  }\n\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  supports(eventName) {\n    return true;\n  }\n  addEventListener(element, eventName, handler) {\n    element.addEventListener(eventName, handler, false);\n    return () => this.removeEventListener(element, eventName, handler);\n  }\n  removeEventListener(target, eventName, callback) {\n    return target.removeEventListener(eventName, callback);\n  }\n  static #_ = this.ɵfac = function DomEventsPlugin_Factory(t) {\n    return new (t || DomEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DomEventsPlugin,\n    factory: DomEventsPlugin.ɵfac\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap = {\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n  'alt': event => event.altKey,\n  'control': event => event.ctrlKey,\n  'meta': event => event.metaKey,\n  'shift': event => event.shiftKey\n};\n\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  constructor(doc) {\n    super(doc);\n  }\n\n  /**\n   * Reports whether a named key event is supported.\n   * @param eventName The event name to query.\n   * @return True if the named key event is supported.\n   */\n  supports(eventName) {\n    return KeyEventsPlugin.parseEventName(eventName) != null;\n  }\n\n  /**\n   * Registers a handler for a specific element and key event.\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the key event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns The key event that was registered.\n   */\n  addEventListener(element, eventName, handler) {\n    const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n    const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n    return this.manager.getZone().runOutsideAngular(() => {\n      return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n\n  /**\n   * Parses the user provided full keyboard event definition and normalizes it for\n   * later internal use. It ensures the string is all lowercase, converts special\n   * characters to a standard spelling, and orders all the values consistently.\n   *\n   * @param eventName The name of the key event to listen for.\n   * @returns an object with the full, normalized string, and the dom event name\n   * or null in the case when the event doesn't match a keyboard event.\n   */\n  static parseEventName(eventName) {\n    const parts = eventName.toLowerCase().split('.');\n    const domEventName = parts.shift();\n    if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n    const key = KeyEventsPlugin._normalizeKey(parts.pop());\n    let fullKey = '';\n    let codeIX = parts.indexOf('code');\n    if (codeIX > -1) {\n      parts.splice(codeIX, 1);\n      fullKey = 'code.';\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      const index = parts.indexOf(modifierName);\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    }\n    // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n    //       The code must remain in the `result['domEventName']` form.\n    // return {domEventName, fullKey};\n    const result = {};\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n\n  /**\n   * Determines whether the actual keys pressed match the configured key code string.\n   * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n   * event is attached to the DOM during the `addEventListener` call. This is unseen\n   * by the end user and is normalized for internal consistency and parsing.\n   *\n   * @param event The keyboard event.\n   * @param fullKeyCode The normalized user defined expected key event string\n   * @returns boolean.\n   */\n  static matchEventFullKeyCode(event, fullKeyCode) {\n    let keycode = _keyMap[event.key] || event.key;\n    let key = '';\n    if (fullKeyCode.indexOf('code.') > -1) {\n      keycode = event.code;\n      key = 'code.';\n    }\n    // the keycode could be unidentified so we have to check here\n    if (keycode == null || !keycode) return false;\n    keycode = keycode.toLowerCase();\n    if (keycode === ' ') {\n      keycode = 'space'; // for readability\n    } else if (keycode === '.') {\n      keycode = 'dot'; // because '.' is used as a separator in event names\n    }\n\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName !== keycode) {\n        const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n        if (modifierGetter(event)) {\n          key += modifierName + '.';\n        }\n      }\n    });\n    key += keycode;\n    return key === fullKeyCode;\n  }\n\n  /**\n   * Configures a handler callback for a key event.\n   * @param fullKey The event name that combines all simultaneous keystrokes.\n   * @param handler The function that responds to the key event.\n   * @param zone The zone in which the event occurred.\n   * @returns A callback function.\n   */\n  static eventCallback(fullKey, handler, zone) {\n    return event => {\n      if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n\n  /** @internal */\n  static _normalizeKey(keyName) {\n    // TODO: switch to a Map if the mapping grows too much\n    switch (keyName) {\n      case 'esc':\n        return 'escape';\n      default:\n        return keyName;\n    }\n  }\n  static #_ = this.ɵfac = function KeyEventsPlugin_Factory(t) {\n    return new (t || KeyEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: KeyEventsPlugin,\n    factory: KeyEventsPlugin.ɵfac\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(KeyEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction bootstrapApplication(rootComponent, options) {\n  return ɵinternalCreateApplication({\n    rootComponent,\n    ...createProvidersConfig(options)\n  });\n}\n\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction createApplication(options) {\n  return ɵinternalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n  return {\n    appProviders: [...BROWSER_MODULE_PROVIDERS, ...(options?.providers ?? [])],\n    platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n  };\n}\n\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideProtractorTestingSupport` call results in app\n  // code.\n  return [...TESTABILITY_PROVIDERS];\n}\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n  return new ErrorHandler();\n}\nfunction _document() {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_ID,\n  useValue: ɵPLATFORM_BROWSER_ID\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useValue: initDomAdapter,\n  multi: true\n}, {\n  provide: DOCUMENT,\n  useFactory: _document,\n  deps: []\n}];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [{\n  provide: ɵTESTABILITY_GETTER,\n  useClass: BrowserGetTestability,\n  deps: []\n}, {\n  provide: ɵTESTABILITY,\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n}, {\n  provide: Testability,\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n}];\nconst BROWSER_MODULE_PROVIDERS = [{\n  provide: ɵINJECTOR_SCOPE,\n  useValue: 'root'\n}, {\n  provide: ErrorHandler,\n  useFactory: errorHandler,\n  deps: []\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: DomEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT, NgZone, PLATFORM_ID]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: KeyEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, DomRendererFactory2, SharedStylesHost, EventManager, {\n  provide: RendererFactory2,\n  useExisting: DomRendererFactory2\n}, {\n  provide: XhrFactory,\n  useClass: BrowserXhr,\n  deps: []\n}, typeof ngDevMode === 'undefined' || ngDevMode ? {\n  provide: BROWSER_MODULE_PROVIDERS_MARKER,\n  useValue: true\n} : []];\n\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n  constructor(providersAlreadyPresent) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && providersAlreadyPresent) {\n      throw new ɵRuntimeError(5100 /* RuntimeErrorCode.BROWER_MODULE_ALREADY_LOADED */, `Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` + `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n    }\n  }\n\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   *\n   * @deprecated Use {@link APP_ID} instead to set the application ID.\n   */\n  static withServerTransition(params) {\n    return {\n      ngModule: BrowserModule,\n      providers: [{\n        provide: APP_ID,\n        useValue: params.appId\n      }]\n    };\n  }\n  static #_ = this.ɵfac = function BrowserModule_Factory(t) {\n    return new (t || BrowserModule)(i0.ɵɵinject(BROWSER_MODULE_PROVIDERS_MARKER, 12));\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BrowserModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n    imports: [CommonModule, ApplicationModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserModule, [{\n    type: NgModule,\n    args: [{\n      providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n      exports: [CommonModule, ApplicationModule]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [BROWSER_MODULE_PROVIDERS_MARKER]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n  return new Meta(ɵɵinject(DOCUMENT));\n}\n\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n  constructor(_doc) {\n    this._doc = _doc;\n    this._dom = ɵgetDOM();\n  }\n\n  /**\n   * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * If an existing element is found, it is returned and is not modified in any way.\n   * @param tag The definition of a `<meta>` element to match or create.\n   * @param forceCreation True to create a new element without checking whether one already exists.\n   * @returns The existing element with the same attributes and values if found,\n   * the new element if no match is found, or `null` if the tag parameter is not defined.\n   */\n  addTag(tag, forceCreation = false) {\n    if (!tag) return null;\n    return this._getOrCreateElement(tag, forceCreation);\n  }\n\n  /**\n   * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * @param tags An array of tag definitions to match or create.\n   * @param forceCreation True to create new elements without checking whether they already exist.\n   * @returns The matching elements if found, or the new elements.\n   */\n  addTags(tags, forceCreation = false) {\n    if (!tags) return [];\n    return tags.reduce((result, tag) => {\n      if (tag) {\n        result.push(this._getOrCreateElement(tag, forceCreation));\n      }\n      return result;\n    }, []);\n  }\n\n  /**\n   * Retrieves a `<meta>` tag element in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching element, if any.\n   */\n  getTag(attrSelector) {\n    if (!attrSelector) return null;\n    return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n  }\n\n  /**\n   * Retrieves a set of `<meta>` tag elements in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching elements, if any.\n   */\n  getTags(attrSelector) {\n    if (!attrSelector) return [];\n    const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n    return list ? [].slice.call(list) : [];\n  }\n\n  /**\n   * Modifies an existing `<meta>` tag element in the current HTML document.\n   * @param tag The tag description with which to replace the existing tag content.\n   * @param selector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n   * replacement tag.\n   * @return The modified element.\n   */\n  updateTag(tag, selector) {\n    if (!tag) return null;\n    selector = selector || this._parseSelector(tag);\n    const meta = this.getTag(selector);\n    if (meta) {\n      return this._setMetaElementAttributes(tag, meta);\n    }\n    return this._getOrCreateElement(tag, true);\n  }\n\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param attrSelector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   */\n  removeTag(attrSelector) {\n    this.removeTagElement(this.getTag(attrSelector));\n  }\n\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param meta The tag definition to match against to identify an existing tag.\n   */\n  removeTagElement(meta) {\n    if (meta) {\n      this._dom.remove(meta);\n    }\n  }\n  _getOrCreateElement(meta, forceCreation = false) {\n    if (!forceCreation) {\n      const selector = this._parseSelector(meta);\n      // It's allowed to have multiple elements with the same name so it's not enough to\n      // just check that element with the same name already present on the page. We also need to\n      // check if element has tag attributes\n      const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n      if (elem !== undefined) return elem;\n    }\n    const element = this._dom.createElement('meta');\n    this._setMetaElementAttributes(meta, element);\n    const head = this._doc.getElementsByTagName('head')[0];\n    head.appendChild(element);\n    return element;\n  }\n  _setMetaElementAttributes(tag, el) {\n    Object.keys(tag).forEach(prop => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n    return el;\n  }\n  _parseSelector(tag) {\n    const attr = tag.name ? 'name' : 'property';\n    return `${attr}=\"${tag[attr]}\"`;\n  }\n  _containsAttributes(tag, elem) {\n    return Object.keys(tag).every(key => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n  }\n  _getMetaKeyMap(prop) {\n    return META_KEYS_MAP[prop] || prop;\n  }\n  static #_ = this.ɵfac = function Meta_Factory(t) {\n    return new (t || Meta)(i0.ɵɵinject(DOCUMENT));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Meta,\n    factory: function Meta_Factory(t) {\n      let r = null;\n      if (t) {\n        r = new t();\n      } else {\n        r = createMeta();\n      }\n      return r;\n    },\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Meta, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createMeta,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n  httpEquiv: 'http-equiv'\n};\n\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n  return new Title(ɵɵinject(DOCUMENT));\n}\n\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n\n  /**\n   * Get the title of the current HTML document.\n   */\n  getTitle() {\n    return this._doc.title;\n  }\n\n  /**\n   * Set the title of the current HTML document.\n   * @param newTitle\n   */\n  setTitle(newTitle) {\n    this._doc.title = newTitle || '';\n  }\n  static #_ = this.ɵfac = function Title_Factory(t) {\n    return new (t || Title)(i0.ɵɵinject(DOCUMENT));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Title,\n    factory: function Title_Factory(t) {\n      let r = null;\n      if (t) {\n        r = new t();\n      } else {\n        r = createTitle();\n      }\n      return r;\n    },\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Title, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createTitle,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n    ng[name] = value;\n  }\n}\nconst win = typeof window !== 'undefined' && window || {};\nclass ChangeDetectionPerfRecord {\n  constructor(msPerTick, numTicks) {\n    this.msPerTick = msPerTick;\n    this.numTicks = numTicks;\n  }\n}\n\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n  constructor(ref) {\n    this.appRef = ref.injector.get(ApplicationRef);\n  }\n\n  // tslint:disable:no-console\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n  timeChangeDetection(config) {\n    const record = config && config['record'];\n    const profileName = 'Change Detection';\n    // Profiler is not available in Android browsers without dev tools opened\n    const isProfilerAvailable = win.console.profile != null;\n    if (record && isProfilerAvailable) {\n      win.console.profile(profileName);\n    }\n    const start = performanceNow();\n    let numTicks = 0;\n    while (numTicks < 5 || performanceNow() - start < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n    const end = performanceNow();\n    if (record && isProfilerAvailable) {\n      win.console.profileEnd(profileName);\n    }\n    const msPerTick = (end - start) / numTicks;\n    win.console.log(`ran ${numTicks} change detection cycles`);\n    win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n}\nfunction performanceNow() {\n  return win.performance && win.performance.now ? win.performance.now() : new Date().getTime();\n}\nconst PROFILER_GLOBAL_NAME = 'profiler';\n\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n  /**\n   * Match all nodes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   */\n  static all() {\n    return () => true;\n  }\n\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   */\n  static css(selector) {\n    return debugElement => {\n      return debugElement.nativeElement != null ? elementMatches(debugElement.nativeElement, selector) : false;\n    };\n  }\n\n  /**\n   * Match nodes that have the given directive present.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   */\n  static directive(type) {\n    return debugNode => debugNode.providerTokens.indexOf(type) !== -1;\n  }\n}\nfunction elementMatches(n, selector) {\n  if (ɵgetDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n  return false;\n}\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see {@link HammerGestureConfig}\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n  constructor() {\n    /**\n     * A set of supported event names for gestures to be used in Angular.\n     * Angular supports all built-in recognizers, as listed in\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    this.events = [];\n    /**\n     * Maps gesture event names to a set of configuration options\n     * that specify overrides to the default values for specific properties.\n     *\n     * The key is a supported event name to be configured,\n     * and the options object contains a set of properties, with override values\n     * to be applied to the named recognizer event.\n     * For example, to disable recognition of the rotate event, specify\n     *  `{\"rotate\": {\"enable\": false}}`.\n     *\n     * Properties that are not present take the HammerJS default values.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     *\n     */\n    this.overrides = {};\n  }\n\n  /**\n   * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n  buildHammer(element) {\n    const mc = new Hammer(element, this.options);\n    mc.get('pinch').set({\n      enable: true\n    });\n    mc.get('rotate').set({\n      enable: true\n    });\n    for (const eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n    return mc;\n  }\n  static #_ = this.ɵfac = function HammerGestureConfig_Factory(t) {\n    return new (t || HammerGestureConfig)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: HammerGestureConfig,\n    factory: HammerGestureConfig.ɵfac\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerGestureConfig, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n  constructor(doc, _config, console, loader) {\n    super(doc);\n    this._config = _config;\n    this.console = console;\n    this.loader = loader;\n    this._loaderPromise = null;\n  }\n  supports(eventName) {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n    if (!window.Hammer && !this.loader) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` + `loaded and no custom loader has been specified.`);\n      }\n      return false;\n    }\n    return true;\n  }\n  addEventListener(element, eventName, handler) {\n    const zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n    // If Hammer is not present but a loader is specified, we defer adding the event listener\n    // until Hammer is loaded.\n    if (!window.Hammer && this.loader) {\n      this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader());\n      // This `addEventListener` method returns a function to remove the added listener.\n      // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n      // than remove anything.\n      let cancelRegistration = false;\n      let deregister = () => {\n        cancelRegistration = true;\n      };\n      zone.runOutsideAngular(() => this._loaderPromise.then(() => {\n        // If Hammer isn't actually loaded when the custom loader resolves, give up.\n        if (!window.Hammer) {\n          if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n          }\n          deregister = () => {};\n          return;\n        }\n        if (!cancelRegistration) {\n          // Now that Hammer is loaded and the listener is being loaded for real,\n          // the deregistration function changes from canceling registration to\n          // removal.\n          deregister = this.addEventListener(element, eventName, handler);\n        }\n      }).catch(() => {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` + `Hammer.JS loader failed.`);\n        }\n        deregister = () => {};\n      }));\n      // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n      // can change the behavior of `deregister` once the listener is added. Using a closure in\n      // this way allows us to avoid any additional data structures to track listener removal.\n      return () => {\n        deregister();\n      };\n    }\n    return zone.runOutsideAngular(() => {\n      // Creating the manager bind events, must be done outside of angular\n      const mc = this._config.buildHammer(element);\n      const callback = function (eventObj) {\n        zone.runGuarded(function () {\n          handler(eventObj);\n        });\n      };\n      mc.on(eventName, callback);\n      return () => {\n        mc.off(eventName, callback);\n        // destroy mc to prevent memory leak\n        if (typeof mc.destroy === 'function') {\n          mc.destroy();\n        }\n      };\n    });\n  }\n  isCustomEvent(eventName) {\n    return this._config.events.indexOf(eventName) > -1;\n  }\n  static #_ = this.ɵfac = function HammerGesturesPlugin_Factory(t) {\n    return new (t || HammerGesturesPlugin)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(HAMMER_GESTURE_CONFIG), i0.ɵɵinject(i0.ɵConsole), i0.ɵɵinject(HAMMER_LOADER, 8));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: HammerGesturesPlugin,\n    factory: HammerGesturesPlugin.ɵfac\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: HammerGestureConfig,\n      decorators: [{\n        type: Inject,\n        args: [HAMMER_GESTURE_CONFIG]\n      }]\n    }, {\n      type: i0.ɵConsole\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HAMMER_LOADER]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\nclass HammerModule {\n  static #_ = this.ɵfac = function HammerModule_Factory(t) {\n    return new (t || HammerModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: HammerModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [{\n      provide: EVENT_MANAGER_PLUGINS,\n      useClass: HammerGesturesPlugin,\n      multi: true,\n      deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n    }, {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: HammerGestureConfig,\n      deps: []\n    }]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n      }, {\n        provide: HAMMER_GESTURE_CONFIG,\n        useClass: HammerGestureConfig,\n        deps: []\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n  static #_ = this.ɵfac = function DomSanitizer_Factory(t) {\n    return new (t || DomSanitizer)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DomSanitizer,\n    factory: function DomSanitizer_Factory(t) {\n      let r = null;\n      if (t) {\n        r = new (t || DomSanitizer)();\n      } else {\n        r = i0.ɵɵinject(DomSanitizerImpl);\n      }\n      return r;\n    },\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomSanitizer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: forwardRef(() => DomSanitizerImpl)\n    }]\n  }], null, null);\n})();\nfunction domSanitizerImplFactory(injector) {\n  return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nclass DomSanitizerImpl extends DomSanitizer {\n  constructor(_doc) {\n    super();\n    this._doc = _doc;\n  }\n  sanitize(ctx, value) {\n    if (value == null) return null;\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return value;\n      case SecurityContext.HTML:\n        if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n      case SecurityContext.STYLE:\n        if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        return value;\n      case SecurityContext.SCRIPT:\n        if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        throw new ɵRuntimeError(5200 /* RuntimeErrorCode.SANITIZATION_UNSAFE_SCRIPT */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'unsafe value used in a script context');\n      case SecurityContext.URL:\n        if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        return ɵ_sanitizeUrl(String(value));\n      case SecurityContext.RESOURCE_URL:\n        if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        throw new ɵRuntimeError(5201 /* RuntimeErrorCode.SANITIZATION_UNSAFE_RESOURCE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) && `unsafe value used in a resource URL context (see ${ɵXSS_SECURITY_URL})`);\n      default:\n        throw new ɵRuntimeError(5202 /* RuntimeErrorCode.SANITIZATION_UNEXPECTED_CTX */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Unexpected SecurityContext ${ctx} (see ${ɵXSS_SECURITY_URL})`);\n    }\n  }\n  bypassSecurityTrustHtml(value) {\n    return ɵbypassSanitizationTrustHtml(value);\n  }\n  bypassSecurityTrustStyle(value) {\n    return ɵbypassSanitizationTrustStyle(value);\n  }\n  bypassSecurityTrustScript(value) {\n    return ɵbypassSanitizationTrustScript(value);\n  }\n  bypassSecurityTrustUrl(value) {\n    return ɵbypassSanitizationTrustUrl(value);\n  }\n  bypassSecurityTrustResourceUrl(value) {\n    return ɵbypassSanitizationTrustResourceUrl(value);\n  }\n  static #_ = this.ɵfac = function DomSanitizerImpl_Factory(t) {\n    return new (t || DomSanitizerImpl)(i0.ɵɵinject(DOCUMENT));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DomSanitizerImpl,\n    factory: function DomSanitizerImpl_Factory(t) {\n      let r = null;\n      if (t) {\n        r = new t();\n      } else {\n        r = domSanitizerImplFactory(i0.ɵɵinject(Injector));\n      }\n      return r;\n    },\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomSanitizerImpl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: domSanitizerImplFactory,\n      deps: [Injector]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Helper function to create an object that represents a Hydration feature.\n */\nfunction hydrationFeature(kind, providers = []) {\n  return {\n    ɵkind: kind,\n    ɵproviders: providers\n  };\n}\n\n/**\n * Disables DOM nodes reuse during hydration. Effectively makes\n * Angular re-render an application from scratch on the client.\n *\n * When this option is enabled, make sure that the initial navigation\n * option is configured for the Router as `enabledBlocking` by using the\n * `withEnabledBlockingInitialNavigation` in the `provideRouter` call:\n *\n * ```\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideRouter(\n *       // ... other features ...\n *       withEnabledBlockingInitialNavigation()\n *     ),\n *     provideClientHydration(withNoDomReuse())\n *   ]\n * });\n * ```\n *\n * This would ensure that the application is rerendered after all async\n * operations in the Router (such as lazy-loading of components,\n * waiting for async guards and resolvers) are completed to avoid\n * clearing the DOM on the client too soon, thus causing content flicker.\n *\n * @see {@link provideRouter}\n * @see {@link withEnabledBlockingInitialNavigation}\n *\n * @publicApi\n * @developerPreview\n */\nfunction withNoDomReuse() {\n  // This feature has no providers and acts as a flag that turns off\n  // non-destructive hydration (which otherwise is turned on by default).\n  return hydrationFeature(0 /* HydrationFeatureKind.NoDomReuseFeature */);\n}\n\n/**\n * Disables HTTP transfer cache. Effectively causes HTTP requests to be performed twice: once on the\n * server and other one on the browser.\n *\n * @publicApi\n * @developerPreview\n */\nfunction withNoHttpTransferCache() {\n  // This feature has no providers and acts as a flag that turns off\n  // HTTP transfer cache (which otherwise is turned on by default).\n  return hydrationFeature(1 /* HydrationFeatureKind.NoHttpTransferCache */);\n}\n\n/**\n * Returns an `ENVIRONMENT_INITIALIZER` token setup with a function\n * that verifies whether compatible ZoneJS was used in an application\n * and logs a warning in a console if it's not the case.\n */\nfunction provideZoneJsCompatibilityDetector() {\n  return [{\n    provide: ENVIRONMENT_INITIALIZER,\n    useValue: () => {\n      const ngZone = inject(NgZone);\n      // Checking `ngZone instanceof NgZone` would be insufficient here,\n      // because custom implementations might use NgZone as a base class.\n      if (ngZone.constructor !== NgZone) {\n        const console = inject(ɵConsole);\n        const message = ɵformatRuntimeError(-5000 /* RuntimeErrorCode.UNSUPPORTED_ZONEJS_INSTANCE */, 'Angular detected that hydration was enabled for an application ' + 'that uses a custom or a noop Zone.js implementation. ' + 'This is not yet a fully supported configuration.');\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n      }\n    },\n    multi: true\n  }];\n}\n\n/**\n * Sets up providers necessary to enable hydration functionality for the application.\n *\n * By default, the function enables the recommended set of features for the optimal\n * performance for most of the applications. You can enable/disable features by\n * passing special functions (from the `HydrationFeatures` set) as arguments to the\n * `provideClientHydration` function. It includes the following features:\n *\n * * Reconciling DOM hydration. Learn more about it [here](guide/hydration).\n * * [`HttpClient`](api/common/http/HttpClient) response caching while running on the server and\n * transferring this cache to the client to avoid extra HTTP requests. Learn more about data caching\n * [here](/guide/universal#caching-data-when-using-httpclient).\n *\n * These functions functions will allow you to disable some of the default features:\n * * {@link withNoDomReuse} to disable DOM nodes reuse during hydration\n * * {@link withNoHttpTransferCache} to disable HTTP transfer cache\n *\n *\n * @usageNotes\n *\n * Basic example of how you can enable hydration in your application when\n * `bootstrapApplication` function is used:\n * ```\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration()]\n * });\n * ```\n *\n * Alternatively if you are using NgModules, you would add `provideClientHydration`\n * to your root app module's provider list.\n * ```\n * @NgModule({\n *   declarations: [RootCmp],\n *   bootstrap: [RootCmp],\n *   providers: [provideClientHydration()],\n * })\n * export class AppModule {}\n * ```\n *\n * @see {@link withNoDomReuse}\n * @see {@link withNoHttpTransferCache}\n *\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to enable hydration.\n *\n * @publicApi\n * @developerPreview\n */\nfunction provideClientHydration(...features) {\n  const providers = [];\n  const featuresKind = new Set();\n  for (const {\n    ɵproviders,\n    ɵkind\n  } of features) {\n    featuresKind.add(ɵkind);\n    if (ɵproviders.length) {\n      providers.push(ɵproviders);\n    }\n  }\n  return makeEnvironmentProviders([typeof ngDevMode !== 'undefined' && ngDevMode ? provideZoneJsCompatibilityDetector() : [], featuresKind.has(0 /* HydrationFeatureKind.NoDomReuseFeature */) ? [] : ɵwithDomHydration(), featuresKind.has(1 /* HydrationFeatureKind.NoHttpTransferCache */) ? [] : ɵwithHttpTransferCache(), providers]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('16.2.10');\n\n// Re-export TransferState to the public API of the `platform-browser` for backwards-compatibility.\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n * @deprecated `makeStateKey` has moved, please import `makeStateKey` from `@angular/core` instead.\n */\n// The below is a workaround to add a deprecated message.\nconst makeStateKey = makeStateKey$1;\n// The below type is needed for G3 due to JSC_CONFORMANCE_VIOLATION.\nconst TransferState = TransferState$1;\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, REMOVE_STYLES_ON_COMPONENT_DESTROY, Title, TransferState, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, provideClientHydration, provideProtractorTestingSupport, withNoDomReuse, withNoHttpTransferCache, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, SharedStylesHost as ɵSharedStylesHost, initDomAdapter as ɵinitDomAdapter };","map":{"version":3,"names":["i0","ɵglobal","ɵRuntimeError","Injectable","InjectionToken","Inject","APP_ID","CSP_NONCE","PLATFORM_ID","Optional","ViewEncapsulation","RendererStyleFlags2","ɵinternalCreateApplication","ErrorHandler","ɵsetDocument","PLATFORM_INITIALIZER","createPlatformFactory","platformCore","ɵTESTABILITY_GETTER","ɵTESTABILITY","Testability","NgZone","TestabilityRegistry","ɵINJECTOR_SCOPE","RendererFactory2","ApplicationModule","NgModule","SkipSelf","ɵɵinject","ApplicationRef","ɵConsole","forwardRef","ɵXSS_SECURITY_URL","SecurityContext","ɵallowSanitizationBypassAndThrow","ɵunwrapSafeValue","ɵ_sanitizeUrl","ɵ_sanitizeHtml","ɵbypassSanitizationTrustHtml","ɵbypassSanitizationTrustStyle","ɵbypassSanitizationTrustScript","ɵbypassSanitizationTrustUrl","ɵbypassSanitizationTrustResourceUrl","Injector","ENVIRONMENT_INITIALIZER","inject","ɵformatRuntimeError","makeEnvironmentProviders","ɵwithDomHydration","Version","makeStateKey","makeStateKey$1","TransferState","TransferState$1","ɵDomAdapter","ɵsetRootDomAdapter","ɵparseCookieValue","ɵgetDOM","isPlatformServer","DOCUMENT","ɵPLATFORM_BROWSER_ID","XhrFactory","CommonModule","ɵwithHttpTransferCache","GenericBrowserDomAdapter","constructor","arguments","supportsDOMEvents","BrowserDomAdapter","makeCurrent","onAndCancel","el","evt","listener","addEventListener","removeEventListener","dispatchEvent","remove","node","parentNode","removeChild","createElement","tagName","doc","getDefaultDocument","createHtmlDocument","document","implementation","createHTMLDocument","isElementNode","nodeType","Node","ELEMENT_NODE","isShadowRoot","DocumentFragment","getGlobalEventTarget","target","window","body","getBaseHref","href","getBaseElementHref","relativePath","resetBaseElement","baseElement","getUserAgent","navigator","userAgent","getCookie","name","cookie","querySelector","getAttribute","urlParsingNode","url","setAttribute","pathName","pathname","charAt","BrowserGetTestability","addToWindow","registry","elem","findInAncestors","testability","findTestabilityInTree","ngDevMode","getAllTestabilities","getAllRootElements","whenAllStable","callback","testabilities","count","length","didWork","decrement","didWork_","forEach","whenStable","push","t","getTestability","host","parentElement","BrowserXhr","build","XMLHttpRequest","_","ɵfac","BrowserXhr_Factory","_2","ɵprov","ɵɵdefineInjectable","token","factory","ɵsetClassMetadata","type","EVENT_MANAGER_PLUGINS","EventManager","plugins","_zone","_eventNameToPlugin","Map","plugin","manager","_plugins","slice","reverse","element","eventName","handler","_findPluginFor","getZone","get","find","supports","set","EventManager_Factory","undefined","decorators","args","EventManagerPlugin","_doc","APP_ID_ATTRIBUTE_NAME","SharedStylesHost","appId","nonce","platformId","styleRef","hostNodes","Set","styleNodesInDOM","collectServerRenderedStyles","platformIsServer","resetHostNodes","addStyles","styles","style","usageCount","changeUsageCount","onStyleAdded","removeStyles","onStyleRemoved","ngOnDestroy","clear","getAllStyles","addHost","hostNode","add","addStyleToHost","removeHost","delete","keys","elements","head","querySelectorAll","styleMap","textContent","delta","map","has","styleRefValue","usage","getStyleElement","styleEl","removeAttribute","appendChild","styleElRef","SharedStylesHost_Factory","Document","NAMESPACE_URIS","COMPONENT_REGEX","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT","REMOVE_STYLES_ON_COMPONENT_DESTROY","providedIn","shimContentAttribute","componentShortId","replace","shimHostAttribute","shimStylesContent","compId","s","DomRendererFactory2","eventManager","sharedStylesHost","removeStylesOnCompDestroy","ngZone","rendererByCompId","defaultRenderer","DefaultDomRenderer2","createRenderer","encapsulation","ShadowDom","Emulated","renderer","getOrCreateRenderer","EmulatedEncapsulationDomRenderer2","applyToHost","NoneEncapsulationDomRenderer","applyStyles","id","ShadowDomRenderer","DomRendererFactory2_Factory","Object","data","create","destroyNode","destroy","namespace","createElementNS","createComment","value","createText","createTextNode","parent","newChild","targetParent","isTemplateNode","content","insertBefore","refChild","oldChild","selectRootElement","selectorOrNode","preserveContent","nextSibling","namespaceUri","setAttributeNS","removeAttributeNS","addClass","classList","removeClass","setStyle","flags","DashCase","Important","setProperty","removeStyle","removeProperty","checkNoSyntheticProp","setValue","nodeValue","listen","event","Error","decoratePreventDefault","eventHandler","allowDefaultBehavior","runGuarded","preventDefault","AT_CHARCODE","charCodeAt","nameKind","hostEl","component","shadowRoot","attachShadow","mode","nodeOrShadowRoot","contentAttr","hostAttr","DomEventsPlugin","DomEventsPlugin_Factory","MODIFIER_KEYS","_keyMap","MODIFIER_KEY_GETTERS","altKey","ctrlKey","metaKey","shiftKey","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","runOutsideAngular","parts","toLowerCase","split","domEventName","shift","key","_normalizeKey","pop","fullKey","codeIX","indexOf","splice","modifierName","index","result","matchEventFullKeyCode","fullKeyCode","keycode","code","modifierGetter","zone","keyName","KeyEventsPlugin_Factory","bootstrapApplication","rootComponent","options","createProvidersConfig","createApplication","appProviders","BROWSER_MODULE_PROVIDERS","providers","platformProviders","INTERNAL_BROWSER_PLATFORM_PROVIDERS","provideProtractorTestingSupport","TESTABILITY_PROVIDERS","initDomAdapter","errorHandler","_document","provide","useValue","multi","useFactory","deps","platformBrowser","BROWSER_MODULE_PROVIDERS_MARKER","useClass","useExisting","BrowserModule","providersAlreadyPresent","withServerTransition","params","ngModule","BrowserModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","createMeta","Meta","_dom","addTag","tag","forceCreation","_getOrCreateElement","addTags","tags","reduce","getTag","attrSelector","getTags","list","call","updateTag","selector","_parseSelector","meta","_setMetaElementAttributes","removeTag","removeTagElement","filter","_containsAttributes","getElementsByTagName","prop","_getMetaKeyMap","attr","every","META_KEYS_MAP","Meta_Factory","r","httpEquiv","createTitle","Title","getTitle","title","setTitle","newTitle","Title_Factory","exportNgVar","COMPILED","ng","win","ChangeDetectionPerfRecord","msPerTick","numTicks","AngularProfiler","ref","appRef","injector","timeChangeDetection","config","record","profileName","isProfilerAvailable","console","profile","start","performanceNow","tick","end","profileEnd","log","toFixed","performance","now","Date","getTime","PROFILER_GLOBAL_NAME","enableDebugTools","disableDebugTools","By","all","css","debugElement","nativeElement","elementMatches","directive","debugNode","providerTokens","n","matches","msMatchesSelector","webkitMatchesSelector","EVENT_NAMES","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","events","overrides","buildHammer","mc","Hammer","enable","HammerGestureConfig_Factory","HammerGesturesPlugin","_config","loader","_loaderPromise","hasOwnProperty","isCustomEvent","warn","cancelRegistration","deregister","then","catch","eventObj","on","off","HammerGesturesPlugin_Factory","HammerModule","HammerModule_Factory","DomSanitizer","DomSanitizer_Factory","DomSanitizerImpl","domSanitizerImplFactory","sanitize","ctx","NONE","HTML","String","toString","STYLE","SCRIPT","URL","RESOURCE_URL","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","DomSanitizerImpl_Factory","hydrationFeature","kind","ɵkind","ɵproviders","withNoDomReuse","withNoHttpTransferCache","provideZoneJsCompatibilityDetector","message","provideClientHydration","features","featuresKind","VERSION","ɵBrowserDomAdapter","ɵBrowserGetTestability","ɵDomEventsPlugin","ɵDomRendererFactory2","ɵDomSanitizerImpl","ɵHammerGesturesPlugin","ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS","ɵKeyEventsPlugin","ɵSharedStylesHost","ɵinitDomAdapter"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs"],"sourcesContent":["/**\n * @license Angular v16.2.10\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport {\n  ɵglobal,\n  ɵRuntimeError,\n  Injectable,\n  InjectionToken,\n  Inject,\n  APP_ID,\n  CSP_NONCE,\n  PLATFORM_ID,\n  Optional,\n  ViewEncapsulation,\n  RendererStyleFlags2,\n  ɵinternalCreateApplication,\n  ErrorHandler,\n  ɵsetDocument,\n  PLATFORM_INITIALIZER,\n  createPlatformFactory,\n  platformCore,\n  ɵTESTABILITY_GETTER,\n  ɵTESTABILITY,\n  Testability,\n  NgZone,\n  TestabilityRegistry,\n  ɵINJECTOR_SCOPE,\n  RendererFactory2,\n  ApplicationModule,\n  NgModule,\n  SkipSelf,\n  ɵɵinject,\n  ApplicationRef,\n  ɵConsole,\n  forwardRef,\n  ɵXSS_SECURITY_URL,\n  SecurityContext,\n  ɵallowSanitizationBypassAndThrow,\n  ɵunwrapSafeValue,\n  ɵ_sanitizeUrl,\n  ɵ_sanitizeHtml,\n  ɵbypassSanitizationTrustHtml,\n  ɵbypassSanitizationTrustStyle,\n  ɵbypassSanitizationTrustScript,\n  ɵbypassSanitizationTrustUrl,\n  ɵbypassSanitizationTrustResourceUrl,\n  Injector,\n  ENVIRONMENT_INITIALIZER,\n  inject,\n  ɵformatRuntimeError,\n  makeEnvironmentProviders,\n  ɵwithDomHydration,\n  Version,\n  makeStateKey as makeStateKey$1,\n  TransferState as TransferState$1\n} from '@angular/core';\nimport {\n  ɵDomAdapter,\n  ɵsetRootDomAdapter,\n  ɵparseCookieValue,\n  ɵgetDOM,\n  isPlatformServer,\n  DOCUMENT,\n  ɵPLATFORM_BROWSER_ID,\n  XhrFactory,\n  CommonModule\n} from '@angular/common';\n\nexport {ɵgetDOM} from '@angular/common';\nimport {ɵwithHttpTransferCache} from '@angular/common/http';\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n  constructor() {\n    super(...arguments);\n    this.supportsDOMEvents = true;\n  }\n}\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n  static makeCurrent() {\n    ɵsetRootDomAdapter(new BrowserDomAdapter());\n  }\n\n  onAndCancel(el, evt, listener) {\n    el.addEventListener(evt, listener);\n    return () => {\n      el.removeEventListener(evt, listener);\n    };\n  }\n\n  dispatchEvent(el, evt) {\n    el.dispatchEvent(evt);\n  }\n\n  remove(node) {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  }\n\n  createElement(tagName, doc) {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n\n  createHtmlDocument() {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n\n  getDefaultDocument() {\n    return document;\n  }\n\n  isElementNode(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n\n  isShadowRoot(node) {\n    return node instanceof DocumentFragment;\n  }\n\n  /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n  getGlobalEventTarget(doc, target) {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n\n  getBaseHref(doc) {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n\n  resetBaseElement() {\n    baseElement = null;\n  }\n\n  getUserAgent() {\n    return window.navigator.userAgent;\n  }\n\n  getCookie(name) {\n    return ɵparseCookieValue(document.cookie, name);\n  }\n}\n\nlet baseElement = null;\n\nfunction getBaseElementHref() {\n  baseElement = baseElement || document.querySelector('base');\n  return baseElement ? baseElement.getAttribute('href') : null;\n}\n\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode;\n\nfunction relativePath(url) {\n  urlParsingNode = urlParsingNode || document.createElement('a');\n  urlParsingNode.setAttribute('href', url);\n  const pathName = urlParsingNode.pathname;\n  return pathName.charAt(0) === '/' ? pathName : `/${pathName}`;\n}\n\nclass BrowserGetTestability {\n  addToWindow(registry) {\n    ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new ɵRuntimeError(5103 /* RuntimeErrorCode.TESTABILITY_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n          'Could not find testability for element.');\n      }\n      return testability;\n    };\n    ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n    ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n    const whenAllStable = (callback) => {\n      const testabilities = ɵglobal['getAllAngularTestabilities']();\n      let count = testabilities.length;\n      let didWork = false;\n      const decrement = function (didWork_) {\n        didWork = didWork || didWork_;\n        count--;\n        if (count == 0) {\n          callback(didWork);\n        }\n      };\n      testabilities.forEach((testability) => {\n        testability.whenStable(decrement);\n      });\n    };\n    if (!ɵglobal['frameworkStabilizers']) {\n      ɵglobal['frameworkStabilizers'] = [];\n    }\n    ɵglobal['frameworkStabilizers'].push(whenAllStable);\n  }\n\n  findTestabilityInTree(registry, elem, findInAncestors) {\n    if (elem == null) {\n      return null;\n    }\n    const t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (ɵgetDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, elem.host, true);\n    }\n    return this.findTestabilityInTree(registry, elem.parentElement, true);\n  }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n  build() {\n    return new XMLHttpRequest();\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: BrowserXhr,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.ɵprov = i0.ɵɵngDeclareInjectable({minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: BrowserXhr});\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: BrowserXhr, decorators: [{\n    type: Injectable\n  }]\n});\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  constructor(plugins, _zone) {\n    this._zone = _zone;\n    this._eventNameToPlugin = new Map();\n    plugins.forEach((plugin) => {\n      plugin.manager = this;\n    });\n    this._plugins = plugins.slice().reverse();\n  }\n\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n  addEventListener(element, eventName, handler) {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addEventListener(element, eventName, handler);\n  }\n\n  /**\n   * Retrieves the compilation zone in which event listeners are registered.\n   */\n  getZone() {\n    return this._zone;\n  }\n\n  /** @internal */\n  _findPluginFor(eventName) {\n    let plugin = this._eventNameToPlugin.get(eventName);\n    if (plugin) {\n      return plugin;\n    }\n    const plugins = this._plugins;\n    plugin = plugins.find((plugin) => plugin.supports(eventName));\n    if (!plugin) {\n      throw new ɵRuntimeError(5101 /* RuntimeErrorCode.NO_PLUGIN_FOR_EVENT */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n        `No event manager plugin found for event ${eventName}`);\n    }\n    this._eventNameToPlugin.set(eventName, plugin);\n    return plugin;\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: EventManager,\n      deps: [{token: EVENT_MANAGER_PLUGINS}, {token: i0.NgZone}],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.ɵprov = i0.ɵɵngDeclareInjectable({minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: EventManager});\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: EventManager, decorators: [{\n    type: Injectable\n  }], ctorParameters: function () {\n    return [{\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [EVENT_MANAGER_PLUGINS]\n      }]\n    }, {type: i0.NgZone}];\n  }\n});\n\nclass EventManagerPlugin {\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n}\n\n/** The style elements attribute name used to set value of `APP_ID` token. */\nconst APP_ID_ATTRIBUTE_NAME = 'ng-app-id';\n\nclass SharedStylesHost {\n  constructor(doc, appId, nonce, platformId = {}) {\n    this.doc = doc;\n    this.appId = appId;\n    this.nonce = nonce;\n    this.platformId = platformId;\n    // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n    this.styleRef = new Map();\n    this.hostNodes = new Set();\n    this.styleNodesInDOM = this.collectServerRenderedStyles();\n    this.platformIsServer = isPlatformServer(platformId);\n    this.resetHostNodes();\n  }\n\n  addStyles(styles) {\n    for (const style of styles) {\n      const usageCount = this.changeUsageCount(style, 1);\n      if (usageCount === 1) {\n        this.onStyleAdded(style);\n      }\n    }\n  }\n\n  removeStyles(styles) {\n    for (const style of styles) {\n      const usageCount = this.changeUsageCount(style, -1);\n      if (usageCount <= 0) {\n        this.onStyleRemoved(style);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    const styleNodesInDOM = this.styleNodesInDOM;\n    if (styleNodesInDOM) {\n      styleNodesInDOM.forEach((node) => node.remove());\n      styleNodesInDOM.clear();\n    }\n    for (const style of this.getAllStyles()) {\n      this.onStyleRemoved(style);\n    }\n    this.resetHostNodes();\n  }\n\n  addHost(hostNode) {\n    this.hostNodes.add(hostNode);\n    for (const style of this.getAllStyles()) {\n      this.addStyleToHost(hostNode, style);\n    }\n  }\n\n  removeHost(hostNode) {\n    this.hostNodes.delete(hostNode);\n  }\n\n  getAllStyles() {\n    return this.styleRef.keys();\n  }\n\n  onStyleAdded(style) {\n    for (const host of this.hostNodes) {\n      this.addStyleToHost(host, style);\n    }\n  }\n\n  onStyleRemoved(style) {\n    const styleRef = this.styleRef;\n    styleRef.get(style)?.elements?.forEach((node) => node.remove());\n    styleRef.delete(style);\n  }\n\n  collectServerRenderedStyles() {\n    const styles = this.doc.head?.querySelectorAll(`style[${APP_ID_ATTRIBUTE_NAME}=\"${this.appId}\"]`);\n    if (styles?.length) {\n      const styleMap = new Map();\n      styles.forEach((style) => {\n        if (style.textContent != null) {\n          styleMap.set(style.textContent, style);\n        }\n      });\n      return styleMap;\n    }\n    return null;\n  }\n\n  changeUsageCount(style, delta) {\n    const map = this.styleRef;\n    if (map.has(style)) {\n      const styleRefValue = map.get(style);\n      styleRefValue.usage += delta;\n      return styleRefValue.usage;\n    }\n    map.set(style, {usage: delta, elements: []});\n    return delta;\n  }\n\n  getStyleElement(host, style) {\n    const styleNodesInDOM = this.styleNodesInDOM;\n    const styleEl = styleNodesInDOM?.get(style);\n    if (styleEl?.parentNode === host) {\n      // `styleNodesInDOM` cannot be undefined due to the above `styleNodesInDOM?.get`.\n      styleNodesInDOM.delete(style);\n      styleEl.removeAttribute(APP_ID_ATTRIBUTE_NAME);\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // This attribute is solely used for debugging purposes.\n        styleEl.setAttribute('ng-style-reused', '');\n      }\n      return styleEl;\n    } else {\n      const styleEl = this.doc.createElement('style');\n      if (this.nonce) {\n        styleEl.setAttribute('nonce', this.nonce);\n      }\n      styleEl.textContent = style;\n      if (this.platformIsServer) {\n        styleEl.setAttribute(APP_ID_ATTRIBUTE_NAME, this.appId);\n      }\n      return styleEl;\n    }\n  }\n\n  addStyleToHost(host, style) {\n    const styleEl = this.getStyleElement(host, style);\n    host.appendChild(styleEl);\n    const styleRef = this.styleRef;\n    const styleElRef = styleRef.get(style)?.elements;\n    if (styleElRef) {\n      styleElRef.push(styleEl);\n    } else {\n      styleRef.set(style, {elements: [styleEl], usage: 1});\n    }\n  }\n\n  resetHostNodes() {\n    const hostNodes = this.hostNodes;\n    hostNodes.clear();\n    // Re-add the head element back since this is the default host.\n    hostNodes.add(this.doc.head);\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: SharedStylesHost,\n      deps: [{token: DOCUMENT}, {token: APP_ID}, {token: CSP_NONCE, optional: true}, {token: PLATFORM_ID}],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.ɵprov = i0.ɵɵngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: SharedStylesHost\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: SharedStylesHost, decorators: [{\n    type: Injectable\n  }], ctorParameters: function () {\n    return [{\n      type: Document, decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [APP_ID]\n      }]\n    }, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [CSP_NONCE]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }\n});\n\nconst NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n  'math': 'http://www.w3.org/1998/MathML/',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n/**\n * The default value for the `REMOVE_STYLES_ON_COMPONENT_DESTROY` DI token.\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT = false;\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") that indicates whether styles\n * of destroyed components should be removed from DOM.\n *\n * By default, the value is set to `false`. This will be changed in the next major version.\n * @publicApi\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY = new InjectionToken('RemoveStylesOnCompDestroy', {\n  providedIn: 'root',\n  factory: () => REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT,\n});\n\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nfunction shimStylesContent(compId, styles) {\n  return styles.map(s => s.replace(COMPONENT_REGEX, compId));\n}\n\nclass DomRendererFactory2 {\n  constructor(eventManager, sharedStylesHost, appId, removeStylesOnCompDestroy, doc, platformId, ngZone, nonce = null) {\n    this.eventManager = eventManager;\n    this.sharedStylesHost = sharedStylesHost;\n    this.appId = appId;\n    this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n    this.doc = doc;\n    this.platformId = platformId;\n    this.ngZone = ngZone;\n    this.nonce = nonce;\n    this.rendererByCompId = new Map();\n    this.platformIsServer = isPlatformServer(platformId);\n    this.defaultRenderer =\n      new DefaultDomRenderer2(eventManager, doc, ngZone, this.platformIsServer);\n  }\n\n  createRenderer(element, type) {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n    if (this.platformIsServer && type.encapsulation === ViewEncapsulation.ShadowDom) {\n      // Domino does not support shadow DOM.\n      type = {...type, encapsulation: ViewEncapsulation.Emulated};\n    }\n    const renderer = this.getOrCreateRenderer(element, type);\n    // Renderers have different logic due to different encapsulation behaviours.\n    // Ex: for emulated, an attribute is added to the element.\n    if (renderer instanceof EmulatedEncapsulationDomRenderer2) {\n      renderer.applyToHost(element);\n    } else if (renderer instanceof NoneEncapsulationDomRenderer) {\n      renderer.applyStyles();\n    }\n    return renderer;\n  }\n\n  getOrCreateRenderer(element, type) {\n    const rendererByCompId = this.rendererByCompId;\n    let renderer = rendererByCompId.get(type.id);\n    if (!renderer) {\n      const doc = this.doc;\n      const ngZone = this.ngZone;\n      const eventManager = this.eventManager;\n      const sharedStylesHost = this.sharedStylesHost;\n      const removeStylesOnCompDestroy = this.removeStylesOnCompDestroy;\n      const platformIsServer = this.platformIsServer;\n      switch (type.encapsulation) {\n        case ViewEncapsulation.Emulated:\n          renderer = new EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, type, this.appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n          break;\n        case ViewEncapsulation.ShadowDom:\n          return new ShadowDomRenderer(eventManager, sharedStylesHost, element, type, doc, ngZone, this.nonce, platformIsServer);\n        default:\n          renderer = new NoneEncapsulationDomRenderer(eventManager, sharedStylesHost, type, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n          break;\n      }\n      rendererByCompId.set(type.id, renderer);\n    }\n    return renderer;\n  }\n\n  ngOnDestroy() {\n    this.rendererByCompId.clear();\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: DomRendererFactory2,\n      deps: [{token: EventManager}, {token: SharedStylesHost}, {token: APP_ID}, {token: REMOVE_STYLES_ON_COMPONENT_DESTROY}, {token: DOCUMENT}, {token: PLATFORM_ID}, {token: i0.NgZone}, {token: CSP_NONCE}],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.ɵprov = i0.ɵɵngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: DomRendererFactory2\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: DomRendererFactory2, decorators: [{\n    type: Injectable\n  }], ctorParameters: function () {\n    return [{type: EventManager}, {type: SharedStylesHost}, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [APP_ID]\n      }]\n    }, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [REMOVE_STYLES_ON_COMPONENT_DESTROY]\n      }]\n    }, {\n      type: Document, decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: Object, decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {type: i0.NgZone}, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [CSP_NONCE]\n      }]\n    }];\n  }\n});\n\nclass DefaultDomRenderer2 {\n  constructor(eventManager, doc, ngZone, platformIsServer) {\n    this.eventManager = eventManager;\n    this.doc = doc;\n    this.ngZone = ngZone;\n    this.platformIsServer = platformIsServer;\n    this.data = Object.create(null);\n    this.destroyNode = null;\n  }\n\n  destroy() {\n  }\n\n  createElement(name, namespace) {\n    if (namespace) {\n      // TODO: `|| namespace` was added in\n      // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n      // support how Ivy passed around the namespace URI rather than short name at the time. It did\n      // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n      // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n      // namespaces should be and make it consistent.\n      // Related issues:\n      // https://github.com/angular/angular/issues/44028\n      // https://github.com/angular/angular/issues/44883\n      return this.doc.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n    }\n    return this.doc.createElement(name);\n  }\n\n  createComment(value) {\n    return this.doc.createComment(value);\n  }\n\n  createText(value) {\n    return this.doc.createTextNode(value);\n  }\n\n  appendChild(parent, newChild) {\n    const targetParent = isTemplateNode(parent) ? parent.content : parent;\n    targetParent.appendChild(newChild);\n  }\n\n  insertBefore(parent, newChild, refChild) {\n    if (parent) {\n      const targetParent = isTemplateNode(parent) ? parent.content : parent;\n      targetParent.insertBefore(newChild, refChild);\n    }\n  }\n\n  removeChild(parent, oldChild) {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n\n  selectRootElement(selectorOrNode, preserveContent) {\n    let el = typeof selectorOrNode === 'string' ? this.doc.querySelector(selectorOrNode) :\n      selectorOrNode;\n    if (!el) {\n      throw new ɵRuntimeError(-5104 /* RuntimeErrorCode.ROOT_NODE_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n        `The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n    return el;\n  }\n\n  parentNode(node) {\n    return node.parentNode;\n  }\n\n  nextSibling(node) {\n    return node.nextSibling;\n  }\n\n  setAttribute(el, name, value, namespace) {\n    if (namespace) {\n      name = namespace + ':' + name;\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n\n  removeAttribute(el, name, namespace) {\n    if (namespace) {\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n\n  addClass(el, name) {\n    el.classList.add(name);\n  }\n\n  removeClass(el, name) {\n    el.classList.remove(name);\n  }\n\n  setStyle(el, style, value, flags) {\n    if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n      el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n\n  removeStyle(el, style, flags) {\n    if (flags & RendererStyleFlags2.DashCase) {\n      // removeProperty has no effect when used on camelCased properties.\n      el.style.removeProperty(style);\n    } else {\n      el.style[style] = '';\n    }\n  }\n\n  setProperty(el, name, value) {\n    (typeof ngDevMode === 'undefined' || ngDevMode) && checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n\n  setValue(node, value) {\n    node.nodeValue = value;\n  }\n\n  listen(target, event, callback) {\n    (typeof ngDevMode === 'undefined' || ngDevMode) && checkNoSyntheticProp(event, 'listener');\n    if (typeof target === 'string') {\n      target = ɵgetDOM().getGlobalEventTarget(this.doc, target);\n      if (!target) {\n        throw new Error(`Unsupported event target ${target} for event ${event}`);\n      }\n    }\n    return this.eventManager.addEventListener(target, event, this.decoratePreventDefault(callback));\n  }\n\n  decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle\n    // the two differently. In the first case, the special '__ngUnwrap__' token is passed to the\n    // unwrap the listener (see below).\n    return (event) => {\n      // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n      // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The\n      // debug_node can inspect the listener toString contents for the existence of this special\n      // token. Because the token is a string literal, it is ensured to not be modified by compiled\n      // code.\n      if (event === '__ngUnwrap__') {\n        return eventHandler;\n      }\n      // Run the event handler inside the ngZone because event handlers are not patched\n      // by Zone on the server. This is required only for tests.\n      const allowDefaultBehavior = this.platformIsServer ?\n        this.ngZone.runGuarded(() => eventHandler(event)) :\n        eventHandler(event);\n      if (allowDefaultBehavior === false) {\n        event.preventDefault();\n      }\n      return undefined;\n    };\n  }\n}\n\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\n\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new ɵRuntimeError(5105 /* RuntimeErrorCode.UNEXPECTED_SYNTHETIC_PROPERTY */, `Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n  }\n}\n\nfunction isTemplateNode(node) {\n  return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\n\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  constructor(eventManager, sharedStylesHost, hostEl, component, doc, ngZone, nonce, platformIsServer) {\n    super(eventManager, doc, ngZone, platformIsServer);\n    this.sharedStylesHost = sharedStylesHost;\n    this.hostEl = hostEl;\n    this.shadowRoot = hostEl.attachShadow({mode: 'open'});\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = shimStylesContent(component.id, component.styles);\n    for (const style of styles) {\n      const styleEl = document.createElement('style');\n      if (nonce) {\n        styleEl.setAttribute('nonce', nonce);\n      }\n      styleEl.textContent = style;\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n\n  nodeOrShadowRoot(node) {\n    return node === this.hostEl ? this.shadowRoot : node;\n  }\n\n  appendChild(parent, newChild) {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n\n  insertBefore(parent, newChild, refChild) {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n\n  removeChild(parent, oldChild) {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n\n  parentNode(node) {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n\n  destroy() {\n    this.sharedStylesHost.removeHost(this.shadowRoot);\n  }\n}\n\nclass NoneEncapsulationDomRenderer extends DefaultDomRenderer2 {\n  constructor(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId) {\n    super(eventManager, doc, ngZone, platformIsServer);\n    this.sharedStylesHost = sharedStylesHost;\n    this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n    this.styles = compId ? shimStylesContent(compId, component.styles) : component.styles;\n  }\n\n  applyStyles() {\n    this.sharedStylesHost.addStyles(this.styles);\n  }\n\n  destroy() {\n    if (!this.removeStylesOnCompDestroy) {\n      return;\n    }\n    this.sharedStylesHost.removeStyles(this.styles);\n  }\n}\n\nclass EmulatedEncapsulationDomRenderer2 extends NoneEncapsulationDomRenderer {\n  constructor(eventManager, sharedStylesHost, component, appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer) {\n    const compId = appId + '-' + component.id;\n    super(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId);\n    this.contentAttr = shimContentAttribute(compId);\n    this.hostAttr = shimHostAttribute(compId);\n  }\n\n  applyToHost(element) {\n    this.applyStyles();\n    this.setAttribute(element, this.hostAttr, '');\n  }\n\n  createElement(parent, name) {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\n\nclass DomEventsPlugin extends EventManagerPlugin {\n  constructor(doc) {\n    super(doc);\n  }\n\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  supports(eventName) {\n    return true;\n  }\n\n  addEventListener(element, eventName, handler) {\n    element.addEventListener(eventName, handler, false);\n    return () => this.removeEventListener(element, eventName, handler);\n  }\n\n  removeEventListener(target, eventName, callback) {\n    return target.removeEventListener(eventName, callback);\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: DomEventsPlugin,\n      deps: [{token: DOCUMENT}],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.ɵprov = i0.ɵɵngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: DomEventsPlugin\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: DomEventsPlugin, decorators: [{\n    type: Injectable\n  }], ctorParameters: function () {\n    return [{\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }\n});\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap = {\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n  'alt': (event) => event.altKey,\n  'control': (event) => event.ctrlKey,\n  'meta': (event) => event.metaKey,\n  'shift': (event) => event.shiftKey\n};\n\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  constructor(doc) {\n    super(doc);\n  }\n\n  /**\n   * Reports whether a named key event is supported.\n   * @param eventName The event name to query.\n   * @return True if the named key event is supported.\n   */\n  supports(eventName) {\n    return KeyEventsPlugin.parseEventName(eventName) != null;\n  }\n\n  /**\n   * Registers a handler for a specific element and key event.\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the key event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns The key event that was registered.\n   */\n  addEventListener(element, eventName, handler) {\n    const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n    const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n    return this.manager.getZone().runOutsideAngular(() => {\n      return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n\n  /**\n   * Parses the user provided full keyboard event definition and normalizes it for\n   * later internal use. It ensures the string is all lowercase, converts special\n   * characters to a standard spelling, and orders all the values consistently.\n   *\n   * @param eventName The name of the key event to listen for.\n   * @returns an object with the full, normalized string, and the dom event name\n   * or null in the case when the event doesn't match a keyboard event.\n   */\n  static parseEventName(eventName) {\n    const parts = eventName.toLowerCase().split('.');\n    const domEventName = parts.shift();\n    if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n    const key = KeyEventsPlugin._normalizeKey(parts.pop());\n    let fullKey = '';\n    let codeIX = parts.indexOf('code');\n    if (codeIX > -1) {\n      parts.splice(codeIX, 1);\n      fullKey = 'code.';\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      const index = parts.indexOf(modifierName);\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    }\n    // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n    //       The code must remain in the `result['domEventName']` form.\n    // return {domEventName, fullKey};\n    const result = {};\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n\n  /**\n   * Determines whether the actual keys pressed match the configured key code string.\n   * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n   * event is attached to the DOM during the `addEventListener` call. This is unseen\n   * by the end user and is normalized for internal consistency and parsing.\n   *\n   * @param event The keyboard event.\n   * @param fullKeyCode The normalized user defined expected key event string\n   * @returns boolean.\n   */\n  static matchEventFullKeyCode(event, fullKeyCode) {\n    let keycode = _keyMap[event.key] || event.key;\n    let key = '';\n    if (fullKeyCode.indexOf('code.') > -1) {\n      keycode = event.code;\n      key = 'code.';\n    }\n    // the keycode could be unidentified so we have to check here\n    if (keycode == null || !keycode)\n      return false;\n    keycode = keycode.toLowerCase();\n    if (keycode === ' ') {\n      keycode = 'space'; // for readability\n    } else if (keycode === '.') {\n      keycode = 'dot'; // because '.' is used as a separator in event names\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName !== keycode) {\n        const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n        if (modifierGetter(event)) {\n          key += modifierName + '.';\n        }\n      }\n    });\n    key += keycode;\n    return key === fullKeyCode;\n  }\n\n  /**\n   * Configures a handler callback for a key event.\n   * @param fullKey The event name that combines all simultaneous keystrokes.\n   * @param handler The function that responds to the key event.\n   * @param zone The zone in which the event occurred.\n   * @returns A callback function.\n   */\n  static eventCallback(fullKey, handler, zone) {\n    return (event) => {\n      if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n\n  /** @internal */\n  static _normalizeKey(keyName) {\n    // TODO: switch to a Map if the mapping grows too much\n    switch (keyName) {\n      case 'esc':\n        return 'escape';\n      default:\n        return keyName;\n    }\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: KeyEventsPlugin,\n      deps: [{token: DOCUMENT}],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.ɵprov = i0.ɵɵngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: KeyEventsPlugin\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: KeyEventsPlugin, decorators: [{\n    type: Injectable\n  }], ctorParameters: function () {\n    return [{\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }\n});\n\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction bootstrapApplication(rootComponent, options) {\n  return ɵinternalCreateApplication({rootComponent, ...createProvidersConfig(options)});\n}\n\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction createApplication(options) {\n  return ɵinternalCreateApplication(createProvidersConfig(options));\n}\n\nfunction createProvidersConfig(options) {\n  return {\n    appProviders: [\n      ...BROWSER_MODULE_PROVIDERS,\n      ...(options?.providers ?? []),\n    ],\n    platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n  };\n}\n\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideProtractorTestingSupport` call results in app\n  // code.\n  return [...TESTABILITY_PROVIDERS];\n}\n\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n}\n\nfunction errorHandler() {\n  return new ErrorHandler();\n}\n\nfunction _document() {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\n\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n  {provide: PLATFORM_ID, useValue: ɵPLATFORM_BROWSER_ID},\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken((typeof ngDevMode === 'undefined' || ngDevMode) ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [\n  {\n    provide: ɵTESTABILITY_GETTER,\n    useClass: BrowserGetTestability,\n    deps: [],\n  },\n  {\n    provide: ɵTESTABILITY,\n    useClass: Testability,\n    deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n  },\n  {\n    provide: Testability,\n    useClass: Testability,\n    deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n  }\n];\nconst BROWSER_MODULE_PROVIDERS = [\n  {provide: ɵINJECTOR_SCOPE, useValue: 'root'},\n  {provide: ErrorHandler, useFactory: errorHandler, deps: []}, {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: DomEventsPlugin,\n    multi: true,\n    deps: [DOCUMENT, NgZone, PLATFORM_ID]\n  },\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT]},\n  DomRendererFactory2, SharedStylesHost, EventManager,\n  {provide: RendererFactory2, useExisting: DomRendererFactory2},\n  {provide: XhrFactory, useClass: BrowserXhr, deps: []},\n  (typeof ngDevMode === 'undefined' || ngDevMode) ?\n    {provide: BROWSER_MODULE_PROVIDERS_MARKER, useValue: true} :\n    []\n];\n\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n  constructor(providersAlreadyPresent) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && providersAlreadyPresent) {\n      throw new ɵRuntimeError(5100 /* RuntimeErrorCode.BROWER_MODULE_ALREADY_LOADED */, `Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` +\n        `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n    }\n  }\n\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   *\n   * @deprecated Use {@link APP_ID} instead to set the application ID.\n   */\n  static withServerTransition(params) {\n    return {\n      ngModule: BrowserModule,\n      providers: [\n        {provide: APP_ID, useValue: params.appId},\n      ],\n    };\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: BrowserModule,\n      deps: [{token: BROWSER_MODULE_PROVIDERS_MARKER, optional: true, skipSelf: true}],\n      target: i0.ɵɵFactoryTarget.NgModule\n    });\n  }\n  static {\n    this.ɵmod = i0.ɵɵngDeclareNgModule({\n      minVersion: \"14.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: BrowserModule,\n      exports: [CommonModule, ApplicationModule]\n    });\n  }\n  static {\n    this.ɵinj = i0.ɵɵngDeclareInjector({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: BrowserModule,\n      providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n      imports: [CommonModule, ApplicationModule]\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: BrowserModule, decorators: [{\n    type: NgModule,\n    args: [{\n      providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n      exports: [CommonModule, ApplicationModule],\n    }]\n  }], ctorParameters: function () {\n    return [{\n      type: undefined, decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [BROWSER_MODULE_PROVIDERS_MARKER]\n      }]\n    }];\n  }\n});\n\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n  return new Meta(ɵɵinject(DOCUMENT));\n}\n\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n  constructor(_doc) {\n    this._doc = _doc;\n    this._dom = ɵgetDOM();\n  }\n\n  /**\n   * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * If an existing element is found, it is returned and is not modified in any way.\n   * @param tag The definition of a `<meta>` element to match or create.\n   * @param forceCreation True to create a new element without checking whether one already exists.\n   * @returns The existing element with the same attributes and values if found,\n   * the new element if no match is found, or `null` if the tag parameter is not defined.\n   */\n  addTag(tag, forceCreation = false) {\n    if (!tag)\n      return null;\n    return this._getOrCreateElement(tag, forceCreation);\n  }\n\n  /**\n   * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * @param tags An array of tag definitions to match or create.\n   * @param forceCreation True to create new elements without checking whether they already exist.\n   * @returns The matching elements if found, or the new elements.\n   */\n  addTags(tags, forceCreation = false) {\n    if (!tags)\n      return [];\n    return tags.reduce((result, tag) => {\n      if (tag) {\n        result.push(this._getOrCreateElement(tag, forceCreation));\n      }\n      return result;\n    }, []);\n  }\n\n  /**\n   * Retrieves a `<meta>` tag element in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching element, if any.\n   */\n  getTag(attrSelector) {\n    if (!attrSelector)\n      return null;\n    return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n  }\n\n  /**\n   * Retrieves a set of `<meta>` tag elements in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching elements, if any.\n   */\n  getTags(attrSelector) {\n    if (!attrSelector)\n      return [];\n    const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n    return list ? [].slice.call(list) : [];\n  }\n\n  /**\n   * Modifies an existing `<meta>` tag element in the current HTML document.\n   * @param tag The tag description with which to replace the existing tag content.\n   * @param selector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n   * replacement tag.\n   * @return The modified element.\n   */\n  updateTag(tag, selector) {\n    if (!tag)\n      return null;\n    selector = selector || this._parseSelector(tag);\n    const meta = this.getTag(selector);\n    if (meta) {\n      return this._setMetaElementAttributes(tag, meta);\n    }\n    return this._getOrCreateElement(tag, true);\n  }\n\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param attrSelector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   */\n  removeTag(attrSelector) {\n    this.removeTagElement(this.getTag(attrSelector));\n  }\n\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param meta The tag definition to match against to identify an existing tag.\n   */\n  removeTagElement(meta) {\n    if (meta) {\n      this._dom.remove(meta);\n    }\n  }\n\n  _getOrCreateElement(meta, forceCreation = false) {\n    if (!forceCreation) {\n      const selector = this._parseSelector(meta);\n      // It's allowed to have multiple elements with the same name so it's not enough to\n      // just check that element with the same name already present on the page. We also need to\n      // check if element has tag attributes\n      const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n      if (elem !== undefined)\n        return elem;\n    }\n    const element = this._dom.createElement('meta');\n    this._setMetaElementAttributes(meta, element);\n    const head = this._doc.getElementsByTagName('head')[0];\n    head.appendChild(element);\n    return element;\n  }\n\n  _setMetaElementAttributes(tag, el) {\n    Object.keys(tag).forEach((prop) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n    return el;\n  }\n\n  _parseSelector(tag) {\n    const attr = tag.name ? 'name' : 'property';\n    return `${attr}=\"${tag[attr]}\"`;\n  }\n\n  _containsAttributes(tag, elem) {\n    return Object.keys(tag).every((key) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n  }\n\n  _getMetaKeyMap(prop) {\n    return META_KEYS_MAP[prop] || prop;\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: Meta,\n      deps: [{token: DOCUMENT}],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.ɵprov = i0.ɵɵngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: Meta,\n      providedIn: 'root',\n      useFactory: createMeta,\n      deps: []\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: Meta, decorators: [{\n    type: Injectable,\n    args: [{providedIn: 'root', useFactory: createMeta, deps: []}]\n  }], ctorParameters: function () {\n    return [{\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }\n});\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n  httpEquiv: 'http-equiv'\n};\n\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n  return new Title(ɵɵinject(DOCUMENT));\n}\n\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n\n  /**\n   * Get the title of the current HTML document.\n   */\n  getTitle() {\n    return this._doc.title;\n  }\n\n  /**\n   * Set the title of the current HTML document.\n   * @param newTitle\n   */\n  setTitle(newTitle) {\n    this._doc.title = newTitle || '';\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: Title,\n      deps: [{token: DOCUMENT}],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.ɵprov = i0.ɵɵngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: Title,\n      providedIn: 'root',\n      useFactory: createTitle,\n      deps: []\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: Title, decorators: [{\n    type: Injectable,\n    args: [{providedIn: 'root', useFactory: createTitle, deps: []}]\n  }], ctorParameters: function () {\n    return [{\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }\n});\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n    ng[name] = value;\n  }\n}\n\nconst win = typeof window !== 'undefined' && window || {};\n\nclass ChangeDetectionPerfRecord {\n  constructor(msPerTick, numTicks) {\n    this.msPerTick = msPerTick;\n    this.numTicks = numTicks;\n  }\n}\n\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n  constructor(ref) {\n    this.appRef = ref.injector.get(ApplicationRef);\n  }\n\n  // tslint:disable:no-console\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n  timeChangeDetection(config) {\n    const record = config && config['record'];\n    const profileName = 'Change Detection';\n    // Profiler is not available in Android browsers without dev tools opened\n    const isProfilerAvailable = win.console.profile != null;\n    if (record && isProfilerAvailable) {\n      win.console.profile(profileName);\n    }\n    const start = performanceNow();\n    let numTicks = 0;\n    while (numTicks < 5 || (performanceNow() - start) < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n    const end = performanceNow();\n    if (record && isProfilerAvailable) {\n      win.console.profileEnd(profileName);\n    }\n    const msPerTick = (end - start) / numTicks;\n    win.console.log(`ran ${numTicks} change detection cycles`);\n    win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n}\n\nfunction performanceNow() {\n  return win.performance && win.performance.now ? win.performance.now() :\n    new Date().getTime();\n}\n\nconst PROFILER_GLOBAL_NAME = 'profiler';\n\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n  /**\n   * Match all nodes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   */\n  static all() {\n    return () => true;\n  }\n\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   */\n  static css(selector) {\n    return (debugElement) => {\n      return debugElement.nativeElement != null ?\n        elementMatches(debugElement.nativeElement, selector) :\n        false;\n    };\n  }\n\n  /**\n   * Match nodes that have the given directive present.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   */\n  static directive(type) {\n    return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n  }\n}\n\nfunction elementMatches(n, selector) {\n  if (ɵgetDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) ||\n      n.msMatchesSelector && n.msMatchesSelector(selector) ||\n      n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n  return false;\n}\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see {@link HammerGestureConfig}\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n  constructor() {\n    /**\n     * A set of supported event names for gestures to be used in Angular.\n     * Angular supports all built-in recognizers, as listed in\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    this.events = [];\n    /**\n     * Maps gesture event names to a set of configuration options\n     * that specify overrides to the default values for specific properties.\n     *\n     * The key is a supported event name to be configured,\n     * and the options object contains a set of properties, with override values\n     * to be applied to the named recognizer event.\n     * For example, to disable recognition of the rotate event, specify\n     *  `{\"rotate\": {\"enable\": false}}`.\n     *\n     * Properties that are not present take the HammerJS default values.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     *\n     */\n    this.overrides = {};\n  }\n\n  /**\n   * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n  buildHammer(element) {\n    const mc = new Hammer(element, this.options);\n    mc.get('pinch').set({enable: true});\n    mc.get('rotate').set({enable: true});\n    for (const eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n    return mc;\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: HammerGestureConfig,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.ɵprov = i0.ɵɵngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: HammerGestureConfig\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: HammerGestureConfig, decorators: [{\n    type: Injectable\n  }]\n});\n\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n  constructor(doc, _config, console, loader) {\n    super(doc);\n    this._config = _config;\n    this.console = console;\n    this.loader = loader;\n    this._loaderPromise = null;\n  }\n\n  supports(eventName) {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n    if (!window.Hammer && !this.loader) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n          `loaded and no custom loader has been specified.`);\n      }\n      return false;\n    }\n    return true;\n  }\n\n  addEventListener(element, eventName, handler) {\n    const zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n    // If Hammer is not present but a loader is specified, we defer adding the event listener\n    // until Hammer is loaded.\n    if (!window.Hammer && this.loader) {\n      this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader());\n      // This `addEventListener` method returns a function to remove the added listener.\n      // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n      // than remove anything.\n      let cancelRegistration = false;\n      let deregister = () => {\n        cancelRegistration = true;\n      };\n      zone.runOutsideAngular(() => this._loaderPromise\n        .then(() => {\n          // If Hammer isn't actually loaded when the custom loader resolves, give up.\n          if (!window.Hammer) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n              this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n            }\n            deregister = () => {\n            };\n            return;\n          }\n          if (!cancelRegistration) {\n            // Now that Hammer is loaded and the listener is being loaded for real,\n            // the deregistration function changes from canceling registration to\n            // removal.\n            deregister = this.addEventListener(element, eventName, handler);\n          }\n        })\n        .catch(() => {\n          if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n              `Hammer.JS loader failed.`);\n          }\n          deregister = () => {\n          };\n        }));\n      // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n      // can change the behavior of `deregister` once the listener is added. Using a closure in\n      // this way allows us to avoid any additional data structures to track listener removal.\n      return () => {\n        deregister();\n      };\n    }\n    return zone.runOutsideAngular(() => {\n      // Creating the manager bind events, must be done outside of angular\n      const mc = this._config.buildHammer(element);\n      const callback = function (eventObj) {\n        zone.runGuarded(function () {\n          handler(eventObj);\n        });\n      };\n      mc.on(eventName, callback);\n      return () => {\n        mc.off(eventName, callback);\n        // destroy mc to prevent memory leak\n        if (typeof mc.destroy === 'function') {\n          mc.destroy();\n        }\n      };\n    });\n  }\n\n  isCustomEvent(eventName) {\n    return this._config.events.indexOf(eventName) > -1;\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: HammerGesturesPlugin,\n      deps: [{token: DOCUMENT}, {token: HAMMER_GESTURE_CONFIG}, {token: i0.ɵConsole}, {\n        token: HAMMER_LOADER,\n        optional: true\n      }],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.ɵprov = i0.ɵɵngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: HammerGesturesPlugin\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: HammerGesturesPlugin, decorators: [{\n    type: Injectable\n  }], ctorParameters: function () {\n    return [{\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: HammerGestureConfig, decorators: [{\n        type: Inject,\n        args: [HAMMER_GESTURE_CONFIG]\n      }]\n    }, {type: i0.ɵConsole}, {\n      type: undefined, decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HAMMER_LOADER]\n      }]\n    }];\n  }\n});\n\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\nclass HammerModule {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: HammerModule,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.NgModule\n    });\n  }\n  static {\n    this.ɵmod = i0.ɵɵngDeclareNgModule({minVersion: \"14.0.0\", version: \"16.2.10\", ngImport: i0, type: HammerModule});\n  }\n  static {\n    this.ɵinj = i0.ɵɵngDeclareInjector({\n      minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: HammerModule, providers: [\n        {\n          provide: EVENT_MANAGER_PLUGINS,\n          useClass: HammerGesturesPlugin,\n          multi: true,\n          deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n        },\n        {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: []},\n      ]\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: HammerModule, decorators: [{\n    type: NgModule,\n    args: [{\n      providers: [\n        {\n          provide: EVENT_MANAGER_PLUGINS,\n          useClass: HammerGesturesPlugin,\n          multi: true,\n          deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n        },\n        {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: []},\n      ]\n    }]\n  }]\n});\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: DomSanitizer,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.ɵprov = i0.ɵɵngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: DomSanitizer,\n      providedIn: 'root',\n      useExisting: i0.forwardRef(function () {\n        return DomSanitizerImpl;\n      })\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: DomSanitizer, decorators: [{\n    type: Injectable,\n    args: [{providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl)}]\n  }]\n});\n\nfunction domSanitizerImplFactory(injector) {\n  return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\n\nclass DomSanitizerImpl extends DomSanitizer {\n  constructor(_doc) {\n    super();\n    this._doc = _doc;\n  }\n\n  sanitize(ctx, value) {\n    if (value == null)\n      return null;\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return value;\n      case SecurityContext.HTML:\n        if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n      case SecurityContext.STYLE:\n        if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        return value;\n      case SecurityContext.SCRIPT:\n        if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        throw new ɵRuntimeError(5200 /* RuntimeErrorCode.SANITIZATION_UNSAFE_SCRIPT */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n          'unsafe value used in a script context');\n      case SecurityContext.URL:\n        if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        return ɵ_sanitizeUrl(String(value));\n      case SecurityContext.RESOURCE_URL:\n        if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n          return ɵunwrapSafeValue(value);\n        }\n        throw new ɵRuntimeError(5201 /* RuntimeErrorCode.SANITIZATION_UNSAFE_RESOURCE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n          `unsafe value used in a resource URL context (see ${ɵXSS_SECURITY_URL})`);\n      default:\n        throw new ɵRuntimeError(5202 /* RuntimeErrorCode.SANITIZATION_UNEXPECTED_CTX */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n          `Unexpected SecurityContext ${ctx} (see ${ɵXSS_SECURITY_URL})`);\n    }\n  }\n\n  bypassSecurityTrustHtml(value) {\n    return ɵbypassSanitizationTrustHtml(value);\n  }\n\n  bypassSecurityTrustStyle(value) {\n    return ɵbypassSanitizationTrustStyle(value);\n  }\n\n  bypassSecurityTrustScript(value) {\n    return ɵbypassSanitizationTrustScript(value);\n  }\n\n  bypassSecurityTrustUrl(value) {\n    return ɵbypassSanitizationTrustUrl(value);\n  }\n\n  bypassSecurityTrustResourceUrl(value) {\n    return ɵbypassSanitizationTrustResourceUrl(value);\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: DomSanitizerImpl,\n      deps: [{token: DOCUMENT}],\n      target: i0.ɵɵFactoryTarget.Injectable\n    });\n  }\n  static {\n    this.ɵprov = i0.ɵɵngDeclareInjectable({\n      minVersion: \"12.0.0\",\n      version: \"16.2.10\",\n      ngImport: i0,\n      type: DomSanitizerImpl,\n      providedIn: 'root',\n      useFactory: domSanitizerImplFactory,\n      deps: [{token: Injector}]\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: DomSanitizerImpl, decorators: [{\n    type: Injectable,\n    args: [{providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector]}]\n  }], ctorParameters: function () {\n    return [{\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }\n});\n\n/**\n * Helper function to create an object that represents a Hydration feature.\n */\nfunction hydrationFeature(kind, providers = []) {\n  return {ɵkind: kind, ɵproviders: providers};\n}\n\n/**\n * Disables DOM nodes reuse during hydration. Effectively makes\n * Angular re-render an application from scratch on the client.\n *\n * When this option is enabled, make sure that the initial navigation\n * option is configured for the Router as `enabledBlocking` by using the\n * `withEnabledBlockingInitialNavigation` in the `provideRouter` call:\n *\n * ```\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideRouter(\n *       // ... other features ...\n *       withEnabledBlockingInitialNavigation()\n *     ),\n *     provideClientHydration(withNoDomReuse())\n *   ]\n * });\n * ```\n *\n * This would ensure that the application is rerendered after all async\n * operations in the Router (such as lazy-loading of components,\n * waiting for async guards and resolvers) are completed to avoid\n * clearing the DOM on the client too soon, thus causing content flicker.\n *\n * @see {@link provideRouter}\n * @see {@link withEnabledBlockingInitialNavigation}\n *\n * @publicApi\n * @developerPreview\n */\nfunction withNoDomReuse() {\n  // This feature has no providers and acts as a flag that turns off\n  // non-destructive hydration (which otherwise is turned on by default).\n  return hydrationFeature(0 /* HydrationFeatureKind.NoDomReuseFeature */);\n}\n\n/**\n * Disables HTTP transfer cache. Effectively causes HTTP requests to be performed twice: once on the\n * server and other one on the browser.\n *\n * @publicApi\n * @developerPreview\n */\nfunction withNoHttpTransferCache() {\n  // This feature has no providers and acts as a flag that turns off\n  // HTTP transfer cache (which otherwise is turned on by default).\n  return hydrationFeature(1 /* HydrationFeatureKind.NoHttpTransferCache */);\n}\n\n/**\n * Returns an `ENVIRONMENT_INITIALIZER` token setup with a function\n * that verifies whether compatible ZoneJS was used in an application\n * and logs a warning in a console if it's not the case.\n */\nfunction provideZoneJsCompatibilityDetector() {\n  return [{\n    provide: ENVIRONMENT_INITIALIZER,\n    useValue: () => {\n      const ngZone = inject(NgZone);\n      // Checking `ngZone instanceof NgZone` would be insufficient here,\n      // because custom implementations might use NgZone as a base class.\n      if (ngZone.constructor !== NgZone) {\n        const console = inject(ɵConsole);\n        const message = ɵformatRuntimeError(-5000 /* RuntimeErrorCode.UNSUPPORTED_ZONEJS_INSTANCE */, 'Angular detected that hydration was enabled for an application ' +\n          'that uses a custom or a noop Zone.js implementation. ' +\n          'This is not yet a fully supported configuration.');\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n      }\n    },\n    multi: true,\n  }];\n}\n\n/**\n * Sets up providers necessary to enable hydration functionality for the application.\n *\n * By default, the function enables the recommended set of features for the optimal\n * performance for most of the applications. You can enable/disable features by\n * passing special functions (from the `HydrationFeatures` set) as arguments to the\n * `provideClientHydration` function. It includes the following features:\n *\n * * Reconciling DOM hydration. Learn more about it [here](guide/hydration).\n * * [`HttpClient`](api/common/http/HttpClient) response caching while running on the server and\n * transferring this cache to the client to avoid extra HTTP requests. Learn more about data caching\n * [here](/guide/universal#caching-data-when-using-httpclient).\n *\n * These functions functions will allow you to disable some of the default features:\n * * {@link withNoDomReuse} to disable DOM nodes reuse during hydration\n * * {@link withNoHttpTransferCache} to disable HTTP transfer cache\n *\n *\n * @usageNotes\n *\n * Basic example of how you can enable hydration in your application when\n * `bootstrapApplication` function is used:\n * ```\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration()]\n * });\n * ```\n *\n * Alternatively if you are using NgModules, you would add `provideClientHydration`\n * to your root app module's provider list.\n * ```\n * @NgModule({\n *   declarations: [RootCmp],\n *   bootstrap: [RootCmp],\n *   providers: [provideClientHydration()],\n * })\n * export class AppModule {}\n * ```\n *\n * @see {@link withNoDomReuse}\n * @see {@link withNoHttpTransferCache}\n *\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to enable hydration.\n *\n * @publicApi\n * @developerPreview\n */\nfunction provideClientHydration(...features) {\n  const providers = [];\n  const featuresKind = new Set();\n  for (const {ɵproviders, ɵkind} of features) {\n    featuresKind.add(ɵkind);\n    if (ɵproviders.length) {\n      providers.push(ɵproviders);\n    }\n  }\n  return makeEnvironmentProviders([\n    (typeof ngDevMode !== 'undefined' && ngDevMode) ? provideZoneJsCompatibilityDetector() : [],\n    (featuresKind.has(0 /* HydrationFeatureKind.NoDomReuseFeature */) ? [] : ɵwithDomHydration()),\n    (featuresKind.has(1 /* HydrationFeatureKind.NoHttpTransferCache */) ? [] : ɵwithHttpTransferCache()),\n    providers,\n  ]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('16.2.10');\n\n// Re-export TransferState to the public API of the `platform-browser` for backwards-compatibility.\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n * @deprecated `makeStateKey` has moved, please import `makeStateKey` from `@angular/core` instead.\n */\n// The below is a workaround to add a deprecated message.\nconst makeStateKey = makeStateKey$1;\n// The below type is needed for G3 due to JSC_CONFORMANCE_VIOLATION.\nconst TransferState = TransferState$1;\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport {\n  BrowserModule,\n  By,\n  DomSanitizer,\n  EVENT_MANAGER_PLUGINS,\n  EventManager,\n  HAMMER_GESTURE_CONFIG,\n  HAMMER_LOADER,\n  HammerGestureConfig,\n  HammerModule,\n  Meta,\n  REMOVE_STYLES_ON_COMPONENT_DESTROY,\n  Title,\n  TransferState,\n  VERSION,\n  bootstrapApplication,\n  createApplication,\n  disableDebugTools,\n  enableDebugTools,\n  makeStateKey,\n  platformBrowser,\n  provideClientHydration,\n  provideProtractorTestingSupport,\n  withNoDomReuse,\n  withNoHttpTransferCache,\n  BrowserDomAdapter as ɵBrowserDomAdapter,\n  BrowserGetTestability as ɵBrowserGetTestability,\n  DomEventsPlugin as ɵDomEventsPlugin,\n  DomRendererFactory2 as ɵDomRendererFactory2,\n  DomSanitizerImpl as ɵDomSanitizerImpl,\n  HammerGesturesPlugin as ɵHammerGesturesPlugin,\n  INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS,\n  KeyEventsPlugin as ɵKeyEventsPlugin,\n  SharedStylesHost as ɵSharedStylesHost,\n  initDomAdapter as ɵinitDomAdapter\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}