{"ast":null,"code":"import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nexport class Observable {\n  constructor(subscribe) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n  lift(operator) {\n    const observable = new Observable();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n  subscribe(observerOrNext, error, complete) {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n    errorContext(() => {\n      const {\n        operator,\n        source\n      } = this;\n      subscriber.add(operator ? operator.call(subscriber, source) : source ? this._subscribe(subscriber) : this._trySubscribe(subscriber));\n    });\n    return subscriber;\n  }\n  _trySubscribe(sink) {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.error(err);\n    }\n  }\n  forEach(next, promiseCtor) {\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor((resolve, reject) => {\n      const subscriber = new SafeSubscriber({\n        next: value => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n      this.subscribe(subscriber);\n    });\n  }\n  _subscribe(subscriber) {\n    var _a;\n    return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n  }\n  [Symbol_observable]() {\n    return this;\n  }\n  pipe(...operations) {\n    return pipeFromArray(operations)(this);\n  }\n  toPromise(promiseCtor) {\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor((resolve, reject) => {\n      let value;\n      this.subscribe(x => value = x, err => reject(err), () => resolve(value));\n    });\n  }\n}\nObservable.create = subscribe => {\n  return new Observable(subscribe);\n};\nfunction getPromiseCtor(promiseCtor) {\n  var _a;\n  return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n  return value && value instanceof Subscriber || isObserver(value) && isSubscription(value);\n}","map":{"version":3,"names":["SafeSubscriber","Subscriber","isSubscription","observable","Symbol_observable","pipeFromArray","config","isFunction","errorContext","Observable","constructor","subscribe","_subscribe","lift","operator","source","observerOrNext","error","complete","subscriber","isSubscriber","add","call","_trySubscribe","sink","err","forEach","next","promiseCtor","getPromiseCtor","resolve","reject","value","unsubscribe","_a","pipe","operations","toPromise","x","create","Promise","isObserver"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/rxjs/dist/esm/internal/Observable.js"],"sourcesContent":["import {SafeSubscriber, Subscriber} from './Subscriber';\nimport {isSubscription} from './Subscription';\nimport {observable as Symbol_observable} from './symbol/observable';\nimport {pipeFromArray} from './util/pipe';\nimport {config} from './config';\nimport {isFunction} from './util/isFunction';\nimport {errorContext} from './util/errorContext';\n\nexport class Observable {\n  constructor(subscribe) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  lift(operator) {\n    const observable = new Observable();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext, error, complete) {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n    errorContext(() => {\n      const {operator, source} = this;\n      subscriber.add(operator\n        ?\n        operator.call(subscriber, source)\n        : source\n          ?\n          this._subscribe(subscriber)\n          :\n          this._trySubscribe(subscriber));\n    });\n    return subscriber;\n  }\n\n  _trySubscribe(sink) {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.error(err);\n    }\n  }\n\n  forEach(next, promiseCtor) {\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor((resolve, reject) => {\n      const subscriber = new SafeSubscriber({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    });\n  }\n\n  _subscribe(subscriber) {\n    var _a;\n    return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n  }\n\n  [Symbol_observable]() {\n    return this;\n  }\n\n  pipe(...operations) {\n    return pipeFromArray(operations)(this);\n  }\n\n  toPromise(promiseCtor) {\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor((resolve, reject) => {\n      let value;\n      this.subscribe((x) => (value = x), (err) => reject(err), () => resolve(value));\n    });\n  }\n}\n\nObservable.create = (subscribe) => {\n  return new Observable(subscribe);\n};\n\nfunction getPromiseCtor(promiseCtor) {\n  var _a;\n  return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\n\nfunction isObserver(value) {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber(value) {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}