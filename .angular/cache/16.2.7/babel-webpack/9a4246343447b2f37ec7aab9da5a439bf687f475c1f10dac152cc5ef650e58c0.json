{"ast":null,"code":"import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n  return count <= 0 ? () => EMPTY : operate((source, subscriber) => {\n    let seen = 0;\n    source.subscribe(createOperatorSubscriber(subscriber, value => {\n      if (++seen <= count) {\n        subscriber.next(value);\n        if (count <= seen) {\n          subscriber.complete();\n        }\n      }\n    }));\n  });\n}","map":{"version":3,"names":["EMPTY","operate","createOperatorSubscriber","take","count","source","subscriber","seen","subscribe","value","next","complete"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/rxjs/dist/esm/internal/operators/take.js"],"sourcesContent":["import {EMPTY} from '../observable/empty';\nimport {operate} from '../util/lift';\nimport {createOperatorSubscriber} from './OperatorSubscriber';\n\nexport function take(count) {\n  return count <= 0\n    ?\n    () => EMPTY\n    : operate((source, subscriber) => {\n      let seen = 0;\n      source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n        if (++seen <= count) {\n          subscriber.next(value);\n          if (count <= seen) {\n            subscriber.complete();\n          }\n        }\n      }));\n    });\n}\n\n"],"mappings":"AAAA,SAAQA,KAAK,QAAO,qBAAqB;AACzC,SAAQC,OAAO,QAAO,cAAc;AACpC,SAAQC,wBAAwB,QAAO,sBAAsB;AAE7D,OAAO,SAASC,IAAIA,CAACC,KAAK,EAAE;EAC1B,OAAOA,KAAK,IAAI,CAAC,GAEf,MAAMJ,KAAK,GACTC,OAAO,CAAC,CAACI,MAAM,EAAEC,UAAU,KAAK;IAChC,IAAIC,IAAI,GAAG,CAAC;IACZF,MAAM,CAACG,SAAS,CAACN,wBAAwB,CAACI,UAAU,EAAGG,KAAK,IAAK;MAC/D,IAAI,EAAEF,IAAI,IAAIH,KAAK,EAAE;QACnBE,UAAU,CAACI,IAAI,CAACD,KAAK,CAAC;QACtB,IAAIL,KAAK,IAAIG,IAAI,EAAE;UACjBD,UAAU,CAACK,QAAQ,CAAC,CAAC;QACvB;MACF;IACF,CAAC,CAAC,CAAC;EACL,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}