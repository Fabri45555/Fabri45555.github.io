{"ast":null,"code":"import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function repeatWhen(notifier) {\n  return operate((source, subscriber) => {\n    let innerSub;\n    let syncResub = false;\n    let completions$;\n    let isNotifierComplete = false;\n    let isMainComplete = false;\n    const checkComplete = () => isMainComplete && isNotifierComplete && (subscriber.complete(), true);\n    const getCompletionSubject = () => {\n      if (!completions$) {\n        completions$ = new Subject();\n        innerFrom(notifier(completions$)).subscribe(createOperatorSubscriber(subscriber, () => {\n          if (innerSub) {\n            subscribeForRepeatWhen();\n          } else {\n            syncResub = true;\n          }\n        }, () => {\n          isNotifierComplete = true;\n          checkComplete();\n        }));\n      }\n      return completions$;\n    };\n    const subscribeForRepeatWhen = () => {\n      isMainComplete = false;\n      innerSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, () => {\n        isMainComplete = true;\n        !checkComplete() && getCompletionSubject().next();\n      }));\n      if (syncResub) {\n        innerSub.unsubscribe();\n        innerSub = null;\n        syncResub = false;\n        subscribeForRepeatWhen();\n      }\n    };\n    subscribeForRepeatWhen();\n  });\n}","map":{"version":3,"names":["innerFrom","Subject","operate","createOperatorSubscriber","repeatWhen","notifier","source","subscriber","innerSub","syncResub","completions$","isNotifierComplete","isMainComplete","checkComplete","complete","getCompletionSubject","subscribe","subscribeForRepeatWhen","undefined","next","unsubscribe"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/rxjs/dist/esm/internal/operators/repeatWhen.js"],"sourcesContent":["import {innerFrom} from '../observable/innerFrom';\nimport {Subject} from '../Subject';\nimport {operate} from '../util/lift';\nimport {createOperatorSubscriber} from './OperatorSubscriber';\n\nexport function repeatWhen(notifier) {\n  return operate((source, subscriber) => {\n    let innerSub;\n    let syncResub = false;\n    let completions$;\n    let isNotifierComplete = false;\n    let isMainComplete = false;\n    const checkComplete = () => isMainComplete && isNotifierComplete && (subscriber.complete(), true);\n    const getCompletionSubject = () => {\n      if (!completions$) {\n        completions$ = new Subject();\n        innerFrom(notifier(completions$)).subscribe(createOperatorSubscriber(subscriber, () => {\n          if (innerSub) {\n            subscribeForRepeatWhen();\n          } else {\n            syncResub = true;\n          }\n        }, () => {\n          isNotifierComplete = true;\n          checkComplete();\n        }));\n      }\n      return completions$;\n    };\n    const subscribeForRepeatWhen = () => {\n      isMainComplete = false;\n      innerSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, () => {\n        isMainComplete = true;\n        !checkComplete() && getCompletionSubject().next();\n      }));\n      if (syncResub) {\n        innerSub.unsubscribe();\n        innerSub = null;\n        syncResub = false;\n        subscribeForRepeatWhen();\n      }\n    };\n    subscribeForRepeatWhen();\n  });\n}\n\n"],"mappings":"AAAA,SAAQA,SAAS,QAAO,yBAAyB;AACjD,SAAQC,OAAO,QAAO,YAAY;AAClC,SAAQC,OAAO,QAAO,cAAc;AACpC,SAAQC,wBAAwB,QAAO,sBAAsB;AAE7D,OAAO,SAASC,UAAUA,CAACC,QAAQ,EAAE;EACnC,OAAOH,OAAO,CAAC,CAACI,MAAM,EAAEC,UAAU,KAAK;IACrC,IAAIC,QAAQ;IACZ,IAAIC,SAAS,GAAG,KAAK;IACrB,IAAIC,YAAY;IAChB,IAAIC,kBAAkB,GAAG,KAAK;IAC9B,IAAIC,cAAc,GAAG,KAAK;IAC1B,MAAMC,aAAa,GAAGA,CAAA,KAAMD,cAAc,IAAID,kBAAkB,KAAKJ,UAAU,CAACO,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC;IACjG,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;MACjC,IAAI,CAACL,YAAY,EAAE;QACjBA,YAAY,GAAG,IAAIT,OAAO,CAAC,CAAC;QAC5BD,SAAS,CAACK,QAAQ,CAACK,YAAY,CAAC,CAAC,CAACM,SAAS,CAACb,wBAAwB,CAACI,UAAU,EAAE,MAAM;UACrF,IAAIC,QAAQ,EAAE;YACZS,sBAAsB,CAAC,CAAC;UAC1B,CAAC,MAAM;YACLR,SAAS,GAAG,IAAI;UAClB;QACF,CAAC,EAAE,MAAM;UACPE,kBAAkB,GAAG,IAAI;UACzBE,aAAa,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;MACL;MACA,OAAOH,YAAY;IACrB,CAAC;IACD,MAAMO,sBAAsB,GAAGA,CAAA,KAAM;MACnCL,cAAc,GAAG,KAAK;MACtBJ,QAAQ,GAAGF,MAAM,CAACU,SAAS,CAACb,wBAAwB,CAACI,UAAU,EAAEW,SAAS,EAAE,MAAM;QAChFN,cAAc,GAAG,IAAI;QACrB,CAACC,aAAa,CAAC,CAAC,IAAIE,oBAAoB,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC;MACnD,CAAC,CAAC,CAAC;MACH,IAAIV,SAAS,EAAE;QACbD,QAAQ,CAACY,WAAW,CAAC,CAAC;QACtBZ,QAAQ,GAAG,IAAI;QACfC,SAAS,GAAG,KAAK;QACjBQ,sBAAsB,CAAC,CAAC;MAC1B;IACF,CAAC;IACDA,sBAAsB,CAAC,CAAC;EAC1B,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}