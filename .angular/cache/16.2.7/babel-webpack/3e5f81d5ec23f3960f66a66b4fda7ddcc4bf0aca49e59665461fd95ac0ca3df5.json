{"ast":null,"code":"import { Observable } from '../Observable';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { OperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from './innerFrom';\nexport function onErrorResumeNext(...sources) {\n  const nextSources = argsOrArgArray(sources);\n  return new Observable(subscriber => {\n    let sourceIndex = 0;\n    const subscribeNext = () => {\n      if (sourceIndex < nextSources.length) {\n        let nextSource;\n        try {\n          nextSource = innerFrom(nextSources[sourceIndex++]);\n        } catch (err) {\n          subscribeNext();\n          return;\n        }\n        const innerSubscriber = new OperatorSubscriber(subscriber, undefined, noop, noop);\n        nextSource.subscribe(innerSubscriber);\n        innerSubscriber.add(subscribeNext);\n      } else {\n        subscriber.complete();\n      }\n    };\n    subscribeNext();\n  });\n}","map":{"version":3,"names":["Observable","argsOrArgArray","OperatorSubscriber","noop","innerFrom","onErrorResumeNext","sources","nextSources","subscriber","sourceIndex","subscribeNext","length","nextSource","err","innerSubscriber","undefined","subscribe","add","complete"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/rxjs/dist/esm/internal/observable/onErrorResumeNext.js"],"sourcesContent":["import {Observable} from '../Observable';\nimport {argsOrArgArray} from '../util/argsOrArgArray';\nimport {OperatorSubscriber} from '../operators/OperatorSubscriber';\nimport {noop} from '../util/noop';\nimport {innerFrom} from './innerFrom';\n\nexport function onErrorResumeNext(...sources) {\n  const nextSources = argsOrArgArray(sources);\n  return new Observable((subscriber) => {\n    let sourceIndex = 0;\n    const subscribeNext = () => {\n      if (sourceIndex < nextSources.length) {\n        let nextSource;\n        try {\n          nextSource = innerFrom(nextSources[sourceIndex++]);\n        } catch (err) {\n          subscribeNext();\n          return;\n        }\n        const innerSubscriber = new OperatorSubscriber(subscriber, undefined, noop, noop);\n        nextSource.subscribe(innerSubscriber);\n        innerSubscriber.add(subscribeNext);\n      } else {\n        subscriber.complete();\n      }\n    };\n    subscribeNext();\n  });\n}\n\n"],"mappings":"AAAA,SAAQA,UAAU,QAAO,eAAe;AACxC,SAAQC,cAAc,QAAO,wBAAwB;AACrD,SAAQC,kBAAkB,QAAO,iCAAiC;AAClE,SAAQC,IAAI,QAAO,cAAc;AACjC,SAAQC,SAAS,QAAO,aAAa;AAErC,OAAO,SAASC,iBAAiBA,CAAC,GAAGC,OAAO,EAAE;EAC5C,MAAMC,WAAW,GAAGN,cAAc,CAACK,OAAO,CAAC;EAC3C,OAAO,IAAIN,UAAU,CAAEQ,UAAU,IAAK;IACpC,IAAIC,WAAW,GAAG,CAAC;IACnB,MAAMC,aAAa,GAAGA,CAAA,KAAM;MAC1B,IAAID,WAAW,GAAGF,WAAW,CAACI,MAAM,EAAE;QACpC,IAAIC,UAAU;QACd,IAAI;UACFA,UAAU,GAAGR,SAAS,CAACG,WAAW,CAACE,WAAW,EAAE,CAAC,CAAC;QACpD,CAAC,CAAC,OAAOI,GAAG,EAAE;UACZH,aAAa,CAAC,CAAC;UACf;QACF;QACA,MAAMI,eAAe,GAAG,IAAIZ,kBAAkB,CAACM,UAAU,EAAEO,SAAS,EAAEZ,IAAI,EAAEA,IAAI,CAAC;QACjFS,UAAU,CAACI,SAAS,CAACF,eAAe,CAAC;QACrCA,eAAe,CAACG,GAAG,CAACP,aAAa,CAAC;MACpC,CAAC,MAAM;QACLF,UAAU,CAACU,QAAQ,CAAC,CAAC;MACvB;IACF,CAAC;IACDR,aAAa,CAAC,CAAC;EACjB,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}