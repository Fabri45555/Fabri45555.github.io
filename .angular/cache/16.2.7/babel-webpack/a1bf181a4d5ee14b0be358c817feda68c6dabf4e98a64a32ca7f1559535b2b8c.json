{"ast":null,"code":"import { isFunction } from './util/isFunction';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\nexport class Subscriber extends Subscription {\n  constructor(destination) {\n    super();\n    this.isStopped = false;\n    if (destination) {\n      this.destination = destination;\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n  static create(next, error, complete) {\n    return new SafeSubscriber(next, error, complete);\n  }\n  next(value) {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value);\n    }\n  }\n  error(err) {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n  complete() {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n  unsubscribe() {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null;\n    }\n  }\n  _next(value) {\n    this.destination.next(value);\n  }\n  _error(err) {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n  _complete() {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\nconst _bind = Function.prototype.bind;\nfunction bind(fn, thisArg) {\n  return _bind.call(fn, thisArg);\n}\nclass ConsumerObserver {\n  constructor(partialObserver) {\n    this.partialObserver = partialObserver;\n  }\n  next(value) {\n    const {\n      partialObserver\n    } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n  error(err) {\n    const {\n      partialObserver\n    } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n  complete() {\n    const {\n      partialObserver\n    } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\nexport class SafeSubscriber extends Subscriber {\n  constructor(observerOrNext, error, complete) {\n    super();\n    let partialObserver;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      partialObserver = {\n        next: observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined,\n        error: error !== null && error !== void 0 ? error : undefined,\n        complete: complete !== null && complete !== void 0 ? complete : undefined\n      };\n    } else {\n      let context;\n      if (this && config.useDeprecatedNextContext) {\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context)\n        };\n      } else {\n        partialObserver = observerOrNext;\n      }\n    }\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\nfunction handleUnhandledError(error) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    reportUnhandledError(error);\n  }\n}\nfunction defaultErrorHandler(err) {\n  throw err;\n}\nfunction handleStoppedNotification(notification, subscriber) {\n  const {\n    onStoppedNotification\n  } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\nexport const EMPTY_OBSERVER = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop\n};","map":{"version":3,"names":["isFunction","isSubscription","Subscription","config","reportUnhandledError","noop","nextNotification","errorNotification","COMPLETE_NOTIFICATION","timeoutProvider","captureError","Subscriber","constructor","destination","isStopped","add","EMPTY_OBSERVER","create","next","error","complete","SafeSubscriber","value","handleStoppedNotification","_next","err","_error","_complete","unsubscribe","closed","_bind","Function","prototype","bind","fn","thisArg","call","ConsumerObserver","partialObserver","handleUnhandledError","observerOrNext","undefined","context","useDeprecatedNextContext","Object","useDeprecatedSynchronousErrorHandling","defaultErrorHandler","notification","subscriber","onStoppedNotification","setTimeout"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/rxjs/dist/esm/internal/Subscriber.js"],"sourcesContent":["import {isFunction} from './util/isFunction';\nimport {isSubscription, Subscription} from './Subscription';\nimport {config} from './config';\nimport {reportUnhandledError} from './util/reportUnhandledError';\nimport {noop} from './util/noop';\nimport {nextNotification, errorNotification, COMPLETE_NOTIFICATION} from './NotificationFactories';\nimport {timeoutProvider} from './scheduler/timeoutProvider';\nimport {captureError} from './util/errorContext';\n\nexport class Subscriber extends Subscription {\n  constructor(destination) {\n    super();\n    this.isStopped = false;\n    if (destination) {\n      this.destination = destination;\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  static create(next, error, complete) {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  next(value) {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value);\n    }\n  }\n\n  error(err) {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  complete() {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null;\n    }\n  }\n\n  _next(value) {\n    this.destination.next(value);\n  }\n\n  _error(err) {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  _complete() {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\nconst _bind = Function.prototype.bind;\n\nfunction bind(fn, thisArg) {\n  return _bind.call(fn, thisArg);\n}\n\nclass ConsumerObserver {\n  constructor(partialObserver) {\n    this.partialObserver = partialObserver;\n  }\n\n  next(value) {\n    const {partialObserver} = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err) {\n    const {partialObserver} = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete() {\n    const {partialObserver} = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber extends Subscriber {\n  constructor(observerOrNext, error, complete) {\n    super();\n    let partialObserver;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      partialObserver = {\n        next: (observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined),\n        error: error !== null && error !== void 0 ? error : undefined,\n        complete: complete !== null && complete !== void 0 ? complete : undefined,\n      };\n    } else {\n      let context;\n      if (this && config.useDeprecatedNextContext) {\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        partialObserver = observerOrNext;\n      }\n    }\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    reportUnhandledError(error);\n  }\n}\n\nfunction defaultErrorHandler(err) {\n  throw err;\n}\n\nfunction handleStoppedNotification(notification, subscriber) {\n  const {onStoppedNotification} = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\nexport const EMPTY_OBSERVER = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}