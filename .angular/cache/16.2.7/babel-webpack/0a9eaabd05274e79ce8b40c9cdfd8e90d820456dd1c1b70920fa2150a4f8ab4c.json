{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Optional, Input, Directive, QueryList, EventEmitter, TemplateRef, ContentChildren, ViewChild, ContentChild, Output, inject, ChangeDetectorRef, Self, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Subject, merge, Subscription, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, takeUntil, filter, delay } from 'rxjs/operators';\nimport * as i3 from '@angular/material/core';\nimport { mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i3$1 from '@angular/cdk/bidi';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst _c0 = [\"mat-menu-item\", \"\"];\nfunction MatMenuItem__svg_svg_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 3);\n    i0.ɵɵelement(1, \"polygon\", 4);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = [[[\"mat-icon\"], [\"\", \"matMenuItemIcon\", \"\"]], \"*\"];\nconst _c2 = [\"mat-icon, [matMenuItemIcon]\", \"*\"];\nfunction MatMenu_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵlistener(\"keydown\", function MatMenu_ng_template_0_Template_div_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._handleKeydown($event));\n    })(\"click\", function MatMenu_ng_template_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.closed.emit(\"click\"));\n    })(\"@transformMenu.start\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4._onAnimationStart($event));\n    })(\"@transformMenu.done\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._onAnimationDone($event));\n    });\n    i0.ɵɵelementStart(1, \"div\", 1);\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", ctx_r0.panelId)(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n    i0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0.ariaLabelledby || null)(\"aria-describedby\", ctx_r0.ariaDescribedby || null);\n  }\n}\nconst _c3 = [\"*\"];\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nconst _MatMenuItemBase = mixinDisableRipple(mixinDisabled(class {}));\n\n/**\n * Single item inside a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemBase {\n  constructor(_elementRef, _document, _focusMonitor, _parentMenu, _changeDetectorRef) {\n    super();\n    this._elementRef = _elementRef;\n    this._document = _document;\n    this._focusMonitor = _focusMonitor;\n    this._parentMenu = _parentMenu;\n    this._changeDetectorRef = _changeDetectorRef;\n    /** ARIA role for the menu item. */\n    this.role = 'menuitem';\n    /** Stream that emits when the menu item is hovered. */\n    this._hovered = new Subject();\n    /** Stream that emits when the menu item is focused. */\n    this._focused = new Subject();\n    /** Whether the menu item is highlighted. */\n    this._highlighted = false;\n    /** Whether the menu item acts as a trigger for a sub-menu. */\n    this._triggersSubmenu = false;\n    _parentMenu?.addItem?.(this);\n  }\n\n  /** Focuses the menu item. */\n  focus(origin, options) {\n    if (this._focusMonitor && origin) {\n      this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    } else {\n      this._getHostElement().focus(options);\n    }\n    this._focused.next(this);\n  }\n  ngAfterViewInit() {\n    if (this._focusMonitor) {\n      // Start monitoring the element, so it gets the appropriate focused classes. We want\n      // to show the focus style for menu items only when the focus was not caused by a\n      // mouse or touch interaction.\n      this._focusMonitor.monitor(this._elementRef, false);\n    }\n  }\n  ngOnDestroy() {\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    if (this._parentMenu && this._parentMenu.removeItem) {\n      this._parentMenu.removeItem(this);\n    }\n    this._hovered.complete();\n    this._focused.complete();\n  }\n\n  /** Used to set the `tabindex`. */\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Returns the host DOM element. */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Prevents the default element actions if it is disabled. */\n  _checkDisabled(event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /** Emits to the hover stream. */\n  _handleMouseEnter() {\n    this._hovered.next(this);\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel() {\n    const clone = this._elementRef.nativeElement.cloneNode(true);\n    const icons = clone.querySelectorAll('mat-icon, .material-icons');\n    // Strip away icons, so they don't show up in the text.\n    for (let i = 0; i < icons.length; i++) {\n      icons[i].remove();\n    }\n    return clone.textContent?.trim() || '';\n  }\n  _setHighlighted(isHighlighted) {\n    // We need to mark this for check for the case where the content is coming from a\n    // `matMenuContent` whose change detection tree is at the declaration position,\n    // not the insertion position. See #23175.\n    // @breaking-change 12.0.0 Remove null check for `_changeDetectorRef`.\n    this._highlighted = isHighlighted;\n    this._changeDetectorRef?.markForCheck();\n  }\n  _setTriggersSubmenu(triggersSubmenu) {\n    // @breaking-change 12.0.0 Remove null check for `_changeDetectorRef`.\n    this._triggersSubmenu = triggersSubmenu;\n    this._changeDetectorRef?.markForCheck();\n  }\n  _hasFocus() {\n    return this._document && this._document.activeElement === this._getHostElement();\n  }\n  static #_ = this.ɵfac = function MatMenuItem_Factory(t) {\n    return new (t || MatMenuItem)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatMenuItem,\n    selectors: [[\"\", \"mat-menu-item\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-menu-item\", \"mat-mdc-focus-indicator\"],\n    hostVars: 8,\n    hostBindings: function MatMenuItem_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) {\n          return ctx._checkDisabled($event);\n        })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() {\n          return ctx._handleMouseEnter();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled)(\"disabled\", ctx.disabled || null);\n        i0.ɵɵclassProp(\"mat-mdc-menu-item-highlighted\", ctx._highlighted)(\"mat-mdc-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      disableRipple: \"disableRipple\",\n      role: \"role\"\n    },\n    exportAs: [\"matMenuItem\"],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    attrs: _c0,\n    ngContentSelectors: _c2,\n    decls: 5,\n    vars: 3,\n    consts: [[1, \"mat-mdc-menu-item-text\"], [\"matRipple\", \"\", 1, \"mat-mdc-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"], [\"class\", \"mat-mdc-menu-submenu-icon\", \"viewBox\", \"0 0 5 10\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"viewBox\", \"0 0 5 10\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-mdc-menu-submenu-icon\"], [\"points\", \"0,0 5,5 0,10\"]],\n    template: function MatMenuItem_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c1);\n        i0.ɵɵprojection(0);\n        i0.ɵɵelementStart(1, \"span\", 0);\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"div\", 1);\n        i0.ɵɵtemplate(4, MatMenuItem__svg_svg_4_Template, 2, 0, \"svg\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx._triggersSubmenu);\n      }\n    },\n    dependencies: [i2.NgIf, i3.MatRipple],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMenuItem, [{\n    type: Component,\n    args: [{\n      selector: '[mat-menu-item]',\n      exportAs: 'matMenuItem',\n      inputs: ['disabled', 'disableRipple'],\n      host: {\n        '[attr.role]': 'role',\n        'class': 'mat-mdc-menu-item mat-mdc-focus-indicator',\n        '[class.mat-mdc-menu-item-highlighted]': '_highlighted',\n        '[class.mat-mdc-menu-item-submenu-trigger]': '_triggersSubmenu',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)',\n        '(mouseenter)': '_handleMouseEnter()'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<ng-content select=\\\"mat-icon, [matMenuItemIcon]\\\"></ng-content>\\n<span class=\\\"mat-mdc-menu-item-text\\\"><ng-content></ng-content></span>\\n<div class=\\\"mat-mdc-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-mdc-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"\\n  aria-hidden=\\\"true\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i1.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_PANEL]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    role: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n  throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n  throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n  throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` + `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\nclass _MatMenuContentBase {\n  constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n    this._template = _template;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n    this._injector = _injector;\n    this._viewContainerRef = _viewContainerRef;\n    this._document = _document;\n    this._changeDetectorRef = _changeDetectorRef;\n    /** Emits when the menu content has been attached. */\n    this._attached = new Subject();\n  }\n\n  /**\n   * Attaches the content with a particular context.\n   * @docs-private\n   */\n  attach(context = {}) {\n    if (!this._portal) {\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n    }\n    this.detach();\n    if (!this._outlet) {\n      this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n    }\n    const element = this._template.elementRef.nativeElement;\n    // Because we support opening the same menu from different triggers (which in turn have their\n    // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n    // risk it staying attached to a pane that's no longer in the DOM.\n    element.parentNode.insertBefore(this._outlet.outletElement, element);\n    // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n    // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n    // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n    // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n    // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n    // @breaking-change 9.0.0 Make change detector ref required\n    this._changeDetectorRef?.markForCheck();\n    this._portal.attach(this._outlet, context);\n    this._attached.next();\n  }\n\n  /**\n   * Detaches the content.\n   * @docs-private\n   */\n  detach() {\n    if (this._portal.isAttached) {\n      this._portal.detach();\n    }\n  }\n  ngOnDestroy() {\n    if (this._outlet) {\n      this._outlet.dispose();\n    }\n  }\n  static #_ = this.ɵfac = function _MatMenuContentBase_Factory(t) {\n    return new (t || _MatMenuContentBase)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ApplicationRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _MatMenuContentBase\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatMenuContentBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }, {\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.ApplicationRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n\n/** Menu content that will be rendered lazily once the menu is opened. */\nclass MatMenuContent extends _MatMenuContentBase {\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵMatMenuContent_BaseFactory;\n    return function MatMenuContent_Factory(t) {\n      return (ɵMatMenuContent_BaseFactory || (ɵMatMenuContent_BaseFactory = i0.ɵɵgetInheritedFactory(MatMenuContent)))(t || MatMenuContent);\n    };\n  }();\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatMenuContent,\n    selectors: [[\"ng-template\", \"matMenuContent\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_MENU_CONTENT,\n      useExisting: MatMenuContent\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMenuContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matMenuContent]',\n      providers: [{\n        provide: MAT_MENU_CONTENT,\n        useExisting: MatMenuContent\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nconst matMenuAnimations = {\n  /**\n   * This animation controls the menu panel's entry and exit from the page.\n   *\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\n   *\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\n   * delay to display the ripple.\n   */\n  transformMenu: trigger('transformMenu', [state('void', style({\n    opacity: 0,\n    transform: 'scale(0.8)'\n  })), transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n    opacity: 1,\n    transform: 'scale(1)'\n  }))), transition('* => void', animate('100ms 25ms linear', style({\n    opacity: 0\n  })))]),\n  /**\n   * This animation fades in the background color and content of the menu panel\n   * after its containing element is scaled in.\n   */\n  fadeInItems: trigger('fadeInItems', [\n  // TODO(crisbeto): this is inside the `transformMenu`\n  // now. Remove next time we do breaking changes.\n  state('showing', style({\n    opacity: 1\n  })), transition('void => *', [style({\n    opacity: 0\n  }), animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')])])\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\nlet menuPanelUid = 0;\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n  providedIn: 'root',\n  factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    overlapTrigger: false,\n    xPosition: 'after',\n    yPosition: 'below',\n    backdropClass: 'cdk-overlay-transparent-backdrop'\n  };\n}\n\n/** Base class with all of the `MatMenu` functionality. */\nclass _MatMenuBase {\n  /** Position of the menu in the X axis. */\n  get xPosition() {\n    return this._xPosition;\n  }\n  set xPosition(value) {\n    if (value !== 'before' && value !== 'after' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwMatMenuInvalidPositionX();\n    }\n    this._xPosition = value;\n    this.setPositionClasses();\n  }\n\n  /** Position of the menu in the Y axis. */\n  get yPosition() {\n    return this._yPosition;\n  }\n  set yPosition(value) {\n    if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwMatMenuInvalidPositionY();\n    }\n    this._yPosition = value;\n    this.setPositionClasses();\n  }\n\n  /** Whether the menu should overlap its trigger. */\n  get overlapTrigger() {\n    return this._overlapTrigger;\n  }\n  set overlapTrigger(value) {\n    this._overlapTrigger = coerceBooleanProperty(value);\n  }\n\n  /** Whether the menu has a backdrop. */\n  get hasBackdrop() {\n    return this._hasBackdrop;\n  }\n  set hasBackdrop(value) {\n    this._hasBackdrop = coerceBooleanProperty(value);\n  }\n\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @param classes list of class names\n   */\n  set panelClass(classes) {\n    const previousPanelClass = this._previousPanelClass;\n    if (previousPanelClass && previousPanelClass.length) {\n      previousPanelClass.split(' ').forEach(className => {\n        this._classList[className] = false;\n      });\n    }\n    this._previousPanelClass = classes;\n    if (classes && classes.length) {\n      classes.split(' ').forEach(className => {\n        this._classList[className] = true;\n      });\n      this._elementRef.nativeElement.className = '';\n    }\n  }\n\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @deprecated Use `panelClass` instead.\n   * @breaking-change 8.0.0\n   */\n  get classList() {\n    return this.panelClass;\n  }\n  set classList(classes) {\n    this.panelClass = classes;\n  }\n  constructor(_elementRef, _ngZone, defaultOptions,\n  // @breaking-change 15.0.0 `_changeDetectorRef` to become a required parameter.\n  _changeDetectorRef) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._changeDetectorRef = _changeDetectorRef;\n    /** Only the direct descendant menu items. */\n    this._directDescendantItems = new QueryList();\n    /** Config object to be passed into the menu's ngClass */\n    this._classList = {};\n    /** Current state of the panel animation. */\n    this._panelAnimationState = 'void';\n    /** Emits whenever an animation on the menu completes. */\n    this._animationDone = new Subject();\n    /** Event emitted when the menu is closed. */\n    this.closed = new EventEmitter();\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * @breaking-change 8.0.0\n     */\n    this.close = this.closed;\n    this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    this.overlayPanelClass = defaultOptions.overlayPanelClass || '';\n    this._xPosition = defaultOptions.xPosition;\n    this._yPosition = defaultOptions.yPosition;\n    this.backdropClass = defaultOptions.backdropClass;\n    this._overlapTrigger = defaultOptions.overlapTrigger;\n    this._hasBackdrop = defaultOptions.hasBackdrop;\n  }\n  ngOnInit() {\n    this.setPositionClasses();\n  }\n  ngAfterContentInit() {\n    this._updateDirectDescendants();\n    this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead().withHomeAndEnd();\n    this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n    // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n    // is internal and we know that it gets completed on destroy.\n    this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map(item => item._focused)))).subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n    this._directDescendantItems.changes.subscribe(itemsList => {\n      // Move focus to another item, if the active item is removed from the list.\n      // We need to debounce the callback, because multiple items might be removed\n      // in quick succession.\n      const manager = this._keyManager;\n      if (this._panelAnimationState === 'enter' && manager.activeItem?._hasFocus()) {\n        const items = itemsList.toArray();\n        const index = Math.max(0, Math.min(items.length - 1, manager.activeItemIndex || 0));\n        if (items[index] && !items[index].disabled) {\n          manager.setActiveItem(index);\n        } else {\n          manager.setNextItemActive();\n        }\n      }\n    });\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._directDescendantItems.destroy();\n    this.closed.complete();\n    this._firstItemFocusSubscription?.unsubscribe();\n  }\n\n  /** Stream that emits whenever the hovered menu item changes. */\n  _hovered() {\n    // Coerce the `changes` property because Angular types it as `Observable<any>`\n    const itemChanges = this._directDescendantItems.changes;\n    return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map(item => item._hovered))));\n  }\n\n  /*\n   * Registers a menu item with the menu.\n   * @docs-private\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 9.0.0\n   */\n  addItem(_item) {}\n\n  /**\n   * Removes an item from the menu.\n   * @docs-private\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 9.0.0\n   */\n  removeItem(_item) {}\n\n  /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n  _handleKeydown(event) {\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n    switch (keyCode) {\n      case ESCAPE:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this.closed.emit('keydown');\n        }\n        break;\n      case LEFT_ARROW:\n        if (this.parentMenu && this.direction === 'ltr') {\n          this.closed.emit('keydown');\n        }\n        break;\n      case RIGHT_ARROW:\n        if (this.parentMenu && this.direction === 'rtl') {\n          this.closed.emit('keydown');\n        }\n        break;\n      default:\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n          manager.setFocusOrigin('keyboard');\n        }\n        manager.onKeydown(event);\n        return;\n    }\n    // Don't allow the event to propagate if we've already handled it, or it may\n    // end up reaching other overlays that were opened earlier (see #22694).\n    event.stopPropagation();\n  }\n\n  /**\n   * Focus the first item in the menu.\n   * @param origin Action from which the focus originated. Used to set the correct styling.\n   */\n  focusFirstItem(origin = 'program') {\n    // Wait for `onStable` to ensure iOS VoiceOver screen reader focuses the first item (#24735).\n    this._firstItemFocusSubscription?.unsubscribe();\n    this._firstItemFocusSubscription = this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      let menuPanel = null;\n      if (this._directDescendantItems.length) {\n        // Because the `mat-menuPanel` is at the DOM insertion point, not inside the overlay, we don't\n        // have a nice way of getting a hold of the menuPanel panel. We can't use a `ViewChild` either\n        // because the panel is inside an `ng-template`. We work around it by starting from one of\n        // the items and walking up the DOM.\n        menuPanel = this._directDescendantItems.first._getHostElement().closest('[role=\"menu\"]');\n      }\n      // If an item in the menuPanel is already focused, avoid overriding the focus.\n      if (!menuPanel || !menuPanel.contains(document.activeElement)) {\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menuPanel panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && menuPanel) {\n          menuPanel.focus();\n        }\n      }\n    });\n  }\n\n  /**\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\n   * the user to start from the first option when pressing the down arrow.\n   */\n  resetActiveItem() {\n    this._keyManager.setActiveItem(-1);\n  }\n\n  /**\n   * Sets the menu panel elevation.\n   * @param depth Number of parent menus that come before the menu.\n   */\n  setElevation(depth) {\n    // The elevation starts at the base and increases by one for each level.\n    // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n    const elevation = Math.min(this._baseElevation + depth, 24);\n    const newElevation = `${this._elevationPrefix}${elevation}`;\n    const customElevation = Object.keys(this._classList).find(className => {\n      return className.startsWith(this._elevationPrefix);\n    });\n    if (!customElevation || customElevation === this._previousElevation) {\n      if (this._previousElevation) {\n        this._classList[this._previousElevation] = false;\n      }\n      this._classList[newElevation] = true;\n      this._previousElevation = newElevation;\n    }\n  }\n\n  /**\n   * Adds classes to the menu panel based on its position. Can be used by\n   * consumers to add specific styling based on the position.\n   * @param posX Position of the menu along the x axis.\n   * @param posY Position of the menu along the y axis.\n   * @docs-private\n   */\n  setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n    const classes = this._classList;\n    classes['mat-menu-before'] = posX === 'before';\n    classes['mat-menu-after'] = posX === 'after';\n    classes['mat-menu-above'] = posY === 'above';\n    classes['mat-menu-below'] = posY === 'below';\n    // @breaking-change 15.0.0 Remove null check for `_changeDetectorRef`.\n    this._changeDetectorRef?.markForCheck();\n  }\n\n  /** Starts the enter animation. */\n  _startAnimation() {\n    // @breaking-change 8.0.0 Combine with _resetAnimation.\n    this._panelAnimationState = 'enter';\n  }\n\n  /** Resets the panel animation to its initial state. */\n  _resetAnimation() {\n    // @breaking-change 8.0.0 Combine with _startAnimation.\n    this._panelAnimationState = 'void';\n  }\n\n  /** Callback that is invoked when the panel animation completes. */\n  _onAnimationDone(event) {\n    this._animationDone.next(event);\n    this._isAnimating = false;\n  }\n  _onAnimationStart(event) {\n    this._isAnimating = true;\n    // Scroll the content element to the top as soon as the animation starts. This is necessary,\n    // because we move focus to the first item while it's still being animated, which can throw\n    // the browser off when it determines the scroll position. Alternatively we can move focus\n    // when the animation is done, however moving focus asynchronously will interrupt screen\n    // readers which are in the process of reading out the menu already. We take the `element`\n    // from the `event` since we can't use a `ViewChild` to access the pane.\n    if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n      event.element.scrollTop = 0;\n    }\n  }\n\n  /**\n   * Sets up a stream that will keep track of any newly-added menu items and will update the list\n   * of direct descendants. We collect the descendants this way, because `_allItems` can include\n   * items that are part of child menus, and using a custom way of registering items is unreliable\n   * when it comes to maintaining the item order.\n   */\n  _updateDirectDescendants() {\n    this._allItems.changes.pipe(startWith(this._allItems)).subscribe(items => {\n      this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n      this._directDescendantItems.notifyOnChanges();\n    });\n  }\n  static #_ = this.ɵfac = function _MatMenuBase_Factory(t) {\n    return new (t || _MatMenuBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _MatMenuBase,\n    contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MAT_MENU_CONTENT, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatMenuItem, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n      }\n    },\n    viewQuery: function _MatMenuBase_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TemplateRef, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n      }\n    },\n    inputs: {\n      backdropClass: \"backdropClass\",\n      ariaLabel: [\"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"],\n      ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"],\n      xPosition: \"xPosition\",\n      yPosition: \"yPosition\",\n      overlapTrigger: \"overlapTrigger\",\n      hasBackdrop: \"hasBackdrop\",\n      panelClass: [\"class\", \"panelClass\"],\n      classList: \"classList\"\n    },\n    outputs: {\n      closed: \"closed\",\n      close: \"close\"\n    }\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatMenuBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_DEFAULT_OPTIONS]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    _allItems: [{\n      type: ContentChildren,\n      args: [MatMenuItem, {\n        descendants: true\n      }]\n    }],\n    backdropClass: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    ariaDescribedby: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    xPosition: [{\n      type: Input\n    }],\n    yPosition: [{\n      type: Input\n    }],\n    templateRef: [{\n      type: ViewChild,\n      args: [TemplateRef]\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [MatMenuItem, {\n        descendants: false\n      }]\n    }],\n    lazyContent: [{\n      type: ContentChild,\n      args: [MAT_MENU_CONTENT]\n    }],\n    overlapTrigger: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input\n    }],\n    panelClass: [{\n      type: Input,\n      args: ['class']\n    }],\n    classList: [{\n      type: Input\n    }],\n    closed: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }]\n  });\n})();\nclass MatMenu extends _MatMenuBase {\n  constructor(_elementRef, _ngZone, _defaultOptions, changeDetectorRef) {\n    super(_elementRef, _ngZone, _defaultOptions, changeDetectorRef);\n    this._elevationPrefix = 'mat-elevation-z';\n    this._baseElevation = 8;\n  }\n  static #_ = this.ɵfac = function MatMenu_Factory(t) {\n    return new (t || MatMenu)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatMenu,\n    selectors: [[\"mat-menu\"]],\n    hostAttrs: [\"ngSkipHydration\", \"\"],\n    hostVars: 3,\n    hostBindings: function MatMenu_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n      }\n    },\n    exportAs: [\"matMenu\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_MENU_PANEL,\n      useExisting: MatMenu\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c3,\n    decls: 1,\n    vars: 0,\n    consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-mdc-menu-panel\", \"mat-mdc-elevation-specific\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-mdc-menu-content\"]],\n    template: function MatMenu_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, MatMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n      }\n    },\n    dependencies: [i2.NgClass],\n    styles: [\"mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;list-style-type:none}.mat-mdc-menu-content:focus{outline:none}.mat-mdc-menu-content,.mat-mdc-menu-content .mat-mdc-menu-item .mat-mdc-menu-item-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;white-space:normal;font-family:var(--mat-menu-item-label-text-font);line-height:var(--mat-menu-item-label-text-line-height);font-size:var(--mat-menu-item-label-text-size);letter-spacing:var(--mat-menu-item-label-text-tracking);font-weight:var(--mat-menu-item-label-text-weight)}.mat-mdc-menu-panel{--mat-menu-container-shape:4px;min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;box-sizing:border-box;outline:0;border-radius:var(--mat-menu-container-shape);background-color:var(--mat-menu-container-color);will-change:transform,opacity}.mat-mdc-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-mdc-menu-panel{outline:solid 1px}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;align-items:center;min-height:48px}.mat-mdc-menu-item:focus{outline:none}[dir=rtl] .mat-mdc-menu-item,.mat-mdc-menu-item[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-menu-item::-moz-focus-inner{border:0}.mat-mdc-menu-item,.mat-mdc-menu-item:visited,.mat-mdc-menu-item:link{color:var(--mat-menu-item-label-text-color)}.mat-mdc-menu-item .mat-icon-no-color,.mat-mdc-menu-item .mat-mdc-menu-submenu-icon{color:var(--mat-menu-item-icon-color)}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item .mat-icon{margin-right:16px}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:16px}.mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-mdc-menu-item:not([disabled]):hover{background-color:var(--mat-menu-item-hover-state-layer-color)}.mat-mdc-menu-item:not([disabled]).cdk-program-focused,.mat-mdc-menu-item:not([disabled]).cdk-keyboard-focused,.mat-mdc-menu-item:not([disabled]).mat-mdc-menu-item-highlighted{background-color:var(--mat-menu-item-focus-state-layer-color)}.cdk-high-contrast-active .mat-mdc-menu-item{margin-top:1px}.mat-mdc-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-mdc-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-mdc-menu-submenu-icon{fill:CanvasText}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"],\n    encapsulation: 2,\n    data: {\n      animation: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems]\n    },\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMenu, [{\n    type: Component,\n    args: [{\n      selector: 'mat-menu',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matMenu',\n      host: {\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[attr.aria-describedby]': 'null',\n        'ngSkipHydration': ''\n      },\n      animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems],\n      providers: [{\n        provide: MAT_MENU_PANEL,\n        useExisting: MatMenu\n      }],\n      template: \"<ng-template>\\n  <div\\n    class=\\\"mat-mdc-menu-panel mat-mdc-elevation-specific\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-mdc-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n      styles: [\"mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;list-style-type:none}.mat-mdc-menu-content:focus{outline:none}.mat-mdc-menu-content,.mat-mdc-menu-content .mat-mdc-menu-item .mat-mdc-menu-item-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;white-space:normal;font-family:var(--mat-menu-item-label-text-font);line-height:var(--mat-menu-item-label-text-line-height);font-size:var(--mat-menu-item-label-text-size);letter-spacing:var(--mat-menu-item-label-text-tracking);font-weight:var(--mat-menu-item-label-text-weight)}.mat-mdc-menu-panel{--mat-menu-container-shape:4px;min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;box-sizing:border-box;outline:0;border-radius:var(--mat-menu-container-shape);background-color:var(--mat-menu-container-color);will-change:transform,opacity}.mat-mdc-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-mdc-menu-panel{outline:solid 1px}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;align-items:center;min-height:48px}.mat-mdc-menu-item:focus{outline:none}[dir=rtl] .mat-mdc-menu-item,.mat-mdc-menu-item[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-menu-item::-moz-focus-inner{border:0}.mat-mdc-menu-item,.mat-mdc-menu-item:visited,.mat-mdc-menu-item:link{color:var(--mat-menu-item-label-text-color)}.mat-mdc-menu-item .mat-icon-no-color,.mat-mdc-menu-item .mat-mdc-menu-submenu-icon{color:var(--mat-menu-item-icon-color)}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item .mat-icon{margin-right:16px}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:16px}.mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-mdc-menu-item:not([disabled]):hover{background-color:var(--mat-menu-item-hover-state-layer-color)}.mat-mdc-menu-item:not([disabled]).cdk-program-focused,.mat-mdc-menu-item:not([disabled]).cdk-keyboard-focused,.mat-mdc-menu-item:not([disabled]).mat-mdc-menu-item-highlighted{background-color:var(--mat-menu-item-focus-state-layer-color)}.cdk-high-contrast-active .mat-mdc-menu-item{margin-top:1px}.mat-mdc-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-mdc-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-mdc-menu-submenu-icon{fill:CanvasText}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_DEFAULT_OPTIONS]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY\n};\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * Default top padding of the menu panel.\n * @deprecated No longer being used. Will be removed.\n * @breaking-change 15.0.0\n */\nconst MENU_PANEL_TOP_PADDING = 8;\nclass _MatMenuTriggerBase {\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0\n   */\n  get _deprecatedMatMenuTriggerFor() {\n    return this.menu;\n  }\n  set _deprecatedMatMenuTriggerFor(v) {\n    this.menu = v;\n  }\n\n  /** References the menu instance that the trigger is associated with. */\n  get menu() {\n    return this._menu;\n  }\n  set menu(menu) {\n    if (menu === this._menu) {\n      return;\n    }\n    this._menu = menu;\n    this._menuCloseSubscription.unsubscribe();\n    if (menu) {\n      if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwMatMenuRecursiveError();\n      }\n      this._menuCloseSubscription = menu.close.subscribe(reason => {\n        this._destroyMenu(reason);\n        // If a click closed the menu, we should close the entire chain of nested menus.\n        if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n          this._parentMaterialMenu.closed.emit(reason);\n        }\n      });\n    }\n    this._menuItemInstance?._setTriggersSubmenu(this.triggersSubmenu());\n  }\n  constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu,\n  // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n  // tslint:disable-next-line: lightweight-tokens\n  _menuItemInstance, _dir, _focusMonitor, _ngZone) {\n    this._overlay = _overlay;\n    this._element = _element;\n    this._viewContainerRef = _viewContainerRef;\n    this._menuItemInstance = _menuItemInstance;\n    this._dir = _dir;\n    this._focusMonitor = _focusMonitor;\n    this._ngZone = _ngZone;\n    this._overlayRef = null;\n    this._menuOpen = false;\n    this._closingActionsSubscription = Subscription.EMPTY;\n    this._hoverSubscription = Subscription.EMPTY;\n    this._menuCloseSubscription = Subscription.EMPTY;\n    this._changeDetectorRef = inject(ChangeDetectorRef);\n    /**\n     * Handles touch start events on the trigger.\n     * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n     */\n    this._handleTouchStart = event => {\n      if (!isFakeTouchstartFromScreenReader(event)) {\n        this._openedBy = 'touch';\n      }\n    };\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the menu is opened via the keyboard\n    this._openedBy = undefined;\n    /**\n     * Whether focus should be restored when the menu is closed.\n     * Note that disabling this option can have accessibility implications\n     * and it's up to you to manage focus, if you decide to turn it off.\n     */\n    this.restoreFocus = true;\n    /** Event emitted when the associated menu is opened. */\n    this.menuOpened = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * @breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onMenuOpen = this.menuOpened;\n    /** Event emitted when the associated menu is closed. */\n    this.menuClosed = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * @breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onMenuClose = this.menuClosed;\n    this._scrollStrategy = scrollStrategy;\n    this._parentMaterialMenu = parentMenu instanceof _MatMenuBase ? parentMenu : undefined;\n    _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n  }\n  ngAfterContentInit() {\n    this._handleHover();\n  }\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n    this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n    this._menuCloseSubscription.unsubscribe();\n    this._closingActionsSubscription.unsubscribe();\n    this._hoverSubscription.unsubscribe();\n  }\n\n  /** Whether the menu is open. */\n  get menuOpen() {\n    return this._menuOpen;\n  }\n\n  /** The text direction of the containing app. */\n  get dir() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the menu triggers a sub-menu or a top-level one. */\n  triggersSubmenu() {\n    return !!(this._menuItemInstance && this._parentMaterialMenu && this.menu);\n  }\n\n  /** Toggles the menu between the open and closed states. */\n  toggleMenu() {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n\n  /** Opens the menu. */\n  openMenu() {\n    const menu = this.menu;\n    if (this._menuOpen || !menu) {\n      return;\n    }\n    const overlayRef = this._createOverlay(menu);\n    const overlayConfig = overlayRef.getConfig();\n    const positionStrategy = overlayConfig.positionStrategy;\n    this._setPosition(menu, positionStrategy);\n    overlayConfig.hasBackdrop = menu.hasBackdrop == null ? !this.triggersSubmenu() : menu.hasBackdrop;\n    overlayRef.attach(this._getPortal(menu));\n    if (menu.lazyContent) {\n      menu.lazyContent.attach(this.menuData);\n    }\n    this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n    this._initMenu(menu);\n    if (menu instanceof _MatMenuBase) {\n      menu._startAnimation();\n      menu._directDescendantItems.changes.pipe(takeUntil(menu.close)).subscribe(() => {\n        // Re-adjust the position without locking when the amount of items\n        // changes so that the overlay is allowed to pick a new optimal position.\n        positionStrategy.withLockedPosition(false).reapplyLastPosition();\n        positionStrategy.withLockedPosition(true);\n      });\n    }\n  }\n\n  /** Closes the menu. */\n  closeMenu() {\n    this.menu?.close.emit();\n  }\n\n  /**\n   * Focuses the menu trigger.\n   * @param origin Source of the menu trigger's focus.\n   */\n  focus(origin, options) {\n    if (this._focusMonitor && origin) {\n      this._focusMonitor.focusVia(this._element, origin, options);\n    } else {\n      this._element.nativeElement.focus(options);\n    }\n  }\n\n  /**\n   * Updates the position of the menu to ensure that it fits all options within the viewport.\n   */\n  updatePosition() {\n    this._overlayRef?.updatePosition();\n  }\n\n  /** Closes the menu and does the necessary cleanup. */\n  _destroyMenu(reason) {\n    if (!this._overlayRef || !this.menuOpen) {\n      return;\n    }\n    const menu = this.menu;\n    this._closingActionsSubscription.unsubscribe();\n    this._overlayRef.detach();\n    // Always restore focus if the user is navigating using the keyboard or the menu was opened\n    // programmatically. We don't restore for non-root triggers, because it can prevent focus\n    // from making it back to the root trigger when closing a long chain of menus by clicking\n    // on the backdrop.\n    if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n      this.focus(this._openedBy);\n    }\n    this._openedBy = undefined;\n    if (menu instanceof _MatMenuBase) {\n      menu._resetAnimation();\n      if (menu.lazyContent) {\n        // Wait for the exit animation to finish before detaching the content.\n        menu._animationDone.pipe(filter(event => event.toState === 'void'), take(1),\n        // Interrupt if the content got re-attached.\n        takeUntil(menu.lazyContent._attached)).subscribe({\n          next: () => menu.lazyContent.detach(),\n          // No matter whether the content got re-attached, reset the menu.\n          complete: () => this._setIsMenuOpen(false)\n        });\n      } else {\n        this._setIsMenuOpen(false);\n      }\n    } else {\n      this._setIsMenuOpen(false);\n      menu?.lazyContent?.detach();\n    }\n  }\n\n  /**\n   * This method sets the menu state to open and focuses the first item if\n   * the menu was opened via the keyboard.\n   */\n  _initMenu(menu) {\n    menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n    menu.direction = this.dir;\n    this._setMenuElevation(menu);\n    menu.focusFirstItem(this._openedBy || 'program');\n    this._setIsMenuOpen(true);\n  }\n\n  /** Updates the menu elevation based on the amount of parent menus that it has. */\n  _setMenuElevation(menu) {\n    if (menu.setElevation) {\n      let depth = 0;\n      let parentMenu = menu.parentMenu;\n      while (parentMenu) {\n        depth++;\n        parentMenu = parentMenu.parentMenu;\n      }\n      menu.setElevation(depth);\n    }\n  }\n\n  // set state rather than toggle to support triggers sharing a menu\n  _setIsMenuOpen(isOpen) {\n    if (isOpen !== this._menuOpen) {\n      this._menuOpen = isOpen;\n      this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n      if (this.triggersSubmenu()) {\n        this._menuItemInstance._setHighlighted(isOpen);\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * This method creates the overlay from the provided menu's template and saves its\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\n   */\n  _createOverlay(menu) {\n    if (!this._overlayRef) {\n      const config = this._getOverlayConfig(menu);\n      this._subscribeToPositions(menu, config.positionStrategy);\n      this._overlayRef = this._overlay.create(config);\n      // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n      // Ideally we'd also have our keyboard event logic in here, however doing so will\n      // break anybody that may have implemented the `MatMenuPanel` themselves.\n      this._overlayRef.keydownEvents().subscribe();\n    }\n    return this._overlayRef;\n  }\n\n  /**\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\n   * @returns OverlayConfig\n   */\n  _getOverlayConfig(menu) {\n    return new OverlayConfig({\n      positionStrategy: this._overlay.position().flexibleConnectedTo(this._element).withLockedPosition().withGrowAfterOpen().withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n      backdropClass: menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n      panelClass: menu.overlayPanelClass,\n      scrollStrategy: this._scrollStrategy(),\n      direction: this._dir\n    });\n  }\n\n  /**\n   * Listens to changes in the position of the overlay and sets the correct classes\n   * on the menu based on the new position. This ensures the animation origin is always\n   * correct, even if a fallback position is used for the overlay.\n   */\n  _subscribeToPositions(menu, position) {\n    if (menu.setPositionClasses) {\n      position.positionChanges.subscribe(change => {\n        const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n        const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n        // @breaking-change 15.0.0 Remove null check for `ngZone`.\n        // `positionChanges` fires outside of the `ngZone` and `setPositionClasses` might be\n        // updating something in the view so we need to bring it back in.\n        if (this._ngZone) {\n          this._ngZone.run(() => menu.setPositionClasses(posX, posY));\n        } else {\n          menu.setPositionClasses(posX, posY);\n        }\n      });\n    }\n  }\n\n  /**\n   * Sets the appropriate positions on a position strategy\n   * so the overlay connects with the trigger correctly.\n   * @param positionStrategy Strategy whose position to update.\n   */\n  _setPosition(menu, positionStrategy) {\n    let [originX, originFallbackX] = menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n    let [overlayY, overlayFallbackY] = menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    let offsetY = 0;\n    if (this.triggersSubmenu()) {\n      // When the menu is a sub-menu, it should always align itself\n      // to the edges of the trigger, instead of overlapping it.\n      overlayFallbackX = originX = menu.xPosition === 'before' ? 'start' : 'end';\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n      if (this._parentMaterialMenu) {\n        if (this._parentInnerPadding == null) {\n          const firstItem = this._parentMaterialMenu.items.first;\n          this._parentInnerPadding = firstItem ? firstItem._getHostElement().offsetTop : 0;\n        }\n        offsetY = overlayY === 'bottom' ? this._parentInnerPadding : -this._parentInnerPadding;\n      }\n    } else if (!menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n    positionStrategy.withPositions([{\n      originX,\n      originY,\n      overlayX,\n      overlayY,\n      offsetY\n    }, {\n      originX: originFallbackX,\n      originY,\n      overlayX: overlayFallbackX,\n      overlayY,\n      offsetY\n    }, {\n      originX,\n      originY: originFallbackY,\n      overlayX,\n      overlayY: overlayFallbackY,\n      offsetY: -offsetY\n    }, {\n      originX: originFallbackX,\n      originY: originFallbackY,\n      overlayX: overlayFallbackX,\n      overlayY: overlayFallbackY,\n      offsetY: -offsetY\n    }]);\n  }\n\n  /** Returns a stream that emits whenever an action that should close the menu occurs. */\n  _menuClosingActions() {\n    const backdrop = this._overlayRef.backdropClick();\n    const detachments = this._overlayRef.detachments();\n    const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n    const hover = this._parentMaterialMenu ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen)) : of();\n    return merge(backdrop, parentClose, hover, detachments);\n  }\n\n  /** Handles mouse presses on the trigger. */\n  _handleMousedown(event) {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      // Since right or middle button clicks won't trigger the `click` event,\n      // we shouldn't consider the menu as opened by mouse in those cases.\n      this._openedBy = event.button === 0 ? 'mouse' : undefined;\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n      // we should prevent focus from moving onto it via click to avoid the\n      // highlight from lingering on the menu item.\n      if (this.triggersSubmenu()) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  /** Handles key presses on the trigger. */\n  _handleKeydown(event) {\n    const keyCode = event.keyCode;\n    // Pressing enter on the trigger will trigger the click handler later.\n    if (keyCode === ENTER || keyCode === SPACE) {\n      this._openedBy = 'keyboard';\n    }\n    if (this.triggersSubmenu() && (keyCode === RIGHT_ARROW && this.dir === 'ltr' || keyCode === LEFT_ARROW && this.dir === 'rtl')) {\n      this._openedBy = 'keyboard';\n      this.openMenu();\n    }\n  }\n\n  /** Handles click events on the trigger. */\n  _handleClick(event) {\n    if (this.triggersSubmenu()) {\n      // Stop event propagation to avoid closing the parent menu.\n      event.stopPropagation();\n      this.openMenu();\n    } else {\n      this.toggleMenu();\n    }\n  }\n\n  /** Handles the cases where the user hovers over the trigger. */\n  _handleHover() {\n    // Subscribe to changes in the hovered item in order to toggle the panel.\n    if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n      return;\n    }\n    this._hoverSubscription = this._parentMaterialMenu._hovered()\n    // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n    // with different data and triggers), we have to delay it by a tick to ensure that\n    // it won't be closed immediately after it is opened.\n    .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler)).subscribe(() => {\n      this._openedBy = 'mouse';\n      // If the same menu is used between multiple triggers, it might still be animating\n      // while the new trigger tries to re-open it. Wait for the animation to finish\n      // before doing so. Also interrupt if the user moves to another item.\n      if (this.menu instanceof _MatMenuBase && this.menu._isAnimating) {\n        // We need the `delay(0)` here in order to avoid\n        // 'changed after checked' errors in some cases. See #12194.\n        this.menu._animationDone.pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered())).subscribe(() => this.openMenu());\n      } else {\n        this.openMenu();\n      }\n    });\n  }\n\n  /** Gets the portal that should be attached to the overlay. */\n  _getPortal(menu) {\n    // Note that we can avoid this check by keeping the portal on the menu panel.\n    // While it would be cleaner, we'd have to introduce another required method on\n    // `MatMenuPanel`, making it harder to consume.\n    if (!this._portal || this._portal.templateRef !== menu.templateRef) {\n      this._portal = new TemplatePortal(menu.templateRef, this._viewContainerRef);\n    }\n    return this._portal;\n  }\n  static #_ = this.ɵfac = function _MatMenuTriggerBase_Factory(t) {\n    return new (t || _MatMenuTriggerBase)(i0.ɵɵdirectiveInject(i1$1.Overlay), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8), i0.ɵɵdirectiveInject(MatMenuItem, 10), i0.ɵɵdirectiveInject(i3$1.Directionality, 8), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: _MatMenuTriggerBase,\n    hostVars: 3,\n    hostBindings: function _MatMenuTriggerBase_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function _MatMenuTriggerBase_click_HostBindingHandler($event) {\n          return ctx._handleClick($event);\n        })(\"mousedown\", function _MatMenuTriggerBase_mousedown_HostBindingHandler($event) {\n          return ctx._handleMousedown($event);\n        })(\"keydown\", function _MatMenuTriggerBase_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-haspopup\", ctx.menu ? \"menu\" : null)(\"aria-expanded\", ctx.menuOpen)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n      }\n    },\n    inputs: {\n      _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"],\n      menu: [\"matMenuTriggerFor\", \"menu\"],\n      menuData: [\"matMenuTriggerData\", \"menuData\"],\n      restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"]\n    },\n    outputs: {\n      menuOpened: \"menuOpened\",\n      onMenuOpen: \"onMenuOpen\",\n      menuClosed: \"menuClosed\",\n      onMenuClose: \"onMenuClose\"\n    }\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatMenuTriggerBase, [{\n    type: Directive,\n    args: [{\n      host: {\n        '[attr.aria-haspopup]': 'menu ? \"menu\" : null',\n        '[attr.aria-expanded]': 'menuOpen',\n        '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n        '(click)': '_handleClick($event)',\n        '(mousedown)': '_handleMousedown($event)',\n        '(keydown)': '_handleKeydown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1$1.Overlay\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_SCROLL_STRATEGY]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_PANEL]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: MatMenuItem,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }, {\n      type: i3$1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i1.FocusMonitor\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    _deprecatedMatMenuTriggerFor: [{\n      type: Input,\n      args: ['mat-menu-trigger-for']\n    }],\n    menu: [{\n      type: Input,\n      args: ['matMenuTriggerFor']\n    }],\n    menuData: [{\n      type: Input,\n      args: ['matMenuTriggerData']\n    }],\n    restoreFocus: [{\n      type: Input,\n      args: ['matMenuTriggerRestoreFocus']\n    }],\n    menuOpened: [{\n      type: Output\n    }],\n    onMenuOpen: [{\n      type: Output\n    }],\n    menuClosed: [{\n      type: Output\n    }],\n    onMenuClose: [{\n      type: Output\n    }]\n  });\n})();\n\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger extends _MatMenuTriggerBase {\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵMatMenuTrigger_BaseFactory;\n    return function MatMenuTrigger_Factory(t) {\n      return (ɵMatMenuTrigger_BaseFactory || (ɵMatMenuTrigger_BaseFactory = i0.ɵɵgetInheritedFactory(MatMenuTrigger)))(t || MatMenuTrigger);\n    };\n  }();\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatMenuTrigger,\n    selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-menu-trigger\"],\n    exportAs: [\"matMenuTrigger\"],\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMenuTrigger, [{\n    type: Directive,\n    args: [{\n      selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n      host: {\n        'class': 'mat-mdc-menu-trigger'\n      },\n      exportAs: 'matMenuTrigger'\n    }]\n  }], null, null);\n})();\nclass MatMenuModule {\n  static #_ = this.ɵfac = function MatMenuModule_Factory(t) {\n    return new (t || MatMenuModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatMenuModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    imports: [CommonModule, MatRippleModule, MatCommonModule, OverlayModule, CdkScrollableModule, MatCommonModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMenuModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatRippleModule, MatCommonModule, OverlayModule],\n      exports: [CdkScrollableModule, MatMenu, MatCommonModule, MatMenuItem, MatMenuContent, MatMenuTrigger],\n      declarations: [MatMenu, MatMenuItem, MatMenuContent, MatMenuTrigger],\n      providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER, MENU_PANEL_TOP_PADDING, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenuBase, _MatMenuContentBase, _MatMenuTriggerBase, fadeInItems, matMenuAnimations, transformMenu };","map":{"version":3,"names":["i0","InjectionToken","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Optional","Input","Directive","QueryList","EventEmitter","TemplateRef","ContentChildren","ViewChild","ContentChild","Output","inject","ChangeDetectorRef","Self","NgModule","i1","FocusKeyManager","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","coerceBooleanProperty","UP_ARROW","DOWN_ARROW","RIGHT_ARROW","LEFT_ARROW","ESCAPE","hasModifierKey","ENTER","SPACE","Subject","merge","Subscription","of","asapScheduler","startWith","switchMap","take","takeUntil","filter","delay","i3","mixinDisableRipple","mixinDisabled","MatRippleModule","MatCommonModule","i2","DOCUMENT","CommonModule","TemplatePortal","DomPortalOutlet","trigger","state","style","transition","animate","i3$1","i1$1","Overlay","OverlayConfig","OverlayModule","normalizePassiveListenerOptions","CdkScrollableModule","_c0","MatMenuItem__svg_svg_4_Template","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","_c1","_c2","MatMenu_ng_template_0_Template","_r2","ɵɵgetCurrentView","ɵɵlistener","MatMenu_ng_template_0_Template_div_keydown_0_listener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","_handleKeydown","MatMenu_ng_template_0_Template_div_click_0_listener","ctx_r3","closed","emit","MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener","ctx_r4","_onAnimationStart","MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener","ctx_r5","_onAnimationDone","ɵɵprojection","ctx_r0","ɵɵproperty","panelId","_classList","_panelAnimationState","ɵɵattribute","ariaLabel","ariaLabelledby","ariaDescribedby","_c3","MAT_MENU_PANEL","_MatMenuItemBase","MatMenuItem","constructor","_elementRef","_document","_focusMonitor","_parentMenu","_changeDetectorRef","role","_hovered","_focused","_highlighted","_triggersSubmenu","addItem","focus","origin","options","focusVia","_getHostElement","next","ngAfterViewInit","monitor","ngOnDestroy","stopMonitoring","removeItem","complete","_getTabIndex","disabled","nativeElement","_checkDisabled","event","preventDefault","stopPropagation","_handleMouseEnter","getLabel","clone","cloneNode","icons","querySelectorAll","i","length","remove","textContent","trim","_setHighlighted","isHighlighted","markForCheck","_setTriggersSubmenu","triggersSubmenu","_hasFocus","activeElement","_","ɵfac","MatMenuItem_Factory","t","ɵɵdirectiveInject","ElementRef","FocusMonitor","_2","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","MatMenuItem_HostBindings","MatMenuItem_click_HostBindingHandler","MatMenuItem_mouseenter_HostBindingHandler","ɵɵclassProp","inputs","disableRipple","exportAs","features","ɵɵInheritDefinitionFeature","attrs","ngContentSelectors","decls","vars","consts","template","MatMenuItem_Template","ɵɵprojectionDef","ɵɵtemplate","ɵɵadvance","dependencies","NgIf","MatRipple","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","host","OnPush","None","undefined","decorators","throwMatMenuInvalidPositionX","Error","throwMatMenuInvalidPositionY","throwMatMenuRecursiveError","MAT_MENU_CONTENT","_MatMenuContentBase","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_attached","attach","context","_portal","detach","_outlet","createElement","element","elementRef","parentNode","insertBefore","outletElement","isAttached","dispose","_MatMenuContentBase_Factory","ComponentFactoryResolver","ApplicationRef","Injector","ViewContainerRef","ɵdir","ɵɵdefineDirective","MatMenuContent","ɵMatMenuContent_BaseFactory","MatMenuContent_Factory","ɵɵgetInheritedFactory","ɵɵProvidersFeature","provide","useExisting","providers","matMenuAnimations","transformMenu","opacity","transform","fadeInItems","menuPanelUid","MAT_MENU_DEFAULT_OPTIONS","providedIn","factory","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","backdropClass","_MatMenuBase","_xPosition","value","setPositionClasses","_yPosition","_overlapTrigger","hasBackdrop","_hasBackdrop","panelClass","classes","previousPanelClass","_previousPanelClass","split","forEach","className","classList","_ngZone","defaultOptions","_directDescendantItems","_animationDone","close","overlayPanelClass","ngOnInit","ngAfterContentInit","_updateDirectDescendants","_keyManager","withWrap","withTypeAhead","withHomeAndEnd","tabOut","subscribe","changes","pipe","items","map","item","focusedItem","updateActiveItem","itemsList","manager","activeItem","toArray","index","Math","max","min","activeItemIndex","setActiveItem","setNextItemActive","destroy","_firstItemFocusSubscription","unsubscribe","itemChanges","_item","keyCode","parentMenu","direction","setFocusOrigin","onKeydown","focusFirstItem","onStable","menuPanel","first","closest","contains","document","setFirstItemActive","resetActiveItem","setElevation","depth","elevation","_baseElevation","newElevation","_elevationPrefix","customElevation","Object","keys","find","startsWith","_previousElevation","posX","posY","_startAnimation","_resetAnimation","_isAnimating","toState","scrollTop","_allItems","reset","notifyOnChanges","_MatMenuBase_Factory","NgZone","contentQueries","_MatMenuBase_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","lazyContent","viewQuery","_MatMenuBase_Query","ɵɵviewQuery","templateRef","outputs","descendants","MatMenu","_defaultOptions","changeDetectorRef","MatMenu_Factory","MatMenu_HostBindings","MatMenu_Template","NgClass","styles","data","animation","animations","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","passiveEventListenerOptions","passive","MENU_PANEL_TOP_PADDING","_MatMenuTriggerBase","_deprecatedMatMenuTriggerFor","menu","v","_menu","_menuCloseSubscription","_parentMaterialMenu","reason","_destroyMenu","_menuItemInstance","_overlay","_element","scrollStrategy","_dir","_overlayRef","_menuOpen","_closingActionsSubscription","EMPTY","_hoverSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","_scrollStrategy","addEventListener","_handleHover","removeEventListener","menuOpen","dir","toggleMenu","closeMenu","openMenu","overlayRef","_createOverlay","overlayConfig","getConfig","positionStrategy","_setPosition","_getPortal","menuData","_menuClosingActions","_initMenu","withLockedPosition","reapplyLastPosition","updatePosition","_setIsMenuOpen","_setMenuElevation","isOpen","config","_getOverlayConfig","_subscribeToPositions","create","keydownEvents","position","flexibleConnectedTo","withGrowAfterOpen","withTransformOriginOn","positionChanges","change","connectionPair","overlayX","overlayY","run","originX","originFallbackX","overlayFallbackY","originY","originFallbackY","overlayFallbackX","offsetY","_parentInnerPadding","firstItem","offsetTop","withPositions","backdrop","backdropClick","detachments","parentClose","hover","active","_handleMousedown","button","_handleClick","_MatMenuTriggerBase_Factory","Directionality","_MatMenuTriggerBase_HostBindings","_MatMenuTriggerBase_click_HostBindingHandler","_MatMenuTriggerBase_mousedown_HostBindingHandler","_MatMenuTriggerBase_keydown_HostBindingHandler","MatMenuTrigger","ɵMatMenuTrigger_BaseFactory","MatMenuTrigger_Factory","MatMenuModule","MatMenuModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/@angular/material/fesm2022/menu.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport {\n  InjectionToken,\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Inject,\n  Optional,\n  Input,\n  Directive,\n  QueryList,\n  EventEmitter,\n  TemplateRef,\n  ContentChildren,\n  ViewChild,\n  ContentChild,\n  Output,\n  inject,\n  ChangeDetectorRef,\n  Self,\n  NgModule\n} from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport {FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  UP_ARROW,\n  DOWN_ARROW,\n  RIGHT_ARROW,\n  LEFT_ARROW,\n  ESCAPE,\n  hasModifierKey,\n  ENTER,\n  SPACE\n} from '@angular/cdk/keycodes';\nimport {Subject, merge, Subscription, of, asapScheduler} from 'rxjs';\nimport {startWith, switchMap, take, takeUntil, filter, delay} from 'rxjs/operators';\nimport * as i3 from '@angular/material/core';\nimport {mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule} from '@angular/material/core';\nimport * as i2 from '@angular/common';\nimport {DOCUMENT, CommonModule} from '@angular/common';\nimport {TemplatePortal, DomPortalOutlet} from '@angular/cdk/portal';\nimport {trigger, state, style, transition, animate} from '@angular/animations';\nimport * as i3$1 from '@angular/cdk/bidi';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport {Overlay, OverlayConfig, OverlayModule} from '@angular/cdk/overlay';\nimport {normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\n\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nconst _MatMenuItemBase = mixinDisableRipple(mixinDisabled(class {\n}));\n\n/**\n * Single item inside a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemBase {\n  constructor(_elementRef, _document, _focusMonitor, _parentMenu, _changeDetectorRef) {\n    super();\n    this._elementRef = _elementRef;\n    this._document = _document;\n    this._focusMonitor = _focusMonitor;\n    this._parentMenu = _parentMenu;\n    this._changeDetectorRef = _changeDetectorRef;\n    /** ARIA role for the menu item. */\n    this.role = 'menuitem';\n    /** Stream that emits when the menu item is hovered. */\n    this._hovered = new Subject();\n    /** Stream that emits when the menu item is focused. */\n    this._focused = new Subject();\n    /** Whether the menu item is highlighted. */\n    this._highlighted = false;\n    /** Whether the menu item acts as a trigger for a sub-menu. */\n    this._triggersSubmenu = false;\n    _parentMenu?.addItem?.(this);\n  }\n\n  /** Focuses the menu item. */\n  focus(origin, options) {\n    if (this._focusMonitor && origin) {\n      this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    } else {\n      this._getHostElement().focus(options);\n    }\n    this._focused.next(this);\n  }\n\n  ngAfterViewInit() {\n    if (this._focusMonitor) {\n      // Start monitoring the element, so it gets the appropriate focused classes. We want\n      // to show the focus style for menu items only when the focus was not caused by a\n      // mouse or touch interaction.\n      this._focusMonitor.monitor(this._elementRef, false);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    if (this._parentMenu && this._parentMenu.removeItem) {\n      this._parentMenu.removeItem(this);\n    }\n    this._hovered.complete();\n    this._focused.complete();\n  }\n\n  /** Used to set the `tabindex`. */\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Returns the host DOM element. */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Prevents the default element actions if it is disabled. */\n  _checkDisabled(event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /** Emits to the hover stream. */\n  _handleMouseEnter() {\n    this._hovered.next(this);\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel() {\n    const clone = this._elementRef.nativeElement.cloneNode(true);\n    const icons = clone.querySelectorAll('mat-icon, .material-icons');\n    // Strip away icons, so they don't show up in the text.\n    for (let i = 0; i < icons.length; i++) {\n      icons[i].remove();\n    }\n    return clone.textContent?.trim() || '';\n  }\n\n  _setHighlighted(isHighlighted) {\n    // We need to mark this for check for the case where the content is coming from a\n    // `matMenuContent` whose change detection tree is at the declaration position,\n    // not the insertion position. See #23175.\n    // @breaking-change 12.0.0 Remove null check for `_changeDetectorRef`.\n    this._highlighted = isHighlighted;\n    this._changeDetectorRef?.markForCheck();\n  }\n\n  _setTriggersSubmenu(triggersSubmenu) {\n    // @breaking-change 12.0.0 Remove null check for `_changeDetectorRef`.\n    this._triggersSubmenu = triggersSubmenu;\n    this._changeDetectorRef?.markForCheck();\n  }\n\n  _hasFocus() {\n    return this._document && this._document.activeElement === this._getHostElement();\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatMenuItem,\n      deps: [{token: i0.ElementRef}, {token: DOCUMENT}, {token: i1.FocusMonitor}, {\n        token: MAT_MENU_PANEL,\n        optional: true\n      }, {token: i0.ChangeDetectorRef}],\n      target: i0.ɵɵFactoryTarget.Component\n    });\n  }\n  static {\n    this.ɵcmp = i0.ɵɵngDeclareComponent({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatMenuItem,\n      selector: \"[mat-menu-item]\",\n      inputs: {disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\"},\n      host: {\n        listeners: {\"click\": \"_checkDisabled($event)\", \"mouseenter\": \"_handleMouseEnter()\"},\n        properties: {\n          \"attr.role\": \"role\",\n          \"class.mat-mdc-menu-item-highlighted\": \"_highlighted\",\n          \"class.mat-mdc-menu-item-submenu-trigger\": \"_triggersSubmenu\",\n          \"attr.tabindex\": \"_getTabIndex()\",\n          \"attr.aria-disabled\": \"disabled\",\n          \"attr.disabled\": \"disabled || null\"\n        },\n        classAttribute: \"mat-mdc-menu-item mat-mdc-focus-indicator\"\n      },\n      exportAs: [\"matMenuItem\"],\n      usesInheritance: true,\n      ngImport: i0,\n      template: \"<ng-content select=\\\"mat-icon, [matMenuItemIcon]\\\"></ng-content>\\n<span class=\\\"mat-mdc-menu-item-text\\\"><ng-content></ng-content></span>\\n<div class=\\\"mat-mdc-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-mdc-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"\\n  aria-hidden=\\\"true\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\",\n      dependencies: [{\n        kind: \"directive\",\n        type: i2.NgIf,\n        selector: \"[ngIf]\",\n        inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"]\n      }, {\n        kind: \"directive\",\n        type: i3.MatRipple,\n        selector: \"[mat-ripple], [matRipple]\",\n        inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"],\n        exportAs: [\"matRipple\"]\n      }],\n      changeDetection: i0.ChangeDetectionStrategy.OnPush,\n      encapsulation: i0.ViewEncapsulation.None\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatMenuItem, decorators: [{\n    type: Component,\n    args: [{\n      selector: '[mat-menu-item]',\n      exportAs: 'matMenuItem',\n      inputs: ['disabled', 'disableRipple'],\n      host: {\n        '[attr.role]': 'role',\n        'class': 'mat-mdc-menu-item mat-mdc-focus-indicator',\n        '[class.mat-mdc-menu-item-highlighted]': '_highlighted',\n        '[class.mat-mdc-menu-item-submenu-trigger]': '_triggersSubmenu',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)',\n        '(mouseenter)': '_handleMouseEnter()',\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<ng-content select=\\\"mat-icon, [matMenuItemIcon]\\\"></ng-content>\\n<span class=\\\"mat-mdc-menu-item-text\\\"><ng-content></ng-content></span>\\n<div class=\\\"mat-mdc-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-mdc-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"\\n  aria-hidden=\\\"true\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\"\n    }]\n  }], ctorParameters: function () {\n    return [{type: i0.ElementRef}, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {type: i1.FocusMonitor}, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [MAT_MENU_PANEL]\n      }, {\n        type: Optional\n      }]\n    }, {type: i0.ChangeDetectorRef}];\n  }, propDecorators: {\n    role: [{\n      type: Input\n    }]\n  }\n});\n\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n  throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n  throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n  throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n    `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\n\nclass _MatMenuContentBase {\n  constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n    this._template = _template;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n    this._injector = _injector;\n    this._viewContainerRef = _viewContainerRef;\n    this._document = _document;\n    this._changeDetectorRef = _changeDetectorRef;\n    /** Emits when the menu content has been attached. */\n    this._attached = new Subject();\n  }\n\n  /**\n   * Attaches the content with a particular context.\n   * @docs-private\n   */\n  attach(context = {}) {\n    if (!this._portal) {\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n    }\n    this.detach();\n    if (!this._outlet) {\n      this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n    }\n    const element = this._template.elementRef.nativeElement;\n    // Because we support opening the same menu from different triggers (which in turn have their\n    // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n    // risk it staying attached to a pane that's no longer in the DOM.\n    element.parentNode.insertBefore(this._outlet.outletElement, element);\n    // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n    // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n    // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n    // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n    // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n    // @breaking-change 9.0.0 Make change detector ref required\n    this._changeDetectorRef?.markForCheck();\n    this._portal.attach(this._outlet, context);\n    this._attached.next();\n  }\n\n  /**\n   * Detaches the content.\n   * @docs-private\n   */\n  detach() {\n    if (this._portal.isAttached) {\n      this._portal.detach();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._outlet) {\n      this._outlet.dispose();\n    }\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: _MatMenuContentBase,\n      deps: [{token: i0.TemplateRef}, {token: i0.ComponentFactoryResolver}, {token: i0.ApplicationRef}, {token: i0.Injector}, {token: i0.ViewContainerRef}, {token: DOCUMENT}, {token: i0.ChangeDetectorRef}],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: _MatMenuContentBase,\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatMenuContentBase, decorators: [{\n    type: Directive\n  }], ctorParameters: function () {\n    return [{type: i0.TemplateRef}, {type: i0.ComponentFactoryResolver}, {type: i0.ApplicationRef}, {type: i0.Injector}, {type: i0.ViewContainerRef}, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {type: i0.ChangeDetectorRef}];\n  }\n});\n\n/** Menu content that will be rendered lazily once the menu is opened. */\nclass MatMenuContent extends _MatMenuContentBase {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatMenuContent,\n      deps: null,\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatMenuContent,\n      selector: \"ng-template[matMenuContent]\",\n      providers: [{provide: MAT_MENU_CONTENT, useExisting: MatMenuContent}],\n      usesInheritance: true,\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatMenuContent, decorators: [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matMenuContent]',\n      providers: [{provide: MAT_MENU_CONTENT, useExisting: MatMenuContent}],\n    }]\n  }]\n});\n\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nconst matMenuAnimations = {\n  /**\n   * This animation controls the menu panel's entry and exit from the page.\n   *\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\n   *\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\n   * delay to display the ripple.\n   */\n  transformMenu: trigger('transformMenu', [\n    state('void', style({\n      opacity: 0,\n      transform: 'scale(0.8)',\n    })),\n    transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n      opacity: 1,\n      transform: 'scale(1)',\n    }))),\n    transition('* => void', animate('100ms 25ms linear', style({opacity: 0}))),\n  ]),\n  /**\n   * This animation fades in the background color and content of the menu panel\n   * after its containing element is scaled in.\n   */\n  fadeInItems: trigger('fadeInItems', [\n    // TODO(crisbeto): this is inside the `transformMenu`\n    // now. Remove next time we do breaking changes.\n    state('showing', style({opacity: 1})),\n    transition('void => *', [\n      style({opacity: 0}),\n      animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n    ]),\n  ]),\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\nlet menuPanelUid = 0;\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n  providedIn: 'root',\n  factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY,\n});\n\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    overlapTrigger: false,\n    xPosition: 'after',\n    yPosition: 'below',\n    backdropClass: 'cdk-overlay-transparent-backdrop',\n  };\n}\n\n/** Base class with all of the `MatMenu` functionality. */\nclass _MatMenuBase {\n  /** Position of the menu in the X axis. */\n  get xPosition() {\n    return this._xPosition;\n  }\n\n  set xPosition(value) {\n    if (value !== 'before' &&\n      value !== 'after' &&\n      (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwMatMenuInvalidPositionX();\n    }\n    this._xPosition = value;\n    this.setPositionClasses();\n  }\n\n  /** Position of the menu in the Y axis. */\n  get yPosition() {\n    return this._yPosition;\n  }\n\n  set yPosition(value) {\n    if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwMatMenuInvalidPositionY();\n    }\n    this._yPosition = value;\n    this.setPositionClasses();\n  }\n\n  /** Whether the menu should overlap its trigger. */\n  get overlapTrigger() {\n    return this._overlapTrigger;\n  }\n\n  set overlapTrigger(value) {\n    this._overlapTrigger = coerceBooleanProperty(value);\n  }\n\n  /** Whether the menu has a backdrop. */\n  get hasBackdrop() {\n    return this._hasBackdrop;\n  }\n\n  set hasBackdrop(value) {\n    this._hasBackdrop = coerceBooleanProperty(value);\n  }\n\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @param classes list of class names\n   */\n  set panelClass(classes) {\n    const previousPanelClass = this._previousPanelClass;\n    if (previousPanelClass && previousPanelClass.length) {\n      previousPanelClass.split(' ').forEach((className) => {\n        this._classList[className] = false;\n      });\n    }\n    this._previousPanelClass = classes;\n    if (classes && classes.length) {\n      classes.split(' ').forEach((className) => {\n        this._classList[className] = true;\n      });\n      this._elementRef.nativeElement.className = '';\n    }\n  }\n\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @deprecated Use `panelClass` instead.\n   * @breaking-change 8.0.0\n   */\n  get classList() {\n    return this.panelClass;\n  }\n\n  set classList(classes) {\n    this.panelClass = classes;\n  }\n\n  constructor(_elementRef, _ngZone, defaultOptions,\n              // @breaking-change 15.0.0 `_changeDetectorRef` to become a required parameter.\n              _changeDetectorRef) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._changeDetectorRef = _changeDetectorRef;\n    /** Only the direct descendant menu items. */\n    this._directDescendantItems = new QueryList();\n    /** Config object to be passed into the menu's ngClass */\n    this._classList = {};\n    /** Current state of the panel animation. */\n    this._panelAnimationState = 'void';\n    /** Emits whenever an animation on the menu completes. */\n    this._animationDone = new Subject();\n    /** Event emitted when the menu is closed. */\n    this.closed = new EventEmitter();\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * @breaking-change 8.0.0\n     */\n    this.close = this.closed;\n    this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    this.overlayPanelClass = defaultOptions.overlayPanelClass || '';\n    this._xPosition = defaultOptions.xPosition;\n    this._yPosition = defaultOptions.yPosition;\n    this.backdropClass = defaultOptions.backdropClass;\n    this._overlapTrigger = defaultOptions.overlapTrigger;\n    this._hasBackdrop = defaultOptions.hasBackdrop;\n  }\n\n  ngOnInit() {\n    this.setPositionClasses();\n  }\n\n  ngAfterContentInit() {\n    this._updateDirectDescendants();\n    this._keyManager = new FocusKeyManager(this._directDescendantItems)\n      .withWrap()\n      .withTypeAhead()\n      .withHomeAndEnd();\n    this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n    // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n    // is internal and we know that it gets completed on destroy.\n    this._directDescendantItems.changes\n      .pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused))))\n      .subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n    this._directDescendantItems.changes.subscribe((itemsList) => {\n      // Move focus to another item, if the active item is removed from the list.\n      // We need to debounce the callback, because multiple items might be removed\n      // in quick succession.\n      const manager = this._keyManager;\n      if (this._panelAnimationState === 'enter' && manager.activeItem?._hasFocus()) {\n        const items = itemsList.toArray();\n        const index = Math.max(0, Math.min(items.length - 1, manager.activeItemIndex || 0));\n        if (items[index] && !items[index].disabled) {\n          manager.setActiveItem(index);\n        } else {\n          manager.setNextItemActive();\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._directDescendantItems.destroy();\n    this.closed.complete();\n    this._firstItemFocusSubscription?.unsubscribe();\n  }\n\n  /** Stream that emits whenever the hovered menu item changes. */\n  _hovered() {\n    // Coerce the `changes` property because Angular types it as `Observable<any>`\n    const itemChanges = this._directDescendantItems.changes;\n    return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n  }\n\n  /*\n   * Registers a menu item with the menu.\n   * @docs-private\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 9.0.0\n   */\n  addItem(_item) {\n  }\n\n  /**\n   * Removes an item from the menu.\n   * @docs-private\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 9.0.0\n   */\n  removeItem(_item) {\n  }\n\n  /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n  _handleKeydown(event) {\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n    switch (keyCode) {\n      case ESCAPE:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this.closed.emit('keydown');\n        }\n        break;\n      case LEFT_ARROW:\n        if (this.parentMenu && this.direction === 'ltr') {\n          this.closed.emit('keydown');\n        }\n        break;\n      case RIGHT_ARROW:\n        if (this.parentMenu && this.direction === 'rtl') {\n          this.closed.emit('keydown');\n        }\n        break;\n      default:\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n          manager.setFocusOrigin('keyboard');\n        }\n        manager.onKeydown(event);\n        return;\n    }\n    // Don't allow the event to propagate if we've already handled it, or it may\n    // end up reaching other overlays that were opened earlier (see #22694).\n    event.stopPropagation();\n  }\n\n  /**\n   * Focus the first item in the menu.\n   * @param origin Action from which the focus originated. Used to set the correct styling.\n   */\n  focusFirstItem(origin = 'program') {\n    // Wait for `onStable` to ensure iOS VoiceOver screen reader focuses the first item (#24735).\n    this._firstItemFocusSubscription?.unsubscribe();\n    this._firstItemFocusSubscription = this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      let menuPanel = null;\n      if (this._directDescendantItems.length) {\n        // Because the `mat-menuPanel` is at the DOM insertion point, not inside the overlay, we don't\n        // have a nice way of getting a hold of the menuPanel panel. We can't use a `ViewChild` either\n        // because the panel is inside an `ng-template`. We work around it by starting from one of\n        // the items and walking up the DOM.\n        menuPanel = this._directDescendantItems.first._getHostElement().closest('[role=\"menu\"]');\n      }\n      // If an item in the menuPanel is already focused, avoid overriding the focus.\n      if (!menuPanel || !menuPanel.contains(document.activeElement)) {\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menuPanel panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && menuPanel) {\n          menuPanel.focus();\n        }\n      }\n    });\n  }\n\n  /**\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\n   * the user to start from the first option when pressing the down arrow.\n   */\n  resetActiveItem() {\n    this._keyManager.setActiveItem(-1);\n  }\n\n  /**\n   * Sets the menu panel elevation.\n   * @param depth Number of parent menus that come before the menu.\n   */\n  setElevation(depth) {\n    // The elevation starts at the base and increases by one for each level.\n    // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n    const elevation = Math.min(this._baseElevation + depth, 24);\n    const newElevation = `${this._elevationPrefix}${elevation}`;\n    const customElevation = Object.keys(this._classList).find(className => {\n      return className.startsWith(this._elevationPrefix);\n    });\n    if (!customElevation || customElevation === this._previousElevation) {\n      if (this._previousElevation) {\n        this._classList[this._previousElevation] = false;\n      }\n      this._classList[newElevation] = true;\n      this._previousElevation = newElevation;\n    }\n  }\n\n  /**\n   * Adds classes to the menu panel based on its position. Can be used by\n   * consumers to add specific styling based on the position.\n   * @param posX Position of the menu along the x axis.\n   * @param posY Position of the menu along the y axis.\n   * @docs-private\n   */\n  setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n    const classes = this._classList;\n    classes['mat-menu-before'] = posX === 'before';\n    classes['mat-menu-after'] = posX === 'after';\n    classes['mat-menu-above'] = posY === 'above';\n    classes['mat-menu-below'] = posY === 'below';\n    // @breaking-change 15.0.0 Remove null check for `_changeDetectorRef`.\n    this._changeDetectorRef?.markForCheck();\n  }\n\n  /** Starts the enter animation. */\n  _startAnimation() {\n    // @breaking-change 8.0.0 Combine with _resetAnimation.\n    this._panelAnimationState = 'enter';\n  }\n\n  /** Resets the panel animation to its initial state. */\n  _resetAnimation() {\n    // @breaking-change 8.0.0 Combine with _startAnimation.\n    this._panelAnimationState = 'void';\n  }\n\n  /** Callback that is invoked when the panel animation completes. */\n  _onAnimationDone(event) {\n    this._animationDone.next(event);\n    this._isAnimating = false;\n  }\n\n  _onAnimationStart(event) {\n    this._isAnimating = true;\n    // Scroll the content element to the top as soon as the animation starts. This is necessary,\n    // because we move focus to the first item while it's still being animated, which can throw\n    // the browser off when it determines the scroll position. Alternatively we can move focus\n    // when the animation is done, however moving focus asynchronously will interrupt screen\n    // readers which are in the process of reading out the menu already. We take the `element`\n    // from the `event` since we can't use a `ViewChild` to access the pane.\n    if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n      event.element.scrollTop = 0;\n    }\n  }\n\n  /**\n   * Sets up a stream that will keep track of any newly-added menu items and will update the list\n   * of direct descendants. We collect the descendants this way, because `_allItems` can include\n   * items that are part of child menus, and using a custom way of registering items is unreliable\n   * when it comes to maintaining the item order.\n   */\n  _updateDirectDescendants() {\n    this._allItems.changes\n      .pipe(startWith(this._allItems))\n      .subscribe((items) => {\n        this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n        this._directDescendantItems.notifyOnChanges();\n      });\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: _MatMenuBase,\n      deps: [{token: i0.ElementRef}, {token: i0.NgZone}, {token: MAT_MENU_DEFAULT_OPTIONS}, {token: i0.ChangeDetectorRef}],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: _MatMenuBase,\n      inputs: {\n        backdropClass: \"backdropClass\",\n        ariaLabel: [\"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"],\n        ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"],\n        xPosition: \"xPosition\",\n        yPosition: \"yPosition\",\n        overlapTrigger: \"overlapTrigger\",\n        hasBackdrop: \"hasBackdrop\",\n        panelClass: [\"class\", \"panelClass\"],\n        classList: \"classList\"\n      },\n      outputs: {closed: \"closed\", close: \"close\"},\n      queries: [{\n        propertyName: \"lazyContent\",\n        first: true,\n        predicate: MAT_MENU_CONTENT,\n        descendants: true\n      }, {propertyName: \"_allItems\", predicate: MatMenuItem, descendants: true}, {\n        propertyName: \"items\",\n        predicate: MatMenuItem\n      }],\n      viewQueries: [{propertyName: \"templateRef\", first: true, predicate: TemplateRef, descendants: true}],\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatMenuBase, decorators: [{\n    type: Directive\n  }], ctorParameters: function () {\n    return [{type: i0.ElementRef}, {type: i0.NgZone}, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [MAT_MENU_DEFAULT_OPTIONS]\n      }]\n    }, {type: i0.ChangeDetectorRef}];\n  }, propDecorators: {\n    _allItems: [{\n      type: ContentChildren,\n      args: [MatMenuItem, {descendants: true}]\n    }], backdropClass: [{\n      type: Input\n    }], ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }], ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }], ariaDescribedby: [{\n      type: Input,\n      args: ['aria-describedby']\n    }], xPosition: [{\n      type: Input\n    }], yPosition: [{\n      type: Input\n    }], templateRef: [{\n      type: ViewChild,\n      args: [TemplateRef]\n    }], items: [{\n      type: ContentChildren,\n      args: [MatMenuItem, {descendants: false}]\n    }], lazyContent: [{\n      type: ContentChild,\n      args: [MAT_MENU_CONTENT]\n    }], overlapTrigger: [{\n      type: Input\n    }], hasBackdrop: [{\n      type: Input\n    }], panelClass: [{\n      type: Input,\n      args: ['class']\n    }], classList: [{\n      type: Input\n    }], closed: [{\n      type: Output\n    }], close: [{\n      type: Output\n    }]\n  }\n});\n\nclass MatMenu extends _MatMenuBase {\n  constructor(_elementRef, _ngZone, _defaultOptions, changeDetectorRef) {\n    super(_elementRef, _ngZone, _defaultOptions, changeDetectorRef);\n    this._elevationPrefix = 'mat-elevation-z';\n    this._baseElevation = 8;\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatMenu,\n      deps: [{token: i0.ElementRef}, {token: i0.NgZone}, {token: MAT_MENU_DEFAULT_OPTIONS}, {token: i0.ChangeDetectorRef}],\n      target: i0.ɵɵFactoryTarget.Component\n    });\n  }\n  static {\n    this.ɵcmp = i0.ɵɵngDeclareComponent({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatMenu,\n      selector: \"mat-menu\",\n      host: {\n        attributes: {\"ngSkipHydration\": \"\"},\n        properties: {\"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\"}\n      },\n      providers: [{provide: MAT_MENU_PANEL, useExisting: MatMenu}],\n      exportAs: [\"matMenu\"],\n      usesInheritance: true,\n      ngImport: i0,\n      template: \"<ng-template>\\n  <div\\n    class=\\\"mat-mdc-menu-panel mat-mdc-elevation-specific\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-mdc-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n      styles: [\"mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;list-style-type:none}.mat-mdc-menu-content:focus{outline:none}.mat-mdc-menu-content,.mat-mdc-menu-content .mat-mdc-menu-item .mat-mdc-menu-item-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;white-space:normal;font-family:var(--mat-menu-item-label-text-font);line-height:var(--mat-menu-item-label-text-line-height);font-size:var(--mat-menu-item-label-text-size);letter-spacing:var(--mat-menu-item-label-text-tracking);font-weight:var(--mat-menu-item-label-text-weight)}.mat-mdc-menu-panel{--mat-menu-container-shape:4px;min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;box-sizing:border-box;outline:0;border-radius:var(--mat-menu-container-shape);background-color:var(--mat-menu-container-color);will-change:transform,opacity}.mat-mdc-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-mdc-menu-panel{outline:solid 1px}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;align-items:center;min-height:48px}.mat-mdc-menu-item:focus{outline:none}[dir=rtl] .mat-mdc-menu-item,.mat-mdc-menu-item[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-menu-item::-moz-focus-inner{border:0}.mat-mdc-menu-item,.mat-mdc-menu-item:visited,.mat-mdc-menu-item:link{color:var(--mat-menu-item-label-text-color)}.mat-mdc-menu-item .mat-icon-no-color,.mat-mdc-menu-item .mat-mdc-menu-submenu-icon{color:var(--mat-menu-item-icon-color)}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item .mat-icon{margin-right:16px}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:16px}.mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-mdc-menu-item:not([disabled]):hover{background-color:var(--mat-menu-item-hover-state-layer-color)}.mat-mdc-menu-item:not([disabled]).cdk-program-focused,.mat-mdc-menu-item:not([disabled]).cdk-keyboard-focused,.mat-mdc-menu-item:not([disabled]).mat-mdc-menu-item-highlighted{background-color:var(--mat-menu-item-focus-state-layer-color)}.cdk-high-contrast-active .mat-mdc-menu-item{margin-top:1px}.mat-mdc-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-mdc-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-mdc-menu-submenu-icon{fill:CanvasText}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"],\n      dependencies: [{kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"]}],\n      animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems],\n      changeDetection: i0.ChangeDetectionStrategy.OnPush,\n      encapsulation: i0.ViewEncapsulation.None\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatMenu, decorators: [{\n    type: Component,\n    args: [{\n      selector: 'mat-menu',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matMenu',\n      host: {\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[attr.aria-describedby]': 'null',\n        'ngSkipHydration': '',\n      },\n      animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems],\n      providers: [{provide: MAT_MENU_PANEL, useExisting: MatMenu}],\n      template: \"<ng-template>\\n  <div\\n    class=\\\"mat-mdc-menu-panel mat-mdc-elevation-specific\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-mdc-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n      styles: [\"mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;list-style-type:none}.mat-mdc-menu-content:focus{outline:none}.mat-mdc-menu-content,.mat-mdc-menu-content .mat-mdc-menu-item .mat-mdc-menu-item-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;white-space:normal;font-family:var(--mat-menu-item-label-text-font);line-height:var(--mat-menu-item-label-text-line-height);font-size:var(--mat-menu-item-label-text-size);letter-spacing:var(--mat-menu-item-label-text-tracking);font-weight:var(--mat-menu-item-label-text-weight)}.mat-mdc-menu-panel{--mat-menu-container-shape:4px;min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;box-sizing:border-box;outline:0;border-radius:var(--mat-menu-container-shape);background-color:var(--mat-menu-container-color);will-change:transform,opacity}.mat-mdc-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-mdc-menu-panel{outline:solid 1px}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;align-items:center;min-height:48px}.mat-mdc-menu-item:focus{outline:none}[dir=rtl] .mat-mdc-menu-item,.mat-mdc-menu-item[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-menu-item::-moz-focus-inner{border:0}.mat-mdc-menu-item,.mat-mdc-menu-item:visited,.mat-mdc-menu-item:link{color:var(--mat-menu-item-label-text-color)}.mat-mdc-menu-item .mat-icon-no-color,.mat-mdc-menu-item .mat-mdc-menu-submenu-icon{color:var(--mat-menu-item-icon-color)}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item .mat-icon{margin-right:16px}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:16px}.mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-mdc-menu-item.mat-mdc-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-mdc-menu-item:not([disabled]):hover{background-color:var(--mat-menu-item-hover-state-layer-color)}.mat-mdc-menu-item:not([disabled]).cdk-program-focused,.mat-mdc-menu-item:not([disabled]).cdk-keyboard-focused,.mat-mdc-menu-item:not([disabled]).mat-mdc-menu-item-highlighted{background-color:var(--mat-menu-item-focus-state-layer-color)}.cdk-high-contrast-active .mat-mdc-menu-item{margin-top:1px}.mat-mdc-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-mdc-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-mdc-menu-submenu-icon{fill:CanvasText}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"]\n    }]\n  }], ctorParameters: function () {\n    return [{type: i0.ElementRef}, {type: i0.NgZone}, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [MAT_MENU_DEFAULT_OPTIONS]\n      }]\n    }, {type: i0.ChangeDetectorRef}];\n  }\n});\n\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({passive: true});\n/**\n * Default top padding of the menu panel.\n * @deprecated No longer being used. Will be removed.\n * @breaking-change 15.0.0\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n\nclass _MatMenuTriggerBase {\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0\n   */\n  get _deprecatedMatMenuTriggerFor() {\n    return this.menu;\n  }\n\n  set _deprecatedMatMenuTriggerFor(v) {\n    this.menu = v;\n  }\n\n  /** References the menu instance that the trigger is associated with. */\n  get menu() {\n    return this._menu;\n  }\n\n  set menu(menu) {\n    if (menu === this._menu) {\n      return;\n    }\n    this._menu = menu;\n    this._menuCloseSubscription.unsubscribe();\n    if (menu) {\n      if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwMatMenuRecursiveError();\n      }\n      this._menuCloseSubscription = menu.close.subscribe((reason) => {\n        this._destroyMenu(reason);\n        // If a click closed the menu, we should close the entire chain of nested menus.\n        if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n          this._parentMaterialMenu.closed.emit(reason);\n        }\n      });\n    }\n    this._menuItemInstance?._setTriggersSubmenu(this.triggersSubmenu());\n  }\n\n  constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu,\n              // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n              // tslint:disable-next-line: lightweight-tokens\n              _menuItemInstance, _dir, _focusMonitor, _ngZone) {\n    this._overlay = _overlay;\n    this._element = _element;\n    this._viewContainerRef = _viewContainerRef;\n    this._menuItemInstance = _menuItemInstance;\n    this._dir = _dir;\n    this._focusMonitor = _focusMonitor;\n    this._ngZone = _ngZone;\n    this._overlayRef = null;\n    this._menuOpen = false;\n    this._closingActionsSubscription = Subscription.EMPTY;\n    this._hoverSubscription = Subscription.EMPTY;\n    this._menuCloseSubscription = Subscription.EMPTY;\n    this._changeDetectorRef = inject(ChangeDetectorRef);\n    /**\n     * Handles touch start events on the trigger.\n     * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n     */\n    this._handleTouchStart = (event) => {\n      if (!isFakeTouchstartFromScreenReader(event)) {\n        this._openedBy = 'touch';\n      }\n    };\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the menu is opened via the keyboard\n    this._openedBy = undefined;\n    /**\n     * Whether focus should be restored when the menu is closed.\n     * Note that disabling this option can have accessibility implications\n     * and it's up to you to manage focus, if you decide to turn it off.\n     */\n    this.restoreFocus = true;\n    /** Event emitted when the associated menu is opened. */\n    this.menuOpened = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * @breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onMenuOpen = this.menuOpened;\n    /** Event emitted when the associated menu is closed. */\n    this.menuClosed = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * @breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onMenuClose = this.menuClosed;\n    this._scrollStrategy = scrollStrategy;\n    this._parentMaterialMenu = parentMenu instanceof _MatMenuBase ? parentMenu : undefined;\n    _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n  }\n\n  ngAfterContentInit() {\n    this._handleHover();\n  }\n\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n    this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n    this._menuCloseSubscription.unsubscribe();\n    this._closingActionsSubscription.unsubscribe();\n    this._hoverSubscription.unsubscribe();\n  }\n\n  /** Whether the menu is open. */\n  get menuOpen() {\n    return this._menuOpen;\n  }\n\n  /** The text direction of the containing app. */\n  get dir() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the menu triggers a sub-menu or a top-level one. */\n  triggersSubmenu() {\n    return !!(this._menuItemInstance && this._parentMaterialMenu && this.menu);\n  }\n\n  /** Toggles the menu between the open and closed states. */\n  toggleMenu() {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n\n  /** Opens the menu. */\n  openMenu() {\n    const menu = this.menu;\n    if (this._menuOpen || !menu) {\n      return;\n    }\n    const overlayRef = this._createOverlay(menu);\n    const overlayConfig = overlayRef.getConfig();\n    const positionStrategy = overlayConfig.positionStrategy;\n    this._setPosition(menu, positionStrategy);\n    overlayConfig.hasBackdrop =\n      menu.hasBackdrop == null ? !this.triggersSubmenu() : menu.hasBackdrop;\n    overlayRef.attach(this._getPortal(menu));\n    if (menu.lazyContent) {\n      menu.lazyContent.attach(this.menuData);\n    }\n    this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n    this._initMenu(menu);\n    if (menu instanceof _MatMenuBase) {\n      menu._startAnimation();\n      menu._directDescendantItems.changes.pipe(takeUntil(menu.close)).subscribe(() => {\n        // Re-adjust the position without locking when the amount of items\n        // changes so that the overlay is allowed to pick a new optimal position.\n        positionStrategy.withLockedPosition(false).reapplyLastPosition();\n        positionStrategy.withLockedPosition(true);\n      });\n    }\n  }\n\n  /** Closes the menu. */\n  closeMenu() {\n    this.menu?.close.emit();\n  }\n\n  /**\n   * Focuses the menu trigger.\n   * @param origin Source of the menu trigger's focus.\n   */\n  focus(origin, options) {\n    if (this._focusMonitor && origin) {\n      this._focusMonitor.focusVia(this._element, origin, options);\n    } else {\n      this._element.nativeElement.focus(options);\n    }\n  }\n\n  /**\n   * Updates the position of the menu to ensure that it fits all options within the viewport.\n   */\n  updatePosition() {\n    this._overlayRef?.updatePosition();\n  }\n\n  /** Closes the menu and does the necessary cleanup. */\n  _destroyMenu(reason) {\n    if (!this._overlayRef || !this.menuOpen) {\n      return;\n    }\n    const menu = this.menu;\n    this._closingActionsSubscription.unsubscribe();\n    this._overlayRef.detach();\n    // Always restore focus if the user is navigating using the keyboard or the menu was opened\n    // programmatically. We don't restore for non-root triggers, because it can prevent focus\n    // from making it back to the root trigger when closing a long chain of menus by clicking\n    // on the backdrop.\n    if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n      this.focus(this._openedBy);\n    }\n    this._openedBy = undefined;\n    if (menu instanceof _MatMenuBase) {\n      menu._resetAnimation();\n      if (menu.lazyContent) {\n        // Wait for the exit animation to finish before detaching the content.\n        menu._animationDone\n          .pipe(filter(event => event.toState === 'void'), take(1),\n            // Interrupt if the content got re-attached.\n            takeUntil(menu.lazyContent._attached))\n          .subscribe({\n            next: () => menu.lazyContent.detach(),\n            // No matter whether the content got re-attached, reset the menu.\n            complete: () => this._setIsMenuOpen(false),\n          });\n      } else {\n        this._setIsMenuOpen(false);\n      }\n    } else {\n      this._setIsMenuOpen(false);\n      menu?.lazyContent?.detach();\n    }\n  }\n\n  /**\n   * This method sets the menu state to open and focuses the first item if\n   * the menu was opened via the keyboard.\n   */\n  _initMenu(menu) {\n    menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n    menu.direction = this.dir;\n    this._setMenuElevation(menu);\n    menu.focusFirstItem(this._openedBy || 'program');\n    this._setIsMenuOpen(true);\n  }\n\n  /** Updates the menu elevation based on the amount of parent menus that it has. */\n  _setMenuElevation(menu) {\n    if (menu.setElevation) {\n      let depth = 0;\n      let parentMenu = menu.parentMenu;\n      while (parentMenu) {\n        depth++;\n        parentMenu = parentMenu.parentMenu;\n      }\n      menu.setElevation(depth);\n    }\n  }\n\n  // set state rather than toggle to support triggers sharing a menu\n  _setIsMenuOpen(isOpen) {\n    if (isOpen !== this._menuOpen) {\n      this._menuOpen = isOpen;\n      this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n      if (this.triggersSubmenu()) {\n        this._menuItemInstance._setHighlighted(isOpen);\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * This method creates the overlay from the provided menu's template and saves its\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\n   */\n  _createOverlay(menu) {\n    if (!this._overlayRef) {\n      const config = this._getOverlayConfig(menu);\n      this._subscribeToPositions(menu, config.positionStrategy);\n      this._overlayRef = this._overlay.create(config);\n      // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n      // Ideally we'd also have our keyboard event logic in here, however doing so will\n      // break anybody that may have implemented the `MatMenuPanel` themselves.\n      this._overlayRef.keydownEvents().subscribe();\n    }\n    return this._overlayRef;\n  }\n\n  /**\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\n   * @returns OverlayConfig\n   */\n  _getOverlayConfig(menu) {\n    return new OverlayConfig({\n      positionStrategy: this._overlay\n        .position()\n        .flexibleConnectedTo(this._element)\n        .withLockedPosition()\n        .withGrowAfterOpen()\n        .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n      backdropClass: menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n      panelClass: menu.overlayPanelClass,\n      scrollStrategy: this._scrollStrategy(),\n      direction: this._dir,\n    });\n  }\n\n  /**\n   * Listens to changes in the position of the overlay and sets the correct classes\n   * on the menu based on the new position. This ensures the animation origin is always\n   * correct, even if a fallback position is used for the overlay.\n   */\n  _subscribeToPositions(menu, position) {\n    if (menu.setPositionClasses) {\n      position.positionChanges.subscribe(change => {\n        const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n        const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n        // @breaking-change 15.0.0 Remove null check for `ngZone`.\n        // `positionChanges` fires outside of the `ngZone` and `setPositionClasses` might be\n        // updating something in the view so we need to bring it back in.\n        if (this._ngZone) {\n          this._ngZone.run(() => menu.setPositionClasses(posX, posY));\n        } else {\n          menu.setPositionClasses(posX, posY);\n        }\n      });\n    }\n  }\n\n  /**\n   * Sets the appropriate positions on a position strategy\n   * so the overlay connects with the trigger correctly.\n   * @param positionStrategy Strategy whose position to update.\n   */\n  _setPosition(menu, positionStrategy) {\n    let [originX, originFallbackX] = menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n    let [overlayY, overlayFallbackY] = menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    let offsetY = 0;\n    if (this.triggersSubmenu()) {\n      // When the menu is a sub-menu, it should always align itself\n      // to the edges of the trigger, instead of overlapping it.\n      overlayFallbackX = originX = menu.xPosition === 'before' ? 'start' : 'end';\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n      if (this._parentMaterialMenu) {\n        if (this._parentInnerPadding == null) {\n          const firstItem = this._parentMaterialMenu.items.first;\n          this._parentInnerPadding = firstItem ? firstItem._getHostElement().offsetTop : 0;\n        }\n        offsetY = overlayY === 'bottom' ? this._parentInnerPadding : -this._parentInnerPadding;\n      }\n    } else if (!menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n    positionStrategy.withPositions([\n      {originX, originY, overlayX, overlayY, offsetY},\n      {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n      {\n        originX,\n        originY: originFallbackY,\n        overlayX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY,\n      },\n      {\n        originX: originFallbackX,\n        originY: originFallbackY,\n        overlayX: overlayFallbackX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY,\n      },\n    ]);\n  }\n\n  /** Returns a stream that emits whenever an action that should close the menu occurs. */\n  _menuClosingActions() {\n    const backdrop = this._overlayRef.backdropClick();\n    const detachments = this._overlayRef.detachments();\n    const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n    const hover = this._parentMaterialMenu\n      ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen))\n      : of();\n    return merge(backdrop, parentClose, hover, detachments);\n  }\n\n  /** Handles mouse presses on the trigger. */\n  _handleMousedown(event) {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      // Since right or middle button clicks won't trigger the `click` event,\n      // we shouldn't consider the menu as opened by mouse in those cases.\n      this._openedBy = event.button === 0 ? 'mouse' : undefined;\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n      // we should prevent focus from moving onto it via click to avoid the\n      // highlight from lingering on the menu item.\n      if (this.triggersSubmenu()) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  /** Handles key presses on the trigger. */\n  _handleKeydown(event) {\n    const keyCode = event.keyCode;\n    // Pressing enter on the trigger will trigger the click handler later.\n    if (keyCode === ENTER || keyCode === SPACE) {\n      this._openedBy = 'keyboard';\n    }\n    if (this.triggersSubmenu() &&\n      ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n        (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n      this._openedBy = 'keyboard';\n      this.openMenu();\n    }\n  }\n\n  /** Handles click events on the trigger. */\n  _handleClick(event) {\n    if (this.triggersSubmenu()) {\n      // Stop event propagation to avoid closing the parent menu.\n      event.stopPropagation();\n      this.openMenu();\n    } else {\n      this.toggleMenu();\n    }\n  }\n\n  /** Handles the cases where the user hovers over the trigger. */\n  _handleHover() {\n    // Subscribe to changes in the hovered item in order to toggle the panel.\n    if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n      return;\n    }\n    this._hoverSubscription = this._parentMaterialMenu\n      ._hovered()\n      // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n      // with different data and triggers), we have to delay it by a tick to ensure that\n      // it won't be closed immediately after it is opened.\n      .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n      .subscribe(() => {\n        this._openedBy = 'mouse';\n        // If the same menu is used between multiple triggers, it might still be animating\n        // while the new trigger tries to re-open it. Wait for the animation to finish\n        // before doing so. Also interrupt if the user moves to another item.\n        if (this.menu instanceof _MatMenuBase && this.menu._isAnimating) {\n          // We need the `delay(0)` here in order to avoid\n          // 'changed after checked' errors in some cases. See #12194.\n          this.menu._animationDone\n            .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered()))\n            .subscribe(() => this.openMenu());\n        } else {\n          this.openMenu();\n        }\n      });\n  }\n\n  /** Gets the portal that should be attached to the overlay. */\n  _getPortal(menu) {\n    // Note that we can avoid this check by keeping the portal on the menu panel.\n    // While it would be cleaner, we'd have to introduce another required method on\n    // `MatMenuPanel`, making it harder to consume.\n    if (!this._portal || this._portal.templateRef !== menu.templateRef) {\n      this._portal = new TemplatePortal(menu.templateRef, this._viewContainerRef);\n    }\n    return this._portal;\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: _MatMenuTriggerBase,\n      deps: [{token: i1$1.Overlay}, {token: i0.ElementRef}, {token: i0.ViewContainerRef}, {token: MAT_MENU_SCROLL_STRATEGY}, {\n        token: MAT_MENU_PANEL,\n        optional: true\n      }, {token: MatMenuItem, optional: true, self: true}, {\n        token: i3$1.Directionality,\n        optional: true\n      }, {token: i1.FocusMonitor}, {token: i0.NgZone}],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: _MatMenuTriggerBase,\n      inputs: {\n        _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"],\n        menu: [\"matMenuTriggerFor\", \"menu\"],\n        menuData: [\"matMenuTriggerData\", \"menuData\"],\n        restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"]\n      },\n      outputs: {\n        menuOpened: \"menuOpened\",\n        onMenuOpen: \"onMenuOpen\",\n        menuClosed: \"menuClosed\",\n        onMenuClose: \"onMenuClose\"\n      },\n      host: {\n        listeners: {\n          \"click\": \"_handleClick($event)\",\n          \"mousedown\": \"_handleMousedown($event)\",\n          \"keydown\": \"_handleKeydown($event)\"\n        },\n        properties: {\n          \"attr.aria-haspopup\": \"menu ? \\\"menu\\\" : null\",\n          \"attr.aria-expanded\": \"menuOpen\",\n          \"attr.aria-controls\": \"menuOpen ? menu.panelId : null\"\n        }\n      },\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatMenuTriggerBase, decorators: [{\n    type: Directive,\n    args: [{\n      host: {\n        '[attr.aria-haspopup]': 'menu ? \"menu\" : null',\n        '[attr.aria-expanded]': 'menuOpen',\n        '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n        '(click)': '_handleClick($event)',\n        '(mousedown)': '_handleMousedown($event)',\n        '(keydown)': '_handleKeydown($event)',\n      },\n    }]\n  }], ctorParameters: function () {\n    return [{type: i1$1.Overlay}, {type: i0.ElementRef}, {type: i0.ViewContainerRef}, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [MAT_MENU_SCROLL_STRATEGY]\n      }]\n    }, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [MAT_MENU_PANEL]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: MatMenuItem, decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }, {\n      type: i3$1.Directionality, decorators: [{\n        type: Optional\n      }]\n    }, {type: i1.FocusMonitor}, {type: i0.NgZone}];\n  }, propDecorators: {\n    _deprecatedMatMenuTriggerFor: [{\n      type: Input,\n      args: ['mat-menu-trigger-for']\n    }], menu: [{\n      type: Input,\n      args: ['matMenuTriggerFor']\n    }], menuData: [{\n      type: Input,\n      args: ['matMenuTriggerData']\n    }], restoreFocus: [{\n      type: Input,\n      args: ['matMenuTriggerRestoreFocus']\n    }], menuOpened: [{\n      type: Output\n    }], onMenuOpen: [{\n      type: Output\n    }], menuClosed: [{\n      type: Output\n    }], onMenuClose: [{\n      type: Output\n    }]\n  }\n});\n\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger extends _MatMenuTriggerBase {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatMenuTrigger,\n      deps: null,\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatMenuTrigger,\n      selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\",\n      host: {classAttribute: \"mat-mdc-menu-trigger\"},\n      exportAs: [\"matMenuTrigger\"],\n      usesInheritance: true,\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatMenuTrigger, decorators: [{\n    type: Directive,\n    args: [{\n      selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n      host: {\n        'class': 'mat-mdc-menu-trigger',\n      },\n      exportAs: 'matMenuTrigger',\n    }]\n  }]\n});\n\nclass MatMenuModule {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatMenuModule,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.NgModule\n    });\n  }\n  static {\n    this.ɵmod = i0.ɵɵngDeclareNgModule({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatMenuModule,\n      declarations: [MatMenu, MatMenuItem, MatMenuContent, MatMenuTrigger],\n      imports: [CommonModule, MatRippleModule, MatCommonModule, OverlayModule],\n      exports: [CdkScrollableModule,\n        MatMenu,\n        MatCommonModule,\n        MatMenuItem,\n        MatMenuContent,\n        MatMenuTrigger]\n    });\n  }\n  static {\n    this.ɵinj = i0.ɵɵngDeclareInjector({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatMenuModule,\n      providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n      imports: [CommonModule, MatRippleModule, MatCommonModule, OverlayModule, CdkScrollableModule,\n        MatCommonModule]\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatMenuModule, decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatRippleModule, MatCommonModule, OverlayModule],\n      exports: [\n        CdkScrollableModule,\n        MatMenu,\n        MatCommonModule,\n        MatMenuItem,\n        MatMenuContent,\n        MatMenuTrigger,\n      ],\n      declarations: [MatMenu, MatMenuItem, MatMenuContent, MatMenuTrigger],\n      providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    }]\n  }]\n});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport {\n  MAT_MENU_CONTENT,\n  MAT_MENU_DEFAULT_OPTIONS,\n  MAT_MENU_PANEL,\n  MAT_MENU_SCROLL_STRATEGY,\n  MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  MENU_PANEL_TOP_PADDING,\n  MatMenu,\n  MatMenuContent,\n  MatMenuItem,\n  MatMenuModule,\n  MatMenuTrigger,\n  _MatMenuBase,\n  _MatMenuContentBase,\n  _MatMenuTriggerBase,\n  fadeInItems,\n  matMenuAnimations,\n  transformMenu\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}