{"ast":null,"code":"import { __asyncValues, __awaiter } from \"tslib\";\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function innerFrom(input) {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\nexport function fromInteropObservable(obj) {\n  return new Observable(subscriber => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\nexport function fromArrayLike(array) {\n  return new Observable(subscriber => {\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\nexport function fromPromise(promise) {\n  return new Observable(subscriber => {\n    promise.then(value => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    }, err => subscriber.error(err)).then(null, reportUnhandledError);\n  });\n}\nexport function fromIterable(iterable) {\n  return new Observable(subscriber => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\nexport function fromAsyncIterable(asyncIterable) {\n  return new Observable(subscriber => {\n    process(asyncIterable, subscriber).catch(err => subscriber.error(err));\n  });\n}\nexport function fromReadableStreamLike(readableStream) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\nfunction process(asyncIterable, subscriber) {\n  var asyncIterable_1, asyncIterable_1_1;\n  var e_1, _a;\n  return __awaiter(this, void 0, void 0, function* () {\n    try {\n      for (asyncIterable_1 = __asyncValues(asyncIterable); asyncIterable_1_1 = yield asyncIterable_1.next(), !asyncIterable_1_1.done;) {\n        const value = asyncIterable_1_1.value;\n        subscriber.next(value);\n        if (subscriber.closed) {\n          return;\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return)) yield _a.call(asyncIterable_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    subscriber.complete();\n  });\n}","map":{"version":3,"names":["__asyncValues","__awaiter","isArrayLike","isPromise","Observable","isInteropObservable","isAsyncIterable","createInvalidObservableTypeError","isIterable","isReadableStreamLike","readableStreamLikeToAsyncGenerator","isFunction","reportUnhandledError","observable","Symbol_observable","innerFrom","input","fromInteropObservable","fromArrayLike","fromPromise","fromAsyncIterable","fromIterable","fromReadableStreamLike","obj","subscriber","obs","subscribe","TypeError","array","i","length","closed","next","complete","promise","then","value","err","error","iterable","asyncIterable","process","catch","readableStream","asyncIterable_1","asyncIterable_1_1","e_1","_a","done","e_1_1","return","call"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/rxjs/dist/esm/internal/observable/innerFrom.js"],"sourcesContent":["import {__asyncValues, __awaiter} from \"tslib\";\nimport {isArrayLike} from '../util/isArrayLike';\nimport {isPromise} from '../util/isPromise';\nimport {Observable} from '../Observable';\nimport {isInteropObservable} from '../util/isInteropObservable';\nimport {isAsyncIterable} from '../util/isAsyncIterable';\nimport {createInvalidObservableTypeError} from '../util/throwUnobservableError';\nimport {isIterable} from '../util/isIterable';\nimport {isReadableStreamLike, readableStreamLikeToAsyncGenerator} from '../util/isReadableStreamLike';\nimport {isFunction} from '../util/isFunction';\nimport {reportUnhandledError} from '../util/reportUnhandledError';\nimport {observable as Symbol_observable} from '../symbol/observable';\n\nexport function innerFrom(input) {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n\nexport function fromInteropObservable(obj) {\n  return new Observable((subscriber) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\nexport function fromArrayLike(array) {\n  return new Observable((subscriber) => {\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise(promise) {\n  return new Observable((subscriber) => {\n    promise\n      .then((value) => {\n        if (!subscriber.closed) {\n          subscriber.next(value);\n          subscriber.complete();\n        }\n      }, (err) => subscriber.error(err))\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable(iterable) {\n  return new Observable((subscriber) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable(asyncIterable) {\n  return new Observable((subscriber) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike(readableStream) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nfunction process(asyncIterable, subscriber) {\n  var asyncIterable_1, asyncIterable_1_1;\n  var e_1, _a;\n  return __awaiter(this, void 0, void 0, function* () {\n    try {\n      for (asyncIterable_1 = __asyncValues(asyncIterable); asyncIterable_1_1 = yield asyncIterable_1.next(), !asyncIterable_1_1.done;) {\n        const value = asyncIterable_1_1.value;\n        subscriber.next(value);\n        if (subscriber.closed) {\n          return;\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {error: e_1_1};\n    } finally {\n      try {\n        if (asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return)) yield _a.call(asyncIterable_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}