{"ast":null,"code":"import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { identity } from '../util/identity';\nimport { noop } from '../util/noop';\nimport { popResultSelector } from '../util/args';\nexport function withLatestFrom(...inputs) {\n  const project = popResultSelector(inputs);\n  return operate((source, subscriber) => {\n    const len = inputs.length;\n    const otherValues = new Array(len);\n    let hasValue = inputs.map(() => false);\n    let ready = false;\n    for (let i = 0; i < len; i++) {\n      innerFrom(inputs[i]).subscribe(createOperatorSubscriber(subscriber, value => {\n        otherValues[i] = value;\n        if (!ready && !hasValue[i]) {\n          hasValue[i] = true;\n          (ready = hasValue.every(identity)) && (hasValue = null);\n        }\n      }, noop));\n    }\n    source.subscribe(createOperatorSubscriber(subscriber, value => {\n      if (ready) {\n        const values = [value, ...otherValues];\n        subscriber.next(project ? project(...values) : values);\n      }\n    }));\n  });\n}","map":{"version":3,"names":["operate","createOperatorSubscriber","innerFrom","identity","noop","popResultSelector","withLatestFrom","inputs","project","source","subscriber","len","length","otherValues","Array","hasValue","map","ready","i","subscribe","value","every","values","next"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/rxjs/dist/esm/internal/operators/withLatestFrom.js"],"sourcesContent":["import {operate} from '../util/lift';\nimport {createOperatorSubscriber} from './OperatorSubscriber';\nimport {innerFrom} from '../observable/innerFrom';\nimport {identity} from '../util/identity';\nimport {noop} from '../util/noop';\nimport {popResultSelector} from '../util/args';\n\nexport function withLatestFrom(...inputs) {\n  const project = popResultSelector(inputs);\n  return operate((source, subscriber) => {\n    const len = inputs.length;\n    const otherValues = new Array(len);\n    let hasValue = inputs.map(() => false);\n    let ready = false;\n    for (let i = 0; i < len; i++) {\n      innerFrom(inputs[i]).subscribe(createOperatorSubscriber(subscriber, (value) => {\n        otherValues[i] = value;\n        if (!ready && !hasValue[i]) {\n          hasValue[i] = true;\n          (ready = hasValue.every(identity)) && (hasValue = null);\n        }\n      }, noop));\n    }\n    source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n      if (ready) {\n        const values = [value, ...otherValues];\n        subscriber.next(project ? project(...values) : values);\n      }\n    }));\n  });\n}\n\n"],"mappings":"AAAA,SAAQA,OAAO,QAAO,cAAc;AACpC,SAAQC,wBAAwB,QAAO,sBAAsB;AAC7D,SAAQC,SAAS,QAAO,yBAAyB;AACjD,SAAQC,QAAQ,QAAO,kBAAkB;AACzC,SAAQC,IAAI,QAAO,cAAc;AACjC,SAAQC,iBAAiB,QAAO,cAAc;AAE9C,OAAO,SAASC,cAAcA,CAAC,GAAGC,MAAM,EAAE;EACxC,MAAMC,OAAO,GAAGH,iBAAiB,CAACE,MAAM,CAAC;EACzC,OAAOP,OAAO,CAAC,CAACS,MAAM,EAAEC,UAAU,KAAK;IACrC,MAAMC,GAAG,GAAGJ,MAAM,CAACK,MAAM;IACzB,MAAMC,WAAW,GAAG,IAAIC,KAAK,CAACH,GAAG,CAAC;IAClC,IAAII,QAAQ,GAAGR,MAAM,CAACS,GAAG,CAAC,MAAM,KAAK,CAAC;IACtC,IAAIC,KAAK,GAAG,KAAK;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,GAAG,EAAEO,CAAC,EAAE,EAAE;MAC5BhB,SAAS,CAACK,MAAM,CAACW,CAAC,CAAC,CAAC,CAACC,SAAS,CAAClB,wBAAwB,CAACS,UAAU,EAAGU,KAAK,IAAK;QAC7EP,WAAW,CAACK,CAAC,CAAC,GAAGE,KAAK;QACtB,IAAI,CAACH,KAAK,IAAI,CAACF,QAAQ,CAACG,CAAC,CAAC,EAAE;UAC1BH,QAAQ,CAACG,CAAC,CAAC,GAAG,IAAI;UAClB,CAACD,KAAK,GAAGF,QAAQ,CAACM,KAAK,CAAClB,QAAQ,CAAC,MAAMY,QAAQ,GAAG,IAAI,CAAC;QACzD;MACF,CAAC,EAAEX,IAAI,CAAC,CAAC;IACX;IACAK,MAAM,CAACU,SAAS,CAAClB,wBAAwB,CAACS,UAAU,EAAGU,KAAK,IAAK;MAC/D,IAAIH,KAAK,EAAE;QACT,MAAMK,MAAM,GAAG,CAACF,KAAK,EAAE,GAAGP,WAAW,CAAC;QACtCH,UAAU,CAACa,IAAI,CAACf,OAAO,GAAGA,OAAO,CAAC,GAAGc,MAAM,CAAC,GAAGA,MAAM,CAAC;MACxD;IACF,CAAC,CAAC,CAAC;EACL,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}