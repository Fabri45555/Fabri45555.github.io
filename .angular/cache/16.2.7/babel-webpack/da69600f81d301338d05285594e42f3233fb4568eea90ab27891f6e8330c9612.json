{"ast":null,"code":"import { Observable } from '../Observable';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function combineLatest(...args) {\n  const scheduler = popScheduler(args);\n  const resultSelector = popResultSelector(args);\n  const {\n    args: observables,\n    keys\n  } = argsArgArrayOrObject(args);\n  if (observables.length === 0) {\n    return from([], scheduler);\n  }\n  const result = new Observable(combineLatestInit(observables, scheduler, keys ? values => createObject(keys, values) : identity));\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\nexport function combineLatestInit(observables, scheduler, valueTransform = identity) {\n  return subscriber => {\n    maybeSchedule(scheduler, () => {\n      const {\n        length\n      } = observables;\n      const values = new Array(length);\n      let active = length;\n      let remainingFirstValues = length;\n      for (let i = 0; i < length; i++) {\n        maybeSchedule(scheduler, () => {\n          const source = from(observables[i], scheduler);\n          let hasFirstValue = false;\n          source.subscribe(createOperatorSubscriber(subscriber, value => {\n            values[i] = value;\n            if (!hasFirstValue) {\n              hasFirstValue = true;\n              remainingFirstValues--;\n            }\n            if (!remainingFirstValues) {\n              subscriber.next(valueTransform(values.slice()));\n            }\n          }, () => {\n            if (! --active) {\n              subscriber.complete();\n            }\n          }));\n        }, subscriber);\n      }\n    }, subscriber);\n  };\n}\nfunction maybeSchedule(scheduler, execute, subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}","map":{"version":3,"names":["Observable","argsArgArrayOrObject","from","identity","mapOneOrManyArgs","popResultSelector","popScheduler","createObject","createOperatorSubscriber","executeSchedule","combineLatest","args","scheduler","resultSelector","observables","keys","length","result","combineLatestInit","values","pipe","valueTransform","subscriber","maybeSchedule","Array","active","remainingFirstValues","i","source","hasFirstValue","subscribe","value","next","slice","complete","execute","subscription"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/rxjs/dist/esm/internal/observable/combineLatest.js"],"sourcesContent":["import {Observable} from '../Observable';\nimport {argsArgArrayOrObject} from '../util/argsArgArrayOrObject';\nimport {from} from './from';\nimport {identity} from '../util/identity';\nimport {mapOneOrManyArgs} from '../util/mapOneOrManyArgs';\nimport {popResultSelector, popScheduler} from '../util/args';\nimport {createObject} from '../util/createObject';\nimport {createOperatorSubscriber} from '../operators/OperatorSubscriber';\nimport {executeSchedule} from '../util/executeSchedule';\n\nexport function combineLatest(...args) {\n  const scheduler = popScheduler(args);\n  const resultSelector = popResultSelector(args);\n  const {args: observables, keys} = argsArgArrayOrObject(args);\n  if (observables.length === 0) {\n    return from([], scheduler);\n  }\n  const result = new Observable(combineLatestInit(observables, scheduler, keys\n    ?\n    (values) => createObject(keys, values)\n    :\n    identity));\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n\nexport function combineLatestInit(observables, scheduler, valueTransform = identity) {\n  return (subscriber) => {\n    maybeSchedule(scheduler, () => {\n      const {length} = observables;\n      const values = new Array(length);\n      let active = length;\n      let remainingFirstValues = length;\n      for (let i = 0; i < length; i++) {\n        maybeSchedule(scheduler, () => {\n          const source = from(observables[i], scheduler);\n          let hasFirstValue = false;\n          source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            values[i] = value;\n            if (!hasFirstValue) {\n              hasFirstValue = true;\n              remainingFirstValues--;\n            }\n            if (!remainingFirstValues) {\n              subscriber.next(valueTransform(values.slice()));\n            }\n          }, () => {\n            if (!--active) {\n              subscriber.complete();\n            }\n          }));\n        }, subscriber);\n      }\n    }, subscriber);\n  };\n}\n\nfunction maybeSchedule(scheduler, execute, subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}\n\n"],"mappings":"AAAA,SAAQA,UAAU,QAAO,eAAe;AACxC,SAAQC,oBAAoB,QAAO,8BAA8B;AACjE,SAAQC,IAAI,QAAO,QAAQ;AAC3B,SAAQC,QAAQ,QAAO,kBAAkB;AACzC,SAAQC,gBAAgB,QAAO,0BAA0B;AACzD,SAAQC,iBAAiB,EAAEC,YAAY,QAAO,cAAc;AAC5D,SAAQC,YAAY,QAAO,sBAAsB;AACjD,SAAQC,wBAAwB,QAAO,iCAAiC;AACxE,SAAQC,eAAe,QAAO,yBAAyB;AAEvD,OAAO,SAASC,aAAaA,CAAC,GAAGC,IAAI,EAAE;EACrC,MAAMC,SAAS,GAAGN,YAAY,CAACK,IAAI,CAAC;EACpC,MAAME,cAAc,GAAGR,iBAAiB,CAACM,IAAI,CAAC;EAC9C,MAAM;IAACA,IAAI,EAAEG,WAAW;IAAEC;EAAI,CAAC,GAAGd,oBAAoB,CAACU,IAAI,CAAC;EAC5D,IAAIG,WAAW,CAACE,MAAM,KAAK,CAAC,EAAE;IAC5B,OAAOd,IAAI,CAAC,EAAE,EAAEU,SAAS,CAAC;EAC5B;EACA,MAAMK,MAAM,GAAG,IAAIjB,UAAU,CAACkB,iBAAiB,CAACJ,WAAW,EAAEF,SAAS,EAAEG,IAAI,GAEzEI,MAAM,IAAKZ,YAAY,CAACQ,IAAI,EAAEI,MAAM,CAAC,GAEtChB,QAAQ,CAAC,CAAC;EACZ,OAAOU,cAAc,GAAGI,MAAM,CAACG,IAAI,CAAChB,gBAAgB,CAACS,cAAc,CAAC,CAAC,GAAGI,MAAM;AAChF;AAEA,OAAO,SAASC,iBAAiBA,CAACJ,WAAW,EAAEF,SAAS,EAAES,cAAc,GAAGlB,QAAQ,EAAE;EACnF,OAAQmB,UAAU,IAAK;IACrBC,aAAa,CAACX,SAAS,EAAE,MAAM;MAC7B,MAAM;QAACI;MAAM,CAAC,GAAGF,WAAW;MAC5B,MAAMK,MAAM,GAAG,IAAIK,KAAK,CAACR,MAAM,CAAC;MAChC,IAAIS,MAAM,GAAGT,MAAM;MACnB,IAAIU,oBAAoB,GAAGV,MAAM;MACjC,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,MAAM,EAAEW,CAAC,EAAE,EAAE;QAC/BJ,aAAa,CAACX,SAAS,EAAE,MAAM;UAC7B,MAAMgB,MAAM,GAAG1B,IAAI,CAACY,WAAW,CAACa,CAAC,CAAC,EAAEf,SAAS,CAAC;UAC9C,IAAIiB,aAAa,GAAG,KAAK;UACzBD,MAAM,CAACE,SAAS,CAACtB,wBAAwB,CAACc,UAAU,EAAGS,KAAK,IAAK;YAC/DZ,MAAM,CAACQ,CAAC,CAAC,GAAGI,KAAK;YACjB,IAAI,CAACF,aAAa,EAAE;cAClBA,aAAa,GAAG,IAAI;cACpBH,oBAAoB,EAAE;YACxB;YACA,IAAI,CAACA,oBAAoB,EAAE;cACzBJ,UAAU,CAACU,IAAI,CAACX,cAAc,CAACF,MAAM,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;YACjD;UACF,CAAC,EAAE,MAAM;YACP,IAAI,CAAC,GAAER,MAAM,EAAE;cACbH,UAAU,CAACY,QAAQ,CAAC,CAAC;YACvB;UACF,CAAC,CAAC,CAAC;QACL,CAAC,EAAEZ,UAAU,CAAC;MAChB;IACF,CAAC,EAAEA,UAAU,CAAC;EAChB,CAAC;AACH;AAEA,SAASC,aAAaA,CAACX,SAAS,EAAEuB,OAAO,EAAEC,YAAY,EAAE;EACvD,IAAIxB,SAAS,EAAE;IACbH,eAAe,CAAC2B,YAAY,EAAExB,SAAS,EAAEuB,OAAO,CAAC;EACnD,CAAC,MAAM;IACLA,OAAO,CAAC,CAAC;EACX;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}