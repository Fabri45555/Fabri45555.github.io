{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Optional, Input, Directive, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Injection token that can be used to provide the default options the card module. */\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"], [\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"], [\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"], [\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"], [\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], \"*\"];\nconst _c2 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\", \"*\"];\nconst _c3 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c4 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst MAT_CARD_CONFIG = new InjectionToken('MAT_CARD_CONFIG');\n\n/**\n * Material Design card component. Cards contain content and actions about a single subject.\n * See https://material.io/design/components/cards.html\n *\n * MatCard provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCard {\n  constructor(config) {\n    this.appearance = config?.appearance || 'raised';\n  }\n  static #_ = this.ɵfac = function MatCard_Factory(t) {\n    return new (t || MatCard)(i0.ɵɵdirectiveInject(MAT_CARD_CONFIG, 8));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCard,\n    selectors: [[\"mat-card\"]],\n    hostAttrs: [1, \"mat-mdc-card\", \"mdc-card\"],\n    hostVars: 4,\n    hostBindings: function MatCard_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-mdc-card-outlined\", ctx.appearance === \"outlined\")(\"mdc-card--outlined\", ctx.appearance === \"outlined\");\n      }\n    },\n    inputs: {\n      appearance: \"appearance\"\n    },\n    exportAs: [\"matCard\"],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatCard_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    styles: [\".mdc-card{display:flex;flex-direction:column;box-sizing:border-box}.mdc-card::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none;pointer-events:none}@media screen and (forced-colors: active){.mdc-card::after{border-color:CanvasText}}.mdc-card--outlined::after{border:none}.mdc-card__content{border-radius:inherit;height:100%}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__media--square::before{margin-top:100%}.mdc-card__media--16-9::before{margin-top:56.25%}.mdc-card__media-content{position:absolute;top:0;right:0;bottom:0;left:0;box-sizing:border-box}.mdc-card__primary-action{display:flex;flex-direction:column;box-sizing:border-box;position:relative;outline:none;color:inherit;text-decoration:none;cursor:pointer;overflow:hidden}.mdc-card__primary-action:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__primary-action:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mdc-card__actions--full-bleed{padding:0}.mdc-card__action-buttons,.mdc-card__action-icons{display:flex;flex-direction:row;align-items:center;box-sizing:border-box}.mdc-card__action-icons{color:rgba(0, 0, 0, 0.6);flex-grow:1;justify-content:flex-end}.mdc-card__action-buttons+.mdc-card__action-icons{margin-left:16px;margin-right:0}[dir=rtl] .mdc-card__action-buttons+.mdc-card__action-icons,.mdc-card__action-buttons+.mdc-card__action-icons[dir=rtl]{margin-left:0;margin-right:16px}.mdc-card__action{display:inline-flex;flex-direction:row;align-items:center;box-sizing:border-box;justify-content:center;cursor:pointer;user-select:none}.mdc-card__action:focus{outline:none}.mdc-card__action--button{margin-left:0;margin-right:8px;padding:0 8px}[dir=rtl] .mdc-card__action--button,.mdc-card__action--button[dir=rtl]{margin-left:8px;margin-right:0}.mdc-card__action--button:last-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-card__action--button:last-child,.mdc-card__action--button:last-child[dir=rtl]{margin-left:0;margin-right:0}.mdc-card__actions--full-bleed .mdc-card__action--button{justify-content:space-between;width:100%;height:auto;max-height:none;margin:0;padding:8px 16px;text-align:left}[dir=rtl] .mdc-card__actions--full-bleed .mdc-card__action--button,.mdc-card__actions--full-bleed .mdc-card__action--button[dir=rtl]{text-align:right}.mdc-card__action--icon{margin:-6px 0;padding:12px}.mdc-card__action--icon:not(:disabled){color:rgba(0, 0, 0, 0.6)}.mat-mdc-card{border-radius:var(--mdc-elevated-card-container-shape);background-color:var(--mdc-elevated-card-container-color);border-width:0;border-style:solid;border-color:var(--mdc-elevated-card-container-color);box-shadow:var(--mdc-elevated-card-container-elevation);--mdc-elevated-card-container-shape:4px;--mdc-outlined-card-container-shape:4px;--mdc-outlined-card-outline-width:1px}.mat-mdc-card .mdc-card::after{border-radius:var(--mdc-elevated-card-container-shape)}.mat-mdc-card-outlined{border-width:var(--mdc-outlined-card-outline-width);border-style:solid;border-color:var(--mdc-outlined-card-outline-color);border-radius:var(--mdc-outlined-card-container-shape);background-color:var(--mdc-outlined-card-container-color);box-shadow:var(--mdc-outlined-card-container-elevation)}.mat-mdc-card-outlined .mdc-card::after{border-radius:var(--mdc-outlined-card-container-shape)}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font);line-height:var(--mat-card-title-text-line-height);font-size:var(--mat-card-title-text-size);letter-spacing:var(--mat-card-title-text-tracking);font-weight:var(--mat-card-title-text-weight)}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color);font-family:var(--mat-card-subtitle-text-font);line-height:var(--mat-card-subtitle-text-line-height);font-size:var(--mat-card-subtitle-text-size);letter-spacing:var(--mat-card-subtitle-text-tracking);font-weight:var(--mat-card-subtitle-text-weight)}.mat-mdc-card{position:relative}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCard, [{\n    type: Component,\n    args: [{\n      selector: 'mat-card',\n      host: {\n        'class': 'mat-mdc-card mdc-card',\n        '[class.mat-mdc-card-outlined]': 'appearance === \"outlined\"',\n        '[class.mdc-card--outlined]': 'appearance === \"outlined\"'\n      },\n      exportAs: 'matCard',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-content></ng-content>\\n\",\n      styles: [\".mdc-card{display:flex;flex-direction:column;box-sizing:border-box}.mdc-card::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none;pointer-events:none}@media screen and (forced-colors: active){.mdc-card::after{border-color:CanvasText}}.mdc-card--outlined::after{border:none}.mdc-card__content{border-radius:inherit;height:100%}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__media--square::before{margin-top:100%}.mdc-card__media--16-9::before{margin-top:56.25%}.mdc-card__media-content{position:absolute;top:0;right:0;bottom:0;left:0;box-sizing:border-box}.mdc-card__primary-action{display:flex;flex-direction:column;box-sizing:border-box;position:relative;outline:none;color:inherit;text-decoration:none;cursor:pointer;overflow:hidden}.mdc-card__primary-action:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__primary-action:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mdc-card__actions--full-bleed{padding:0}.mdc-card__action-buttons,.mdc-card__action-icons{display:flex;flex-direction:row;align-items:center;box-sizing:border-box}.mdc-card__action-icons{color:rgba(0, 0, 0, 0.6);flex-grow:1;justify-content:flex-end}.mdc-card__action-buttons+.mdc-card__action-icons{margin-left:16px;margin-right:0}[dir=rtl] .mdc-card__action-buttons+.mdc-card__action-icons,.mdc-card__action-buttons+.mdc-card__action-icons[dir=rtl]{margin-left:0;margin-right:16px}.mdc-card__action{display:inline-flex;flex-direction:row;align-items:center;box-sizing:border-box;justify-content:center;cursor:pointer;user-select:none}.mdc-card__action:focus{outline:none}.mdc-card__action--button{margin-left:0;margin-right:8px;padding:0 8px}[dir=rtl] .mdc-card__action--button,.mdc-card__action--button[dir=rtl]{margin-left:8px;margin-right:0}.mdc-card__action--button:last-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-card__action--button:last-child,.mdc-card__action--button:last-child[dir=rtl]{margin-left:0;margin-right:0}.mdc-card__actions--full-bleed .mdc-card__action--button{justify-content:space-between;width:100%;height:auto;max-height:none;margin:0;padding:8px 16px;text-align:left}[dir=rtl] .mdc-card__actions--full-bleed .mdc-card__action--button,.mdc-card__actions--full-bleed .mdc-card__action--button[dir=rtl]{text-align:right}.mdc-card__action--icon{margin:-6px 0;padding:12px}.mdc-card__action--icon:not(:disabled){color:rgba(0, 0, 0, 0.6)}.mat-mdc-card{border-radius:var(--mdc-elevated-card-container-shape);background-color:var(--mdc-elevated-card-container-color);border-width:0;border-style:solid;border-color:var(--mdc-elevated-card-container-color);box-shadow:var(--mdc-elevated-card-container-elevation);--mdc-elevated-card-container-shape:4px;--mdc-outlined-card-container-shape:4px;--mdc-outlined-card-outline-width:1px}.mat-mdc-card .mdc-card::after{border-radius:var(--mdc-elevated-card-container-shape)}.mat-mdc-card-outlined{border-width:var(--mdc-outlined-card-outline-width);border-style:solid;border-color:var(--mdc-outlined-card-outline-color);border-radius:var(--mdc-outlined-card-container-shape);background-color:var(--mdc-outlined-card-container-color);box-shadow:var(--mdc-outlined-card-container-elevation)}.mat-mdc-card-outlined .mdc-card::after{border-radius:var(--mdc-outlined-card-container-shape)}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font);line-height:var(--mat-card-title-text-line-height);font-size:var(--mat-card-title-text-size);letter-spacing:var(--mat-card-title-text-tracking);font-weight:var(--mat-card-title-text-weight)}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color);font-family:var(--mat-card-subtitle-text-font);line-height:var(--mat-card-subtitle-text-line-height);font-size:var(--mat-card-subtitle-text-size);letter-spacing:var(--mat-card-subtitle-text-tracking);font-weight:var(--mat-card-subtitle-text-weight)}.mat-mdc-card{position:relative}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_CARD_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    appearance: [{\n      type: Input\n    }]\n  });\n})();\n// TODO(jelbourn): add `MatActionCard`, which is a card that acts like a button (and has a ripple).\n// Supported in MDC with `.mdc-card__primary-action`. Will require additional a11y docs for users.\n/**\n * Title of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for one variety of card title; any custom title element may be used in its place.\n *\n * MatCardTitle provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardTitle {\n  static #_ = this.ɵfac = function MatCardTitle_Factory(t) {\n    return new (t || MatCardTitle)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardTitle,\n    selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-title\"]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardTitle, [{\n    type: Directive,\n    args: [{\n      selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n      host: {\n        'class': 'mat-mdc-card-title'\n      }\n    }]\n  }], null, null);\n})();\n\n/**\n * Container intended to be used within the `<mat-card>` component. Can contain exactly one\n * `<mat-card-title>`, one `<mat-card-subtitle>` and one content image of any size\n * (e.g. `<img matCardLgImage>`).\n */\nclass MatCardTitleGroup {\n  static #_ = this.ɵfac = function MatCardTitleGroup_Factory(t) {\n    return new (t || MatCardTitleGroup)();\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCardTitleGroup,\n    selectors: [[\"mat-card-title-group\"]],\n    hostAttrs: [1, \"mat-mdc-card-title-group\"],\n    ngContentSelectors: _c2,\n    decls: 4,\n    vars: 0,\n    template: function MatCardTitleGroup_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c1);\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵprojection(3, 2);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardTitleGroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-card-title-group',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-mdc-card-title-group'\n      },\n      template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\\\"></ng-content>\\n<ng-content></ng-content>\\n\"\n    }]\n  }], null, null);\n})();\n\n/**\n * Content of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for use with other convenience elements, such as `<mat-card-title>`; any custom\n * content block element may be used in its place.\n *\n * MatCardContent provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardContent {\n  static #_ = this.ɵfac = function MatCardContent_Factory(t) {\n    return new (t || MatCardContent)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardContent,\n    selectors: [[\"mat-card-content\"]],\n    hostAttrs: [1, \"mat-mdc-card-content\"]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardContent, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-content',\n      host: {\n        'class': 'mat-mdc-card-content'\n      }\n    }]\n  }], null, null);\n})();\n\n/**\n * Sub-title of a card, intended for use within `<mat-card>` beneath a `<mat-card-title>`. This\n * component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`.\n *\n * MatCardSubtitle provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardSubtitle {\n  static #_ = this.ɵfac = function MatCardSubtitle_Factory(t) {\n    return new (t || MatCardSubtitle)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardSubtitle,\n    selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-subtitle\"]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardSubtitle, [{\n    type: Directive,\n    args: [{\n      selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n      host: {\n        'class': 'mat-mdc-card-subtitle'\n      }\n    }]\n  }], null, null);\n})();\n\n/**\n * Bottom area of a card that contains action buttons, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom action block element may be used in its place.\n *\n * MatCardActions provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardActions {\n  constructor() {\n    // TODO(jelbourn): deprecate `align` in favor of `actionPosition` or `actionAlignment`\n    // as to not conflict with the native `align` attribute.\n    /** Position of the actions inside the card. */\n    this.align = 'start';\n  }\n  static #_ = this.ɵfac = function MatCardActions_Factory(t) {\n    return new (t || MatCardActions)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardActions,\n    selectors: [[\"mat-card-actions\"]],\n    hostAttrs: [1, \"mat-mdc-card-actions\", \"mdc-card__actions\"],\n    hostVars: 2,\n    hostBindings: function MatCardActions_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-mdc-card-actions-align-end\", ctx.align === \"end\");\n      }\n    },\n    inputs: {\n      align: \"align\"\n    },\n    exportAs: [\"matCardActions\"]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardActions, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-actions',\n      exportAs: 'matCardActions',\n      host: {\n        'class': 'mat-mdc-card-actions mdc-card__actions',\n        '[class.mat-mdc-card-actions-align-end]': 'align === \"end\"'\n      }\n    }]\n  }], null, {\n    align: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Header region of a card, intended for use within `<mat-card>`. This header captures\n * a card title, subtitle, and avatar.  This component is an optional convenience for use with\n * other convenience elements, such as `<mat-card-footer>`; any custom header block element may be\n * used in its place.\n *\n * MatCardHeader provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardHeader {\n  static #_ = this.ɵfac = function MatCardHeader_Factory(t) {\n    return new (t || MatCardHeader)();\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCardHeader,\n    selectors: [[\"mat-card-header\"]],\n    hostAttrs: [1, \"mat-mdc-card-header\"],\n    ngContentSelectors: _c4,\n    decls: 4,\n    vars: 0,\n    consts: [[1, \"mat-mdc-card-header-text\"]],\n    template: function MatCardHeader_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c3);\n        i0.ɵɵprojection(0);\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵprojection(3, 2);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-card-header',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-mdc-card-header'\n      },\n      template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-mdc-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\"\n    }]\n  }], null, null);\n})();\n\n/**\n * Footer area a card, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom footer block element may be used in its place.\n *\n * MatCardFooter provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardFooter {\n  static #_ = this.ɵfac = function MatCardFooter_Factory(t) {\n    return new (t || MatCardFooter)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardFooter,\n    selectors: [[\"mat-card-footer\"]],\n    hostAttrs: [1, \"mat-mdc-card-footer\"]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardFooter, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-footer',\n      host: {\n        'class': 'mat-mdc-card-footer'\n      }\n    }]\n  }], null, null);\n})();\n// TODO(jelbourn): deprecate the \"image\" selectors to replace with \"media\".\n// TODO(jelbourn): support `.mdc-card__media-content`.\n/**\n * Primary image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom media element may be used in its place.\n *\n * MatCardImage provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardImage {\n  static #_ = this.ɵfac = function MatCardImage_Factory(t) {\n    return new (t || MatCardImage)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardImage,\n    selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-image\", \"mdc-card__media\"]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-image], [matCardImage]',\n      host: {\n        'class': 'mat-mdc-card-image mdc-card__media'\n      }\n    }]\n  }], null, null);\n})();\n\n/** Same as `MatCardImage`, but small. */\nclass MatCardSmImage {\n  static #_ = this.ɵfac = function MatCardSmImage_Factory(t) {\n    return new (t || MatCardSmImage)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardSmImage,\n    selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-sm-image\", \"mdc-card__media\"]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardSmImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-sm-image], [matCardImageSmall]',\n      host: {\n        'class': 'mat-mdc-card-sm-image mdc-card__media'\n      }\n    }]\n  }], null, null);\n})();\n\n/** Same as `MatCardImage`, but medium. */\nclass MatCardMdImage {\n  static #_ = this.ɵfac = function MatCardMdImage_Factory(t) {\n    return new (t || MatCardMdImage)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardMdImage,\n    selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-md-image\", \"mdc-card__media\"]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardMdImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-md-image], [matCardImageMedium]',\n      host: {\n        'class': 'mat-mdc-card-md-image mdc-card__media'\n      }\n    }]\n  }], null, null);\n})();\n\n/** Same as `MatCardImage`, but large. */\nclass MatCardLgImage {\n  static #_ = this.ɵfac = function MatCardLgImage_Factory(t) {\n    return new (t || MatCardLgImage)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardLgImage,\n    selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-lg-image\", \"mdc-card__media\"]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardLgImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-lg-image], [matCardImageLarge]',\n      host: {\n        'class': 'mat-mdc-card-lg-image mdc-card__media'\n      }\n    }]\n  }], null, null);\n})();\n\n/** Same as `MatCardImage`, but extra-large. */\nclass MatCardXlImage {\n  static #_ = this.ɵfac = function MatCardXlImage_Factory(t) {\n    return new (t || MatCardXlImage)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardXlImage,\n    selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-xl-image\", \"mdc-card__media\"]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardXlImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-xl-image], [matCardImageXLarge]',\n      host: {\n        'class': 'mat-mdc-card-xl-image mdc-card__media'\n      }\n    }]\n  }], null, null);\n})();\n\n/**\n * Avatar image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`; any custom media element may be used in its place.\n *\n * MatCardAvatar provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardAvatar {\n  static #_ = this.ɵfac = function MatCardAvatar_Factory(t) {\n    return new (t || MatCardAvatar)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardAvatar,\n    selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-avatar\"]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardAvatar, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-avatar], [matCardAvatar]',\n      host: {\n        'class': 'mat-mdc-card-avatar'\n      }\n    }]\n  }], null, null);\n})();\nconst CARD_DIRECTIVES = [MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage];\nclass MatCardModule {\n  static #_ = this.ɵfac = function MatCardModule_Factory(t) {\n    return new (t || MatCardModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatCardModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, CommonModule, MatCommonModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CommonModule],\n      exports: [CARD_DIRECTIVES, MatCommonModule],\n      declarations: CARD_DIRECTIVES\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CARD_CONFIG, MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };","map":{"version":3,"names":["i0","InjectionToken","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","Optional","Input","Directive","NgModule","CommonModule","MatCommonModule","_c0","_c1","_c2","_c3","_c4","MAT_CARD_CONFIG","MatCard","constructor","config","appearance","_","ɵfac","MatCard_Factory","t","ɵɵdirectiveInject","_2","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","MatCard_HostBindings","rf","ctx","ɵɵclassProp","inputs","exportAs","ngContentSelectors","decls","vars","template","MatCard_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","host","None","OnPush","undefined","decorators","MatCardTitle","MatCardTitle_Factory","ɵdir","ɵɵdefineDirective","MatCardTitleGroup","MatCardTitleGroup_Factory","MatCardTitleGroup_Template","ɵɵelementStart","ɵɵelementEnd","MatCardContent","MatCardContent_Factory","MatCardSubtitle","MatCardSubtitle_Factory","MatCardActions","align","MatCardActions_Factory","MatCardActions_HostBindings","MatCardHeader","MatCardHeader_Factory","consts","MatCardHeader_Template","MatCardFooter","MatCardFooter_Factory","MatCardImage","MatCardImage_Factory","MatCardSmImage","MatCardSmImage_Factory","MatCardMdImage","MatCardMdImage_Factory","MatCardLgImage","MatCardLgImage_Factory","MatCardXlImage","MatCardXlImage_Factory","MatCardAvatar","MatCardAvatar_Factory","CARD_DIRECTIVES","MatCardModule","MatCardModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/@angular/material/fesm2022/card.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport {\n  InjectionToken,\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Inject,\n  Optional,\n  Input,\n  Directive,\n  NgModule\n} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatCommonModule} from '@angular/material/core';\n\n/** Injection token that can be used to provide the default options the card module. */\nconst MAT_CARD_CONFIG = new InjectionToken('MAT_CARD_CONFIG');\n\n/**\n * Material Design card component. Cards contain content and actions about a single subject.\n * See https://material.io/design/components/cards.html\n *\n * MatCard provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCard {\n  constructor(config) {\n    this.appearance = config?.appearance || 'raised';\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCard,\n      deps: [{token: MAT_CARD_CONFIG, optional: true}],\n      target: i0.ɵɵFactoryTarget.Component\n    });\n  }\n  static {\n    this.ɵcmp = i0.ɵɵngDeclareComponent({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatCard,\n      selector: \"mat-card\",\n      inputs: {appearance: \"appearance\"},\n      host: {\n        properties: {\n          \"class.mat-mdc-card-outlined\": \"appearance === \\\"outlined\\\"\",\n          \"class.mdc-card--outlined\": \"appearance === \\\"outlined\\\"\"\n        }, classAttribute: \"mat-mdc-card mdc-card\"\n      },\n      exportAs: [\"matCard\"],\n      ngImport: i0,\n      template: \"<ng-content></ng-content>\\n\",\n      styles: [\".mdc-card{display:flex;flex-direction:column;box-sizing:border-box}.mdc-card::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none;pointer-events:none}@media screen and (forced-colors: active){.mdc-card::after{border-color:CanvasText}}.mdc-card--outlined::after{border:none}.mdc-card__content{border-radius:inherit;height:100%}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__media--square::before{margin-top:100%}.mdc-card__media--16-9::before{margin-top:56.25%}.mdc-card__media-content{position:absolute;top:0;right:0;bottom:0;left:0;box-sizing:border-box}.mdc-card__primary-action{display:flex;flex-direction:column;box-sizing:border-box;position:relative;outline:none;color:inherit;text-decoration:none;cursor:pointer;overflow:hidden}.mdc-card__primary-action:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__primary-action:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mdc-card__actions--full-bleed{padding:0}.mdc-card__action-buttons,.mdc-card__action-icons{display:flex;flex-direction:row;align-items:center;box-sizing:border-box}.mdc-card__action-icons{color:rgba(0, 0, 0, 0.6);flex-grow:1;justify-content:flex-end}.mdc-card__action-buttons+.mdc-card__action-icons{margin-left:16px;margin-right:0}[dir=rtl] .mdc-card__action-buttons+.mdc-card__action-icons,.mdc-card__action-buttons+.mdc-card__action-icons[dir=rtl]{margin-left:0;margin-right:16px}.mdc-card__action{display:inline-flex;flex-direction:row;align-items:center;box-sizing:border-box;justify-content:center;cursor:pointer;user-select:none}.mdc-card__action:focus{outline:none}.mdc-card__action--button{margin-left:0;margin-right:8px;padding:0 8px}[dir=rtl] .mdc-card__action--button,.mdc-card__action--button[dir=rtl]{margin-left:8px;margin-right:0}.mdc-card__action--button:last-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-card__action--button:last-child,.mdc-card__action--button:last-child[dir=rtl]{margin-left:0;margin-right:0}.mdc-card__actions--full-bleed .mdc-card__action--button{justify-content:space-between;width:100%;height:auto;max-height:none;margin:0;padding:8px 16px;text-align:left}[dir=rtl] .mdc-card__actions--full-bleed .mdc-card__action--button,.mdc-card__actions--full-bleed .mdc-card__action--button[dir=rtl]{text-align:right}.mdc-card__action--icon{margin:-6px 0;padding:12px}.mdc-card__action--icon:not(:disabled){color:rgba(0, 0, 0, 0.6)}.mat-mdc-card{border-radius:var(--mdc-elevated-card-container-shape);background-color:var(--mdc-elevated-card-container-color);border-width:0;border-style:solid;border-color:var(--mdc-elevated-card-container-color);box-shadow:var(--mdc-elevated-card-container-elevation);--mdc-elevated-card-container-shape:4px;--mdc-outlined-card-container-shape:4px;--mdc-outlined-card-outline-width:1px}.mat-mdc-card .mdc-card::after{border-radius:var(--mdc-elevated-card-container-shape)}.mat-mdc-card-outlined{border-width:var(--mdc-outlined-card-outline-width);border-style:solid;border-color:var(--mdc-outlined-card-outline-color);border-radius:var(--mdc-outlined-card-container-shape);background-color:var(--mdc-outlined-card-container-color);box-shadow:var(--mdc-outlined-card-container-elevation)}.mat-mdc-card-outlined .mdc-card::after{border-radius:var(--mdc-outlined-card-container-shape)}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font);line-height:var(--mat-card-title-text-line-height);font-size:var(--mat-card-title-text-size);letter-spacing:var(--mat-card-title-text-tracking);font-weight:var(--mat-card-title-text-weight)}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color);font-family:var(--mat-card-subtitle-text-font);line-height:var(--mat-card-subtitle-text-line-height);font-size:var(--mat-card-subtitle-text-size);letter-spacing:var(--mat-card-subtitle-text-tracking);font-weight:var(--mat-card-subtitle-text-weight)}.mat-mdc-card{position:relative}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\"],\n      changeDetection: i0.ChangeDetectionStrategy.OnPush,\n      encapsulation: i0.ViewEncapsulation.None\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCard, decorators: [{\n    type: Component,\n    args: [{\n      selector: 'mat-card',\n      host: {\n        'class': 'mat-mdc-card mdc-card',\n        '[class.mat-mdc-card-outlined]': 'appearance === \"outlined\"',\n        '[class.mdc-card--outlined]': 'appearance === \"outlined\"',\n      },\n      exportAs: 'matCard',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-content></ng-content>\\n\",\n      styles: [\".mdc-card{display:flex;flex-direction:column;box-sizing:border-box}.mdc-card::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none;pointer-events:none}@media screen and (forced-colors: active){.mdc-card::after{border-color:CanvasText}}.mdc-card--outlined::after{border:none}.mdc-card__content{border-radius:inherit;height:100%}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__media--square::before{margin-top:100%}.mdc-card__media--16-9::before{margin-top:56.25%}.mdc-card__media-content{position:absolute;top:0;right:0;bottom:0;left:0;box-sizing:border-box}.mdc-card__primary-action{display:flex;flex-direction:column;box-sizing:border-box;position:relative;outline:none;color:inherit;text-decoration:none;cursor:pointer;overflow:hidden}.mdc-card__primary-action:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__primary-action:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mdc-card__actions--full-bleed{padding:0}.mdc-card__action-buttons,.mdc-card__action-icons{display:flex;flex-direction:row;align-items:center;box-sizing:border-box}.mdc-card__action-icons{color:rgba(0, 0, 0, 0.6);flex-grow:1;justify-content:flex-end}.mdc-card__action-buttons+.mdc-card__action-icons{margin-left:16px;margin-right:0}[dir=rtl] .mdc-card__action-buttons+.mdc-card__action-icons,.mdc-card__action-buttons+.mdc-card__action-icons[dir=rtl]{margin-left:0;margin-right:16px}.mdc-card__action{display:inline-flex;flex-direction:row;align-items:center;box-sizing:border-box;justify-content:center;cursor:pointer;user-select:none}.mdc-card__action:focus{outline:none}.mdc-card__action--button{margin-left:0;margin-right:8px;padding:0 8px}[dir=rtl] .mdc-card__action--button,.mdc-card__action--button[dir=rtl]{margin-left:8px;margin-right:0}.mdc-card__action--button:last-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-card__action--button:last-child,.mdc-card__action--button:last-child[dir=rtl]{margin-left:0;margin-right:0}.mdc-card__actions--full-bleed .mdc-card__action--button{justify-content:space-between;width:100%;height:auto;max-height:none;margin:0;padding:8px 16px;text-align:left}[dir=rtl] .mdc-card__actions--full-bleed .mdc-card__action--button,.mdc-card__actions--full-bleed .mdc-card__action--button[dir=rtl]{text-align:right}.mdc-card__action--icon{margin:-6px 0;padding:12px}.mdc-card__action--icon:not(:disabled){color:rgba(0, 0, 0, 0.6)}.mat-mdc-card{border-radius:var(--mdc-elevated-card-container-shape);background-color:var(--mdc-elevated-card-container-color);border-width:0;border-style:solid;border-color:var(--mdc-elevated-card-container-color);box-shadow:var(--mdc-elevated-card-container-elevation);--mdc-elevated-card-container-shape:4px;--mdc-outlined-card-container-shape:4px;--mdc-outlined-card-outline-width:1px}.mat-mdc-card .mdc-card::after{border-radius:var(--mdc-elevated-card-container-shape)}.mat-mdc-card-outlined{border-width:var(--mdc-outlined-card-outline-width);border-style:solid;border-color:var(--mdc-outlined-card-outline-color);border-radius:var(--mdc-outlined-card-container-shape);background-color:var(--mdc-outlined-card-container-color);box-shadow:var(--mdc-outlined-card-container-elevation)}.mat-mdc-card-outlined .mdc-card::after{border-radius:var(--mdc-outlined-card-container-shape)}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font);line-height:var(--mat-card-title-text-line-height);font-size:var(--mat-card-title-text-size);letter-spacing:var(--mat-card-title-text-tracking);font-weight:var(--mat-card-title-text-weight)}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color);font-family:var(--mat-card-subtitle-text-font);line-height:var(--mat-card-subtitle-text-line-height);font-size:var(--mat-card-subtitle-text-size);letter-spacing:var(--mat-card-subtitle-text-tracking);font-weight:var(--mat-card-subtitle-text-weight)}.mat-mdc-card{position:relative}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\"]\n    }]\n  }], ctorParameters: function () {\n    return [{\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [MAT_CARD_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, propDecorators: {\n    appearance: [{\n      type: Input\n    }]\n  }\n});\n// TODO(jelbourn): add `MatActionCard`, which is a card that acts like a button (and has a ripple).\n// Supported in MDC with `.mdc-card__primary-action`. Will require additional a11y docs for users.\n/**\n * Title of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for one variety of card title; any custom title element may be used in its place.\n *\n * MatCardTitle provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardTitle {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCardTitle,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatCardTitle,\n      selector: \"mat-card-title, [mat-card-title], [matCardTitle]\",\n      host: {classAttribute: \"mat-mdc-card-title\"},\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardTitle, decorators: [{\n    type: Directive,\n    args: [{\n      selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n      host: {'class': 'mat-mdc-card-title'},\n    }]\n  }]\n});\n\n/**\n * Container intended to be used within the `<mat-card>` component. Can contain exactly one\n * `<mat-card-title>`, one `<mat-card-subtitle>` and one content image of any size\n * (e.g. `<img matCardLgImage>`).\n */\nclass MatCardTitleGroup {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCardTitleGroup,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Component\n    });\n  }\n  static {\n    this.ɵcmp = i0.ɵɵngDeclareComponent({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatCardTitleGroup,\n      selector: \"mat-card-title-group\",\n      host: {classAttribute: \"mat-mdc-card-title-group\"},\n      ngImport: i0,\n      template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n      changeDetection: i0.ChangeDetectionStrategy.OnPush,\n      encapsulation: i0.ViewEncapsulation.None\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardTitleGroup, decorators: [{\n    type: Component,\n    args: [{\n      selector: 'mat-card-title-group',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {'class': 'mat-mdc-card-title-group'},\n      template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\\\"></ng-content>\\n<ng-content></ng-content>\\n\"\n    }]\n  }]\n});\n\n/**\n * Content of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for use with other convenience elements, such as `<mat-card-title>`; any custom\n * content block element may be used in its place.\n *\n * MatCardContent provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardContent {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCardContent,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatCardContent,\n      selector: \"mat-card-content\",\n      host: {classAttribute: \"mat-mdc-card-content\"},\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardContent, decorators: [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-content',\n      host: {'class': 'mat-mdc-card-content'},\n    }]\n  }]\n});\n\n/**\n * Sub-title of a card, intended for use within `<mat-card>` beneath a `<mat-card-title>`. This\n * component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`.\n *\n * MatCardSubtitle provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardSubtitle {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCardSubtitle,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatCardSubtitle,\n      selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\",\n      host: {classAttribute: \"mat-mdc-card-subtitle\"},\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardSubtitle, decorators: [{\n    type: Directive,\n    args: [{\n      selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n      host: {'class': 'mat-mdc-card-subtitle'},\n    }]\n  }]\n});\n\n/**\n * Bottom area of a card that contains action buttons, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom action block element may be used in its place.\n *\n * MatCardActions provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardActions {\n  constructor() {\n    // TODO(jelbourn): deprecate `align` in favor of `actionPosition` or `actionAlignment`\n    // as to not conflict with the native `align` attribute.\n    /** Position of the actions inside the card. */\n    this.align = 'start';\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCardActions,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatCardActions,\n      selector: \"mat-card-actions\",\n      inputs: {align: \"align\"},\n      host: {\n        properties: {\"class.mat-mdc-card-actions-align-end\": \"align === \\\"end\\\"\"},\n        classAttribute: \"mat-mdc-card-actions mdc-card__actions\"\n      },\n      exportAs: [\"matCardActions\"],\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardActions, decorators: [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-actions',\n      exportAs: 'matCardActions',\n      host: {\n        'class': 'mat-mdc-card-actions mdc-card__actions',\n        '[class.mat-mdc-card-actions-align-end]': 'align === \"end\"',\n      },\n    }]\n  }], propDecorators: {\n    align: [{\n      type: Input\n    }]\n  }\n});\n\n/**\n * Header region of a card, intended for use within `<mat-card>`. This header captures\n * a card title, subtitle, and avatar.  This component is an optional convenience for use with\n * other convenience elements, such as `<mat-card-footer>`; any custom header block element may be\n * used in its place.\n *\n * MatCardHeader provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardHeader {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCardHeader,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Component\n    });\n  }\n  static {\n    this.ɵcmp = i0.ɵɵngDeclareComponent({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatCardHeader,\n      selector: \"mat-card-header\",\n      host: {classAttribute: \"mat-mdc-card-header\"},\n      ngImport: i0,\n      template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-mdc-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n      changeDetection: i0.ChangeDetectionStrategy.OnPush,\n      encapsulation: i0.ViewEncapsulation.None\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardHeader, decorators: [{\n    type: Component,\n    args: [{\n      selector: 'mat-card-header',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {'class': 'mat-mdc-card-header'},\n      template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-mdc-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\"\n    }]\n  }]\n});\n\n/**\n * Footer area a card, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom footer block element may be used in its place.\n *\n * MatCardFooter provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardFooter {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCardFooter,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatCardFooter,\n      selector: \"mat-card-footer\",\n      host: {classAttribute: \"mat-mdc-card-footer\"},\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardFooter, decorators: [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-footer',\n      host: {'class': 'mat-mdc-card-footer'},\n    }]\n  }]\n});\n// TODO(jelbourn): deprecate the \"image\" selectors to replace with \"media\".\n// TODO(jelbourn): support `.mdc-card__media-content`.\n/**\n * Primary image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom media element may be used in its place.\n *\n * MatCardImage provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardImage {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCardImage,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatCardImage,\n      selector: \"[mat-card-image], [matCardImage]\",\n      host: {classAttribute: \"mat-mdc-card-image mdc-card__media\"},\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardImage, decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-image], [matCardImage]',\n      host: {'class': 'mat-mdc-card-image mdc-card__media'},\n    }]\n  }]\n});\n\n/** Same as `MatCardImage`, but small. */\nclass MatCardSmImage {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCardSmImage,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatCardSmImage,\n      selector: \"[mat-card-sm-image], [matCardImageSmall]\",\n      host: {classAttribute: \"mat-mdc-card-sm-image mdc-card__media\"},\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardSmImage, decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-sm-image], [matCardImageSmall]',\n      host: {'class': 'mat-mdc-card-sm-image mdc-card__media'},\n    }]\n  }]\n});\n\n/** Same as `MatCardImage`, but medium. */\nclass MatCardMdImage {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCardMdImage,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatCardMdImage,\n      selector: \"[mat-card-md-image], [matCardImageMedium]\",\n      host: {classAttribute: \"mat-mdc-card-md-image mdc-card__media\"},\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardMdImage, decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-md-image], [matCardImageMedium]',\n      host: {'class': 'mat-mdc-card-md-image mdc-card__media'},\n    }]\n  }]\n});\n\n/** Same as `MatCardImage`, but large. */\nclass MatCardLgImage {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCardLgImage,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatCardLgImage,\n      selector: \"[mat-card-lg-image], [matCardImageLarge]\",\n      host: {classAttribute: \"mat-mdc-card-lg-image mdc-card__media\"},\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardLgImage, decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-lg-image], [matCardImageLarge]',\n      host: {'class': 'mat-mdc-card-lg-image mdc-card__media'},\n    }]\n  }]\n});\n\n/** Same as `MatCardImage`, but extra-large. */\nclass MatCardXlImage {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCardXlImage,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatCardXlImage,\n      selector: \"[mat-card-xl-image], [matCardImageXLarge]\",\n      host: {classAttribute: \"mat-mdc-card-xl-image mdc-card__media\"},\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardXlImage, decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-xl-image], [matCardImageXLarge]',\n      host: {'class': 'mat-mdc-card-xl-image mdc-card__media'},\n    }]\n  }]\n});\n\n/**\n * Avatar image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`; any custom media element may be used in its place.\n *\n * MatCardAvatar provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardAvatar {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCardAvatar,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatCardAvatar,\n      selector: \"[mat-card-avatar], [matCardAvatar]\",\n      host: {classAttribute: \"mat-mdc-card-avatar\"},\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardAvatar, decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-avatar], [matCardAvatar]',\n      host: {'class': 'mat-mdc-card-avatar'},\n    }]\n  }]\n});\n\nconst CARD_DIRECTIVES = [\n  MatCard,\n  MatCardActions,\n  MatCardAvatar,\n  MatCardContent,\n  MatCardFooter,\n  MatCardHeader,\n  MatCardImage,\n  MatCardLgImage,\n  MatCardMdImage,\n  MatCardSmImage,\n  MatCardSubtitle,\n  MatCardTitle,\n  MatCardTitleGroup,\n  MatCardXlImage,\n];\n\nclass MatCardModule {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCardModule,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.NgModule\n    });\n  }\n  static {\n    this.ɵmod = i0.ɵɵngDeclareNgModule({\n      minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardModule, declarations: [MatCard,\n        MatCardActions,\n        MatCardAvatar,\n        MatCardContent,\n        MatCardFooter,\n        MatCardHeader,\n        MatCardImage,\n        MatCardLgImage,\n        MatCardMdImage,\n        MatCardSmImage,\n        MatCardSubtitle,\n        MatCardTitle,\n        MatCardTitleGroup,\n        MatCardXlImage], imports: [MatCommonModule, CommonModule], exports: [MatCard,\n        MatCardActions,\n        MatCardAvatar,\n        MatCardContent,\n        MatCardFooter,\n        MatCardHeader,\n        MatCardImage,\n        MatCardLgImage,\n        MatCardMdImage,\n        MatCardSmImage,\n        MatCardSubtitle,\n        MatCardTitle,\n        MatCardTitleGroup,\n        MatCardXlImage, MatCommonModule]\n    });\n  }\n  static {\n    this.ɵinj = i0.ɵɵngDeclareInjector({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatCardModule,\n      imports: [MatCommonModule, CommonModule, MatCommonModule]\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCardModule, decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CommonModule],\n      exports: [CARD_DIRECTIVES, MatCommonModule],\n      declarations: CARD_DIRECTIVES,\n    }]\n  }]\n});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport {\n  MAT_CARD_CONFIG,\n  MatCard,\n  MatCardActions,\n  MatCardAvatar,\n  MatCardContent,\n  MatCardFooter,\n  MatCardHeader,\n  MatCardImage,\n  MatCardLgImage,\n  MatCardMdImage,\n  MatCardModule,\n  MatCardSmImage,\n  MatCardSubtitle,\n  MatCardTitle,\n  MatCardTitleGroup,\n  MatCardXlImage\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}