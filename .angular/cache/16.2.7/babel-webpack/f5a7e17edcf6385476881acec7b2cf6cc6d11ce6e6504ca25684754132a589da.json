{"ast":null,"code":"import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Input, EventEmitter, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute, ContentChildren, Output, ContentChild, ViewChild, QueryList, forwardRef, Self, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i3 from '@angular/material/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleLoader, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, MatCommonModule, MatRippleModule, ErrorStateMatcher } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i1$1 from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport * as i1$2 from '@angular/material/form-field';\nimport { MatFormFieldControl, MAT_FORM_FIELD } from '@angular/material/form-field';\n\n/** Injection token to be used to override the default options for the chips module. */\nfunction MatChip_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChip_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = [\"*\", [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c1 = [\"*\", \"mat-chip-avatar, [matChipAvatar]\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nfunction MatChipOption_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementStart(2, \"span\", 9);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 10);\n    i0.ɵɵelement(4, \"path\", 11);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction MatChipOption_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c2 = \".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height);--mdc-chip-container-shape-family:rounded;--mdc-chip-container-shape-radius:16px 16px 16px 16px;--mdc-chip-with-avatar-avatar-shape-family:rounded;--mdc-chip-with-avatar-avatar-shape-radius:14px 14px 14px 14px;--mdc-chip-with-avatar-avatar-size:28px;--mdc-chip-with-icon-icon-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size);width:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size);width:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{flex-basis:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\";\nfunction MatChipRow_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction MatChipRow_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChipRow_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction MatChipRow_ng_container_5_ng_content_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2, [\"*ngIf\", \"contentEditInput; else defaultMatChipEditInput\"]);\n  }\n}\nfunction MatChipRow_ng_container_5_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 12);\n  }\n}\nfunction MatChipRow_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MatChipRow_ng_container_5_ng_content_1_Template, 1, 0, \"ng-content\", 10);\n    i0.ɵɵtemplate(2, MatChipRow_ng_container_5_ng_template_2_Template, 1, 0, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const _r6 = i0.ɵɵreference(3);\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.contentEditInput)(\"ngIfElse\", _r6);\n  }\n}\nfunction MatChipRow_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵprojection(1, 3);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c3 = [[[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], \"*\", [[\"\", \"matChipEditInput\", \"\"]], [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c4 = [\"mat-chip-avatar, [matChipAvatar]\", \"*\", \"[matChipEditInput]\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nconst _c5 = [\"*\"];\nconst _c6 = \".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\";\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\n */\nconst MAT_CHIP = new InjectionToken('MatChip');\nclass _MatChipActionBase {}\nconst _MatChipActionMixinBase = mixinTabIndex(_MatChipActionBase, -1);\n\n/**\n * Section within a chip.\n * @docs-private\n */\nclass MatChipAction extends _MatChipActionMixinBase {\n  /** Whether the action is disabled. */\n  get disabled() {\n    return this._disabled || this._parentChip.disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  /**\n   * Determine the value of the disabled attribute for this chip action.\n   */\n  _getDisabledAttribute() {\n    // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n    // string to indicate that disabled attribute should be included.\n    return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\n  }\n\n  /**\n   * Determine the value of the tabindex attribute for this chip action.\n   */\n  _getTabindex() {\n    return this.disabled && !this._allowFocusWhenDisabled || !this.isInteractive ? null : this.tabIndex.toString();\n  }\n  constructor(_elementRef, _parentChip) {\n    super();\n    this._elementRef = _elementRef;\n    this._parentChip = _parentChip;\n    /** Whether the action is interactive. */\n    this.isInteractive = true;\n    /** Whether this is the primary action in the chip. */\n    this._isPrimary = true;\n    this._disabled = false;\n    /**\n     * Private API to allow focusing this chip when it is disabled.\n     */\n    this._allowFocusWhenDisabled = false;\n    if (_elementRef.nativeElement.nodeName === 'BUTTON') {\n      _elementRef.nativeElement.setAttribute('type', 'button');\n    }\n  }\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n  _handleClick(event) {\n    if (!this.disabled && this.isInteractive && this._isPrimary) {\n      event.preventDefault();\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled && this.isInteractive && this._isPrimary && !this._parentChip._isEditing) {\n      event.preventDefault();\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n  static #_ = this.ɵfac = function MatChipAction_Factory(t) {\n    return new (t || MatChipAction)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_CHIP));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipAction,\n    selectors: [[\"\", \"matChipAction\", \"\"]],\n    hostAttrs: [1, \"mdc-evolution-chip__action\", \"mat-mdc-chip-action\"],\n    hostVars: 9,\n    hostBindings: function MatChipAction_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatChipAction_click_HostBindingHandler($event) {\n          return ctx._handleClick($event);\n        })(\"keydown\", function MatChipAction_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx._getTabindex())(\"disabled\", ctx._getDisabledAttribute())(\"aria-disabled\", ctx.disabled);\n        i0.ɵɵclassProp(\"mdc-evolution-chip__action--primary\", ctx._isPrimary)(\"mdc-evolution-chip__action--presentational\", !ctx.isInteractive)(\"mdc-evolution-chip__action--trailing\", !ctx._isPrimary);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      tabIndex: \"tabIndex\",\n      isInteractive: \"isInteractive\",\n      _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipAction, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipAction]',\n      inputs: ['disabled', 'tabIndex'],\n      host: {\n        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\n        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\n        '[class.mdc-evolution-chip__action--presentational]': '!isInteractive',\n        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary',\n        '[attr.tabindex]': '_getTabindex()',\n        '[attr.disabled]': '_getDisabledAttribute()',\n        '[attr.aria-disabled]': 'disabled',\n        '(click)': '_handleClick($event)',\n        '(keydown)': '_handleKeydown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_CHIP]\n      }]\n    }];\n  }, {\n    isInteractive: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    _allowFocusWhenDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Avatar image within a chip. */\nclass MatChipAvatar {\n  static #_ = this.ɵfac = function MatChipAvatar_Factory(t) {\n    return new (t || MatChipAvatar)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipAvatar,\n    selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]],\n    hostAttrs: [\"role\", \"img\", 1, \"mat-mdc-chip-avatar\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--primary\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP_AVATAR,\n      useExisting: MatChipAvatar\n    }])]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipAvatar, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-avatar, [matChipAvatar]',\n      host: {\n        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n        'role': 'img'\n      },\n      providers: [{\n        provide: MAT_CHIP_AVATAR,\n        useExisting: MatChipAvatar\n      }]\n    }]\n  }], null, null);\n})();\n\n/** Non-interactive trailing icon in a chip. */\nclass MatChipTrailingIcon extends MatChipAction {\n  constructor() {\n    super(...arguments);\n    /**\n     * MDC considers all trailing actions as a remove icon,\n     * but we support non-interactive trailing icons.\n     */\n    this.isInteractive = false;\n    this._isPrimary = false;\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵMatChipTrailingIcon_BaseFactory;\n    return function MatChipTrailingIcon_Factory(t) {\n      return (ɵMatChipTrailingIcon_BaseFactory || (ɵMatChipTrailingIcon_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipTrailingIcon)))(t || MatChipTrailingIcon);\n    };\n  }();\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipTrailingIcon,\n    selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]],\n    hostAttrs: [\"aria-hidden\", \"true\", 1, \"mat-mdc-chip-trailing-icon\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP_TRAILING_ICON,\n      useExisting: MatChipTrailingIcon\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n      host: {\n        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'aria-hidden': 'true'\n      },\n      providers: [{\n        provide: MAT_CHIP_TRAILING_ICON,\n        useExisting: MatChipTrailingIcon\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * Directive to remove the parent chip when the trailing icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <mat-icon matChipRemove>cancel</mat-icon>\n * </mat-chip>\n * ```\n */\nclass MatChipRemove extends MatChipAction {\n  constructor() {\n    super(...arguments);\n    this._isPrimary = false;\n  }\n  _handleClick(event) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip.remove();\n    }\n  }\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip.remove();\n    }\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵMatChipRemove_BaseFactory;\n    return function MatChipRemove_Factory(t) {\n      return (ɵMatChipRemove_BaseFactory || (ɵMatChipRemove_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipRemove)))(t || MatChipRemove);\n    };\n  }();\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipRemove,\n    selectors: [[\"\", \"matChipRemove\", \"\"]],\n    hostAttrs: [\"role\", \"button\", 1, \"mat-mdc-chip-remove\", \"mat-mdc-chip-trailing-icon\", \"mat-mdc-focus-indicator\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n    hostVars: 1,\n    hostBindings: function MatChipRemove_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-hidden\", null);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP_REMOVE,\n      useExisting: MatChipRemove\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipRemove, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipRemove]',\n      host: {\n        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-mdc-focus-indicator ' + 'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'role': 'button',\n        '[attr.aria-hidden]': 'null'\n      },\n      providers: [{\n        provide: MAT_CHIP_REMOVE,\n        useExisting: MatChipRemove\n      }]\n    }]\n  }], null, null);\n})();\nlet uid = 0;\n/**\n * Boilerplate for applying mixins to MatChip.\n * @docs-private\n */\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n})), 'primary'), -1);\n\n/**\n * Material design styled Chip base component. Used inside the MatChipSet component.\n *\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\n */\nclass MatChip extends _MatChipMixinBase {\n  _hasFocus() {\n    return this._hasFocusInternal;\n  }\n\n  /**\n   * The value of the chip. Defaults to the content inside\n   * the `mat-mdc-chip-action-label` element.\n   */\n  get value() {\n    return this._value !== undefined ? this._value : this._textElement.textContent.trim();\n  }\n  set value(value) {\n    this._value = value;\n  }\n\n  /**\n   * Determines whether or not the chip displays the remove styling and emits (removed) events.\n   */\n  get removable() {\n    return this._removable;\n  }\n  set removable(value) {\n    this._removable = coerceBooleanProperty(value);\n  }\n\n  /**\n   * Colors the chip for emphasis as if it were selected.\n   */\n  get highlighted() {\n    return this._highlighted;\n  }\n  set highlighted(value) {\n    this._highlighted = coerceBooleanProperty(value);\n  }\n\n  /**\n   * Reference to the MatRipple instance of the chip.\n   * @deprecated Considered an implementation detail. To be removed.\n   * @breaking-change 17.0.0\n   */\n  get ripple() {\n    return this._rippleLoader?.getRipple(this._elementRef.nativeElement);\n  }\n  set ripple(v) {\n    this._rippleLoader?.attachRipple(this._elementRef.nativeElement, v);\n  }\n  constructor(_changeDetectorRef, elementRef, _ngZone, _focusMonitor, _document, animationMode, _globalRippleOptions, tabIndex) {\n    super(elementRef);\n    this._changeDetectorRef = _changeDetectorRef;\n    this._ngZone = _ngZone;\n    this._focusMonitor = _focusMonitor;\n    this._globalRippleOptions = _globalRippleOptions;\n    /** Emits when the chip is focused. */\n    this._onFocus = new Subject();\n    /** Emits when the chip is blurred. */\n    this._onBlur = new Subject();\n    /** Role for the root of the chip. */\n    this.role = null;\n    /** Whether the chip has focus. */\n    this._hasFocusInternal = false;\n    /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n    this.id = `mat-mdc-chip-${uid++}`;\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n    // `ariaLabel` may be unnecessary, and `_computeAriaAccessibleName` only supports\n    // datepicker's use case.\n    /** ARIA label for the content of the chip. */\n    this.ariaLabel = null;\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n    // `ariaDescription` may be unnecessary, and `_computeAriaAccessibleName` only supports\n    // datepicker's use case.\n    /** ARIA description for the content of the chip. */\n    this.ariaDescription = null;\n    /** Id of a span that contains this chip's aria description. */\n    this._ariaDescriptionId = `${this.id}-aria-description`;\n    this._removable = true;\n    this._highlighted = false;\n    /** Emitted when a chip is to be removed. */\n    this.removed = new EventEmitter();\n    /** Emitted when the chip is destroyed. */\n    this.destroyed = new EventEmitter();\n    /** The unstyled chip selector for this component. */\n    this.basicChipAttrName = 'mat-basic-chip';\n    /**\n     * Handles the lazy creation of the MatChip ripple.\n     * Used to improve initial load time of large applications.\n     */\n    this._rippleLoader = inject(MatRippleLoader);\n    this._document = _document;\n    this._animationsDisabled = animationMode === 'NoopAnimations';\n    if (tabIndex != null) {\n      this.tabIndex = parseInt(tabIndex) ?? this.defaultTabIndex;\n    }\n    this._monitorFocus();\n    this._rippleLoader?.configureRipple(this._elementRef.nativeElement, {\n      className: 'mat-mdc-chip-ripple',\n      disabled: this._isRippleDisabled()\n    });\n  }\n  ngOnInit() {\n    // This check needs to happen in `ngOnInit` so the overridden value of\n    // `basicChipAttrName` coming from base classes can be picked up.\n    const element = this._elementRef.nativeElement;\n    this._isBasicChip = element.hasAttribute(this.basicChipAttrName) || element.tagName.toLowerCase() === this.basicChipAttrName;\n  }\n  ngAfterViewInit() {\n    this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\n    if (this._pendingFocus) {\n      this._pendingFocus = false;\n      this.focus();\n    }\n  }\n  ngAfterContentInit() {\n    // Since the styling depends on the presence of some\n    // actions, we have to mark for check on changes.\n    this._actionChanges = merge(this._allLeadingIcons.changes, this._allTrailingIcons.changes, this._allRemoveIcons.changes).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  ngDoCheck() {\n    this._rippleLoader.setDisabled(this._elementRef.nativeElement, this._isRippleDisabled());\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._actionChanges?.unsubscribe();\n    this.destroyed.emit({\n      chip: this\n    });\n    this.destroyed.complete();\n  }\n\n  /**\n   * Allows for programmatic removal of the chip.\n   *\n   * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n   */\n  remove() {\n    if (this.removable) {\n      this.removed.emit({\n        chip: this\n      });\n    }\n  }\n\n  /** Whether or not the ripple should be disabled. */\n  _isRippleDisabled() {\n    return this.disabled || this.disableRipple || this._animationsDisabled || this._isBasicChip || !!this._globalRippleOptions?.disabled;\n  }\n\n  /** Returns whether the chip has a trailing icon. */\n  _hasTrailingIcon() {\n    return !!(this.trailingIcon || this.removeIcon);\n  }\n\n  /** Handles keyboard events on the chip. */\n  _handleKeydown(event) {\n    if (event.keyCode === BACKSPACE || event.keyCode === DELETE) {\n      event.preventDefault();\n      this.remove();\n    }\n  }\n\n  /** Allows for programmatic focusing of the chip. */\n  focus() {\n    if (!this.disabled) {\n      // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n      // This can happen if the consumer tries to focus a chip immediately after it is added.\n      // Queue the method to be called again on init.\n      if (this.primaryAction) {\n        this.primaryAction.focus();\n      } else {\n        this._pendingFocus = true;\n      }\n    }\n  }\n\n  /** Gets the action that contains a specific target node. */\n  _getSourceAction(target) {\n    return this._getActions().find(action => {\n      const element = action._elementRef.nativeElement;\n      return element === target || element.contains(target);\n    });\n  }\n\n  /** Gets all of the actions within the chip. */\n  _getActions() {\n    const result = [];\n    if (this.primaryAction) {\n      result.push(this.primaryAction);\n    }\n    if (this.removeIcon) {\n      result.push(this.removeIcon);\n    }\n    if (this.trailingIcon) {\n      result.push(this.trailingIcon);\n    }\n    return result;\n  }\n\n  /** Handles interactions with the primary action of the chip. */\n  _handlePrimaryActionInteraction() {\n    // Empty here, but is overwritten in child classes.\n  }\n\n  /** Starts the focus monitoring process on the chip. */\n  _monitorFocus() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      const hasFocus = origin !== null;\n      if (hasFocus !== this._hasFocusInternal) {\n        this._hasFocusInternal = hasFocus;\n        if (hasFocus) {\n          this._onFocus.next({\n            chip: this\n          });\n        } else {\n          // When animations are enabled, Angular may end up removing the chip from the DOM a little\n          // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n          // that moves focus not the next item. To work around the issue, we defer marking the chip\n          // as not focused until the next time the zone stabilizes.\n          this._ngZone.onStable.pipe(take(1)).subscribe(() => this._ngZone.run(() => this._onBlur.next({\n            chip: this\n          })));\n        }\n      }\n    });\n  }\n  static #_ = this.ɵfac = function MatChip_Factory(t) {\n    return new (t || MatChip)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChip,\n    selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]],\n    contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.leadingIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allLeadingIcons = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTrailingIcons = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allRemoveIcons = _t);\n      }\n    },\n    viewQuery: function MatChip_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatChipAction, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.primaryAction = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip\"],\n    hostVars: 30,\n    hostBindings: function MatChip_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatChip_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.role ? ctx.tabIndex : null)(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵclassProp(\"mdc-evolution-chip\", !ctx._isBasicChip)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-basic-chip\", ctx._isBasicChip)(\"mat-mdc-standard-chip\", !ctx._isBasicChip)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon())(\"_mat-animation-noopable\", ctx._animationsDisabled);\n      }\n    },\n    inputs: {\n      color: \"color\",\n      disabled: \"disabled\",\n      disableRipple: \"disableRipple\",\n      tabIndex: \"tabIndex\",\n      role: \"role\",\n      id: \"id\",\n      ariaLabel: [\"aria-label\", \"ariaLabel\"],\n      ariaDescription: [\"aria-description\", \"ariaDescription\"],\n      value: \"value\",\n      removable: \"removable\",\n      highlighted: \"highlighted\"\n    },\n    outputs: {\n      removed: \"removed\",\n      destroyed: \"destroyed\"\n    },\n    exportAs: [\"matChip\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP,\n      useExisting: MatChip\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 8,\n    vars: 3,\n    consts: [[1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", 3, \"isInteractive\"], [\"class\", \"mdc-evolution-chip__graphic mat-mdc-chip-graphic\", 4, \"ngIf\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-mdc-focus-indicator\"], [\"class\", \"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\", 4, \"ngIf\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"]],\n    template: function MatChip_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelement(0, \"span\", 0);\n        i0.ɵɵelementStart(1, \"span\", 1)(2, \"span\", 2);\n        i0.ɵɵtemplate(3, MatChip_span_3_Template, 2, 0, \"span\", 3);\n        i0.ɵɵelementStart(4, \"span\", 4);\n        i0.ɵɵprojection(5);\n        i0.ɵɵelement(6, \"span\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(7, MatChip_span_7_Template, 2, 0, \"span\", 6);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"isInteractive\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.leadingIcon);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx._hasTrailingIcon());\n      }\n    },\n    dependencies: [i2.NgIf, MatChipAction],\n    styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height);--mdc-chip-container-shape-family:rounded;--mdc-chip-container-shape-radius:16px 16px 16px 16px;--mdc-chip-with-avatar-avatar-shape-family:rounded;--mdc-chip-with-avatar-avatar-shape-radius:14px 14px 14px 14px;--mdc-chip-with-avatar-avatar-size:28px;--mdc-chip-with-icon-icon-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size);width:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size);width:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{flex-basis:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChip, [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]',\n      inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n      exportAs: 'matChip',\n      host: {\n        'class': 'mat-mdc-chip',\n        '[class.mdc-evolution-chip]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-basic-chip]': '_isBasicChip',\n        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[class._mat-animation-noopable]': '_animationsDisabled',\n        '[id]': 'id',\n        '[attr.role]': 'role',\n        '[attr.tabindex]': 'role ? tabIndex : null',\n        '[attr.aria-label]': 'ariaLabel',\n        '(keydown)': '_handleKeydown($event)'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: MAT_CHIP,\n        useExisting: MatChip\n      }],\n      template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height);--mdc-chip-container-shape-family:rounded;--mdc-chip-container-shape-radius:16px 16px 16px 16px;--mdc-chip-with-avatar-avatar-shape-family:rounded;--mdc-chip-with-avatar-avatar-shape-radius:14px 14px 14px 14px;--mdc-chip-with-avatar-avatar-size:28px;--mdc-chip-with-icon-icon-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size);width:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size);width:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{flex-basis:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }];\n  }, {\n    role: [{\n      type: Input\n    }],\n    _allLeadingIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_AVATAR, {\n        descendants: true\n      }]\n    }],\n    _allTrailingIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_TRAILING_ICON, {\n        descendants: true\n      }]\n    }],\n    _allRemoveIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_REMOVE, {\n        descendants: true\n      }]\n    }],\n    id: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaDescription: [{\n      type: Input,\n      args: ['aria-description']\n    }],\n    value: [{\n      type: Input\n    }],\n    removable: [{\n      type: Input\n    }],\n    highlighted: [{\n      type: Input\n    }],\n    removed: [{\n      type: Output\n    }],\n    destroyed: [{\n      type: Output\n    }],\n    leadingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_AVATAR]\n    }],\n    trailingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_TRAILING_ICON]\n    }],\n    removeIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_REMOVE]\n    }],\n    primaryAction: [{\n      type: ViewChild,\n      args: [MatChipAction]\n    }]\n  });\n})();\n\n/** Event object emitted by MatChipOption when selected or deselected. */\nclass MatChipSelectionChange {\n  constructor( /** Reference to the chip that emitted the event. */\n  source, /** Whether the chip that emitted the event is selected. */\n  selected, /** Whether the selection change was a result of a user interaction. */\n  isUserInput = false) {\n    this.source = source;\n    this.selected = selected;\n    this.isUserInput = isUserInput;\n  }\n}\n\n/**\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\n *\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\n * user cannot click disabled chips.\n */\nclass MatChipOption extends MatChip {\n  constructor() {\n    super(...arguments);\n    /** Default chip options. */\n    this._defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    /** Whether the chip list is selectable. */\n    this.chipListSelectable = true;\n    /** Whether the chip list is in multi-selection mode. */\n    this._chipListMultiple = false;\n    /** Whether the chip list hides single-selection indicator. */\n    this._chipListHideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    this._selectable = true;\n    this._selected = false;\n    /** The unstyled chip selector for this component. */\n    this.basicChipAttrName = 'mat-basic-chip-option';\n    /** Emitted when the chip is selected or deselected. */\n    this.selectionChange = new EventEmitter();\n  }\n\n  /**\n   * Whether or not the chip is selectable.\n   *\n   * When a chip is not selectable, changes to its selected state are always\n   * ignored. By default an option chip is selectable, and it becomes\n   * non-selectable if its parent chip list is not selectable.\n   */\n  get selectable() {\n    return this._selectable && this.chipListSelectable;\n  }\n  set selectable(value) {\n    this._selectable = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Whether the chip is selected. */\n  get selected() {\n    return this._selected;\n  }\n  set selected(value) {\n    this._setSelectedState(coerceBooleanProperty(value), false, true);\n  }\n\n  /**\n   * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\n   * interaction patterns.\n   *\n   * From [WAI ARIA Listbox authoring practices guide](\n   * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\n   *  \"If any options are selected, each selected option has either aria-selected or aria-checked\n   *  set to true. All options that are selectable but not selected have either aria-selected or\n   *  aria-checked set to false.\"\n   *\n   * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\n   * VoiceOver reading every option as \"selected\" (#25736).\n   */\n  get ariaSelected() {\n    return this.selectable ? this.selected.toString() : null;\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.role = 'presentation';\n  }\n\n  /** Selects the chip. */\n  select() {\n    this._setSelectedState(true, false, true);\n  }\n\n  /** Deselects the chip. */\n  deselect() {\n    this._setSelectedState(false, false, true);\n  }\n\n  /** Selects this chip and emits userInputSelection event */\n  selectViaInteraction() {\n    this._setSelectedState(true, true, true);\n  }\n\n  /** Toggles the current selected state of this chip. */\n  toggleSelected(isUserInput = false) {\n    this._setSelectedState(!this.selected, isUserInput, true);\n    return this.selected;\n  }\n  _handlePrimaryActionInteraction() {\n    if (!this.disabled) {\n      // Interacting with the primary action implies that the chip already has focus, however\n      // there's a bug in Safari where focus ends up lingering on the previous chip (see #27544).\n      // We work around it by explicitly focusing the primary action of the current chip.\n      this.focus();\n      if (this.selectable) {\n        this.toggleSelected(true);\n      }\n    }\n  }\n  _hasLeadingGraphic() {\n    if (this.leadingIcon) {\n      return true;\n    }\n    // The checkmark graphic communicates selected state for both single-select and multi-select.\n    // Include checkmark in single-select to fix a11y issue where selected state is communicated\n    // visually only using color (#25886).\n    return !this._chipListHideSingleSelectionIndicator || this._chipListMultiple;\n  }\n  _setSelectedState(isSelected, isUserInput, emitEvent) {\n    if (isSelected !== this.selected) {\n      this._selected = isSelected;\n      if (emitEvent) {\n        this.selectionChange.emit({\n          source: this,\n          isUserInput,\n          selected: this.selected\n        });\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵMatChipOption_BaseFactory;\n    return function MatChipOption_Factory(t) {\n      return (ɵMatChipOption_BaseFactory || (ɵMatChipOption_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipOption)))(t || MatChipOption);\n    };\n  }();\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipOption,\n    selectors: [[\"mat-basic-chip-option\"], [\"\", \"mat-basic-chip-option\", \"\"], [\"mat-chip-option\"], [\"\", \"mat-chip-option\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-option\"],\n    hostVars: 37,\n    hostBindings: function MatChipOption_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"aria-description\", null)(\"role\", ctx.role);\n        i0.ɵɵclassProp(\"mdc-evolution-chip\", !ctx._isBasicChip)(\"mdc-evolution-chip--filter\", !ctx._isBasicChip)(\"mdc-evolution-chip--selectable\", !ctx._isBasicChip)(\"mat-mdc-chip-selected\", ctx.selected)(\"mat-mdc-chip-multiple\", ctx._chipListMultiple)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--selected\", ctx.selected)(\"mdc-evolution-chip--selecting\", !ctx._animationsDisabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-graphic\", ctx._hasLeadingGraphic())(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n      }\n    },\n    inputs: {\n      color: \"color\",\n      disabled: \"disabled\",\n      disableRipple: \"disableRipple\",\n      tabIndex: \"tabIndex\",\n      selectable: \"selectable\",\n      selected: \"selected\"\n    },\n    outputs: {\n      selectionChange: \"selectionChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatChip,\n      useExisting: MatChipOption\n    }, {\n      provide: MAT_CHIP,\n      useExisting: MatChipOption\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 10,\n    vars: 9,\n    consts: [[1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", \"role\", \"option\", 3, \"tabIndex\", \"_allowFocusWhenDisabled\"], [\"class\", \"mdc-evolution-chip__graphic mat-mdc-chip-graphic\", 4, \"ngIf\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-mdc-focus-indicator\"], [\"class\", \"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\", 4, \"ngIf\"], [1, \"cdk-visually-hidden\", 3, \"id\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__checkmark\"], [\"viewBox\", \"-2 -3 30 30\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mdc-evolution-chip__checkmark-svg\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-evolution-chip__checkmark-path\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"]],\n    template: function MatChipOption_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelement(0, \"span\", 0);\n        i0.ɵɵelementStart(1, \"span\", 1)(2, \"button\", 2);\n        i0.ɵɵtemplate(3, MatChipOption_span_3_Template, 5, 0, \"span\", 3);\n        i0.ɵɵelementStart(4, \"span\", 4);\n        i0.ɵɵprojection(5);\n        i0.ɵɵelement(6, \"span\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(7, MatChipOption_span_7_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelementStart(8, \"span\", 7);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"tabIndex\", ctx.tabIndex)(\"_allowFocusWhenDisabled\", true);\n        i0.ɵɵattribute(\"aria-selected\", ctx.ariaSelected)(\"aria-label\", ctx.ariaLabel)(\"aria-describedby\", ctx._ariaDescriptionId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx._hasLeadingGraphic());\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx._hasTrailingIcon());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"id\", ctx._ariaDescriptionId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.ariaDescription);\n      }\n    },\n    dependencies: [i2.NgIf, MatChipAction],\n    styles: [_c2],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]',\n      inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-option',\n        '[class.mdc-evolution-chip]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--filter]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--selectable]': '!_isBasicChip',\n        '[class.mat-mdc-chip-selected]': 'selected',\n        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--selected]': 'selected',\n        // This class enables the transition on the checkmark. Usually MDC adds it when selection\n        // starts and removes it once the animation is finished. We don't need to go through all\n        // the trouble, because we only care about the selection animation. MDC needs to do it,\n        // because they also have an exit animation that we don't care about.\n        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-graphic]': '_hasLeadingGraphic()',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-description]': 'null',\n        '[attr.role]': 'role',\n        '[id]': 'id'\n      },\n      providers: [{\n        provide: MatChip,\n        useExisting: MatChipOption\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipOption\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"_hasLeadingGraphic()\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n        <svg\\n          class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n          viewBox=\\\"-2 -3 30 30\\\"\\n          focusable=\\\"false\\\"\\n          aria-hidden=\\\"true\\\">\\n          <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n        </svg>\\n      </span>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height);--mdc-chip-container-shape-family:rounded;--mdc-chip-container-shape-radius:16px 16px 16px 16px;--mdc-chip-with-avatar-avatar-shape-family:rounded;--mdc-chip-with-avatar-avatar-shape-radius:14px 14px 14px 14px;--mdc-chip-with-avatar-avatar-size:28px;--mdc-chip-with-icon-icon-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size);width:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size);width:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{flex-basis:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], null, {\n    selectable: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * A directive that makes a span editable and exposes functions to modify and retrieve the\n * element's contents.\n */\nclass MatChipEditInput {\n  constructor(_elementRef, _document) {\n    this._elementRef = _elementRef;\n    this._document = _document;\n  }\n  initialize(initialValue) {\n    this.getNativeElement().focus();\n    this.setValue(initialValue);\n  }\n  getNativeElement() {\n    return this._elementRef.nativeElement;\n  }\n  setValue(value) {\n    this.getNativeElement().textContent = value;\n    this._moveCursorToEndOfInput();\n  }\n  getValue() {\n    return this.getNativeElement().textContent || '';\n  }\n  _moveCursorToEndOfInput() {\n    const range = this._document.createRange();\n    range.selectNodeContents(this.getNativeElement());\n    range.collapse(false);\n    const sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n  static #_ = this.ɵfac = function MatChipEditInput_Factory(t) {\n    return new (t || MatChipEditInput)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipEditInput,\n    selectors: [[\"span\", \"matChipEditInput\", \"\"]],\n    hostAttrs: [\"role\", \"textbox\", \"tabindex\", \"-1\", \"contenteditable\", \"true\", 1, \"mat-chip-edit-input\"]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipEditInput, [{\n    type: Directive,\n    args: [{\n      selector: 'span[matChipEditInput]',\n      host: {\n        'class': 'mat-chip-edit-input',\n        'role': 'textbox',\n        'tabindex': '-1',\n        'contenteditable': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * An extension of the MatChip component used with MatChipGrid and\n * the matChipInputFor directive.\n */\nclass MatChipRow extends MatChip {\n  constructor(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex) {\n    super(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex);\n    this.basicChipAttrName = 'mat-basic-chip-row';\n    /**\n     * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\n     * event might occur which will interrupt the editing. This flag is used to avoid interruptions\n     * while the editing action is being initialized.\n     */\n    this._editStartPending = false;\n    this.editable = false;\n    /** Emitted when the chip is edited. */\n    this.edited = new EventEmitter();\n    this._isEditing = false;\n    this.role = 'row';\n    this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\n      if (this._isEditing && !this._editStartPending) {\n        this._onEditFinish();\n      }\n    });\n  }\n  _hasTrailingIcon() {\n    // The trailing icon is hidden while editing.\n    return !this._isEditing && super._hasTrailingIcon();\n  }\n\n  /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\n  _handleFocus() {\n    if (!this._isEditing && !this.disabled) {\n      this.focus();\n    }\n  }\n  _handleKeydown(event) {\n    if (event.keyCode === ENTER && !this.disabled) {\n      if (this._isEditing) {\n        event.preventDefault();\n        this._onEditFinish();\n      } else if (this.editable) {\n        this._startEditing(event);\n      }\n    } else if (this._isEditing) {\n      // Stop the event from reaching the chip set in order to avoid navigating.\n      event.stopPropagation();\n    } else {\n      super._handleKeydown(event);\n    }\n  }\n  _handleDoubleclick(event) {\n    if (!this.disabled && this.editable) {\n      this._startEditing(event);\n    }\n  }\n  _startEditing(event) {\n    if (!this.primaryAction || this.removeIcon && this._getSourceAction(event.target) === this.removeIcon) {\n      return;\n    }\n    // The value depends on the DOM so we need to extract it before we flip the flag.\n    const value = this.value;\n    this._isEditing = this._editStartPending = true;\n    // Starting the editing sequence below depends on the edit input\n    // query resolving on time. Trigger a synchronous change detection to\n    // ensure that it happens by the time we hit the timeout below.\n    this._changeDetectorRef.detectChanges();\n    // TODO(crisbeto): this timeout shouldn't be necessary given the `detectChange` call above.\n    // Defer initializing the input so it has time to be added to the DOM.\n    setTimeout(() => {\n      this._getEditInput().initialize(value);\n      this._editStartPending = false;\n    });\n  }\n  _onEditFinish() {\n    this._isEditing = this._editStartPending = false;\n    this.edited.emit({\n      chip: this,\n      value: this._getEditInput().getValue()\n    });\n    // If the edit input is still focused or focus was returned to the body after it was destroyed,\n    // return focus to the chip contents.\n    if (this._document.activeElement === this._getEditInput().getNativeElement() || this._document.activeElement === this._document.body) {\n      this.primaryAction.focus();\n    }\n  }\n  _isRippleDisabled() {\n    return super._isRippleDisabled() || this._isEditing;\n  }\n\n  /**\n   * Gets the projected chip edit input, or the default input if none is projected in. One of these\n   * two values is guaranteed to be defined.\n   */\n  _getEditInput() {\n    return this.contentEditInput || this.defaultEditInput;\n  }\n  static #_ = this.ɵfac = function MatChipRow_Factory(t) {\n    return new (t || MatChipRow)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipRow,\n    selectors: [[\"mat-chip-row\"], [\"\", \"mat-chip-row\", \"\"], [\"mat-basic-chip-row\"], [\"\", \"mat-basic-chip-row\", \"\"]],\n    contentQueries: function MatChipRow_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChipEditInput, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentEditInput = _t.first);\n      }\n    },\n    viewQuery: function MatChipRow_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatChipEditInput, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultEditInput = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-row\", \"mdc-evolution-chip\"],\n    hostVars: 27,\n    hostBindings: function MatChipRow_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatChipRow_focus_HostBindingHandler($event) {\n          return ctx._handleFocus($event);\n        })(\"dblclick\", function MatChipRow_dblclick_HostBindingHandler($event) {\n          return ctx._handleDoubleclick($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-description\", null)(\"role\", ctx.role);\n        i0.ɵɵclassProp(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-editing\", ctx._isEditing)(\"mat-mdc-chip-editable\", ctx.editable)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n      }\n    },\n    inputs: {\n      color: \"color\",\n      disabled: \"disabled\",\n      disableRipple: \"disableRipple\",\n      tabIndex: \"tabIndex\",\n      editable: \"editable\"\n    },\n    outputs: {\n      edited: \"edited\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatChip,\n      useExisting: MatChipRow\n    }, {\n      provide: MAT_CHIP,\n      useExisting: MatChipRow\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c4,\n    decls: 10,\n    vars: 12,\n    consts: [[4, \"ngIf\"], [\"role\", \"gridcell\", \"matChipAction\", \"\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\", 3, \"tabIndex\", \"disabled\"], [\"class\", \"mdc-evolution-chip__graphic mat-mdc-chip-graphic\", 4, \"ngIf\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-mdc-focus-indicator\"], [\"class\", \"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\", \"role\", \"gridcell\", 4, \"ngIf\"], [1, \"cdk-visually-hidden\", 3, \"id\"], [1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [4, \"ngIf\", \"ngIfElse\"], [\"defaultMatChipEditInput\", \"\"], [\"matChipEditInput\", \"\"], [\"role\", \"gridcell\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"]],\n    template: function MatChipRow_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c3);\n        i0.ɵɵtemplate(0, MatChipRow_ng_container_0_Template, 2, 0, \"ng-container\", 0);\n        i0.ɵɵelementStart(1, \"span\", 1);\n        i0.ɵɵtemplate(2, MatChipRow_span_2_Template, 2, 0, \"span\", 2);\n        i0.ɵɵelementStart(3, \"span\", 3);\n        i0.ɵɵtemplate(4, MatChipRow_ng_container_4_Template, 2, 0, \"ng-container\", 4);\n        i0.ɵɵtemplate(5, MatChipRow_ng_container_5_Template, 4, 2, \"ng-container\", 4);\n        i0.ɵɵelement(6, \"span\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(7, MatChipRow_span_7_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelementStart(8, \"span\", 7);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx._isEditing);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"tabIndex\", ctx.tabIndex)(\"disabled\", ctx.disabled);\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-describedby\", ctx._ariaDescriptionId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.leadingIcon);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitch\", ctx._isEditing);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx._hasTrailingIcon());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"id\", ctx._ariaDescriptionId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.ariaDescription);\n      }\n    },\n    dependencies: [i2.NgIf, i2.NgSwitch, i2.NgSwitchCase, MatChipAction, MatChipEditInput],\n    styles: [_c2],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]',\n      inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-editing]': '_isEditing',\n        '[class.mat-mdc-chip-editable]': 'editable',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[id]': 'id',\n        // Has to have a negative tabindex in order to capture\n        // focus and redirect it to the primary action.\n        '[attr.tabindex]': 'disabled ? null : -1',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-description]': 'null',\n        '[attr.role]': 'role',\n        '(focus)': '_handleFocus($event)',\n        '(dblclick)': '_handleDoubleclick($event)'\n      },\n      providers: [{\n        provide: MatChip,\n        useExisting: MatChipRow\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipRow\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-container *ngIf=\\\"!_isEditing\\\">\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n</ng-container>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n  <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n    <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n  </span>\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\" [ngSwitch]=\\\"_isEditing\\\">\\n    <ng-container *ngSwitchCase=\\\"false\\\"><ng-content></ng-content></ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"true\\\">\\n      <ng-content *ngIf=\\\"contentEditInput; else defaultMatChipEditInput\\\"\\n                  select=\\\"[matChipEditInput]\\\"></ng-content>\\n      <ng-template #defaultMatChipEditInput><span matChipEditInput></span></ng-template>\\n    </ng-container>\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  role=\\\"gridcell\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height);--mdc-chip-container-shape-family:rounded;--mdc-chip-container-shape-radius:16px 16px 16px 16px;--mdc-chip-with-avatar-avatar-shape-family:rounded;--mdc-chip-with-avatar-avatar-shape-radius:14px 14px 14px 14px;--mdc-chip-with-avatar-avatar-size:28px;--mdc-chip-with-icon-icon-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size);width:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size);width:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{flex-basis:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }];\n  }, {\n    editable: [{\n      type: Input\n    }],\n    edited: [{\n      type: Output\n    }],\n    defaultEditInput: [{\n      type: ViewChild,\n      args: [MatChipEditInput]\n    }],\n    contentEditInput: [{\n      type: ContentChild,\n      args: [MatChipEditInput]\n    }]\n  });\n})();\n\n/**\n * Boilerplate for applying mixins to MatChipSet.\n * @docs-private\n */\nclass MatChipSetBase {\n  constructor(_elementRef) {}\n}\nconst _MatChipSetMixinBase = mixinTabIndex(MatChipSetBase);\n\n/**\n * Basic container component for the MatChip component.\n *\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\n */\nclass MatChipSet extends _MatChipSetMixinBase {\n  /** Combined stream of all of the child chips' focus events. */\n  get chipFocusChanges() {\n    return this._getChipStream(chip => chip._onFocus);\n  }\n\n  /** Combined stream of all of the child chips' remove events. */\n  get chipDestroyedChanges() {\n    return this._getChipStream(chip => chip.destroyed);\n  }\n\n  /** Whether the chip set is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n\n  /** Whether the chip list contains chips or not. */\n  get empty() {\n    return !this._chips || this._chips.length === 0;\n  }\n\n  /** The ARIA role applied to the chip set. */\n  get role() {\n    if (this._explicitRole) {\n      return this._explicitRole;\n    }\n    return this.empty ? null : this._defaultRole;\n  }\n  set role(value) {\n    this._explicitRole = value;\n  }\n\n  /** Whether any of the chips inside of this chip-set has focus. */\n  get focused() {\n    return this._hasFocusedChip();\n  }\n  constructor(_elementRef, _changeDetectorRef, _dir) {\n    super(_elementRef);\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dir = _dir;\n    /** Index of the last destroyed chip that had focus. */\n    this._lastDestroyedFocusedChipIndex = null;\n    /** Subject that emits when the component has been destroyed. */\n    this._destroyed = new Subject();\n    /** Role to use if it hasn't been overwritten by the user. */\n    this._defaultRole = 'presentation';\n    this._disabled = false;\n    this._explicitRole = null;\n    /** Flat list of all the actions contained within the chips. */\n    this._chipActions = new QueryList();\n  }\n  ngAfterViewInit() {\n    this._setUpFocusManagement();\n    this._trackChipSetChanges();\n    this._trackDestroyedFocusedChip();\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._chipActions.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Checks whether any of the chips is focused. */\n  _hasFocusedChip() {\n    return this._chips && this._chips.some(chip => chip._hasFocus());\n  }\n\n  /** Syncs the chip-set's state with the individual chips. */\n  _syncChipsState() {\n    if (this._chips) {\n      this._chips.forEach(chip => {\n        chip.disabled = this._disabled;\n        chip._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n  focus() {}\n\n  /** Handles keyboard events on the chip set. */\n  _handleKeydown(event) {\n    if (this._originatesFromChip(event)) {\n      this._keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Utility to ensure all indexes are valid.\n   *\n   * @param index The index to be checked.\n   * @returns True if the index is valid for our list of chips.\n   */\n  _isValidIndex(index) {\n    return index >= 0 && index < this._chips.length;\n  }\n\n  /**\n   * Removes the `tabindex` from the chip set and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the set from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    if (this.tabIndex !== -1) {\n      const previousTabIndex = this.tabIndex;\n      this.tabIndex = -1;\n      // Note that this needs to be a `setTimeout`, because a `Promise.resolve`\n      // doesn't allow enough time for the focus to escape.\n      setTimeout(() => this.tabIndex = previousTabIndex);\n    }\n  }\n\n  /**\n   * Gets a stream of events from all the chips within the set.\n   * The stream will automatically incorporate any newly-added chips.\n   */\n  _getChipStream(mappingFunction) {\n    return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\n  }\n\n  /** Checks whether an event comes from inside a chip element. */\n  _originatesFromChip(event) {\n    let currentElement = event.target;\n    while (currentElement && currentElement !== this._elementRef.nativeElement) {\n      if (currentElement.classList.contains('mat-mdc-chip')) {\n        return true;\n      }\n      currentElement = currentElement.parentElement;\n    }\n    return false;\n  }\n\n  /** Sets up the chip set's focus management logic. */\n  _setUpFocusManagement() {\n    // Create a flat `QueryList` containing the actions of all of the chips.\n    // This allows us to navigate both within the chip and move to the next/previous\n    // one using the existing `ListKeyManager`.\n    this._chips.changes.pipe(startWith(this._chips)).subscribe(chips => {\n      const actions = [];\n      chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\n      this._chipActions.reset(actions);\n      this._chipActions.notifyOnChanges();\n    });\n    this._keyManager = new FocusKeyManager(this._chipActions).withVerticalOrientation().withHorizontalOrientation(this._dir ? this._dir.value : 'ltr').withHomeAndEnd().skipPredicate(action => this._skipPredicate(action));\n    // Keep the manager active index in sync so that navigation picks\n    // up from the current chip if the user clicks into the list directly.\n    this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({\n      chip\n    }) => {\n      const action = chip._getSourceAction(document.activeElement);\n      if (action) {\n        this._keyManager.updateActiveItem(action);\n      }\n    });\n    this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n  }\n\n  /**\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n   * non-interactive and disabled actions since the user can't do anything with them.\n   */\n  _skipPredicate(action) {\n    // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\n    // chips.\n    return !action.isInteractive || action.disabled;\n  }\n\n  /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n  _trackChipSetChanges() {\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.disabled) {\n        // Since this happens after the content has been\n        // checked, we need to defer it to the next tick.\n        Promise.resolve().then(() => this._syncChipsState());\n      }\n      this._redirectDestroyedChipFocus();\n    });\n  }\n\n  /** Starts tracking the destroyed chips in order to capture the focused one. */\n  _trackDestroyedFocusedChip() {\n    this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n      const chipArray = this._chips.toArray();\n      const chipIndex = chipArray.indexOf(event.chip);\n      // If the focused chip is destroyed, save its index so that we can move focus to the next\n      // chip. We only save the index here, rather than move the focus immediately, because we want\n      // to wait until the chip is removed from the chip list before focusing the next one. This\n      // allows us to keep focus on the same index if the chip gets swapped out.\n      if (this._isValidIndex(chipIndex) && event.chip._hasFocus()) {\n        this._lastDestroyedFocusedChipIndex = chipIndex;\n      }\n    });\n  }\n\n  /**\n   * Finds the next appropriate chip to move focus to,\n   * if the currently-focused chip is destroyed.\n   */\n  _redirectDestroyedChipFocus() {\n    if (this._lastDestroyedFocusedChipIndex == null) {\n      return;\n    }\n    if (this._chips.length) {\n      const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\n      const chipToFocus = this._chips.toArray()[newIndex];\n      if (chipToFocus.disabled) {\n        // If we're down to one disabled chip, move focus back to the set.\n        if (this._chips.length === 1) {\n          this.focus();\n        } else {\n          this._keyManager.setPreviousItemActive();\n        }\n      } else {\n        chipToFocus.focus();\n      }\n    } else {\n      this.focus();\n    }\n    this._lastDestroyedFocusedChipIndex = null;\n  }\n  static #_ = this.ɵfac = function MatChipSet_Factory(t) {\n    return new (t || MatChipSet)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.Directionality, 8));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipSet,\n    selectors: [[\"mat-chip-set\"]],\n    contentQueries: function MatChipSet_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChip, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip-set\", \"mdc-evolution-chip-set\"],\n    hostVars: 1,\n    hostBindings: function MatChipSet_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatChipSet_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.role);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      role: \"role\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 0,\n    consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n    template: function MatChipSet_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipSet, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-set',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\n        '(keydown)': '_handleKeydown($event)',\n        '[attr.role]': 'role'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    role: [{\n      type: Input\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChip, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/** Change event object that is emitted when the chip listbox value has changed. */\nclass MatChipListboxChange {\n  constructor( /** Chip listbox that emitted the event. */\n  source, /** Value of the chip listbox when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n\n/**\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatChipListbox),\n  multi: true\n};\n\n/**\n * An extension of the MatChipSet component that supports chip selection.\n * Used with MatChipOption chips.\n */\nclass MatChipListbox extends MatChipSet {\n  constructor() {\n    super(...arguments);\n    /**\n     * Function when touched. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    this._onTouched = () => {};\n    /**\n     * Function when changed. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    this._onChange = () => {};\n    // TODO: MDC uses `grid` here\n    this._defaultRole = 'listbox';\n    /** Default chip options. */\n    this._defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    this._multiple = false;\n    /** Orientation of the chip list. */\n    this.ariaOrientation = 'horizontal';\n    this._selectable = true;\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    this.compareWith = (o1, o2) => o1 === o2;\n    this._required = false;\n    this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    /** Event emitted when the selected chip listbox value has been changed by the user. */\n    this.change = new EventEmitter();\n    this._chips = undefined;\n  }\n\n  /** Whether the user should be allowed to select multiple chips. */\n  get multiple() {\n    return this._multiple;\n  }\n  set multiple(value) {\n    this._multiple = coerceBooleanProperty(value);\n    this._syncListboxProperties();\n  }\n\n  /** The array of selected chips inside the chip listbox. */\n  get selected() {\n    const selectedChips = this._chips.toArray().filter(chip => chip.selected);\n    return this.multiple ? selectedChips : selectedChips[0];\n  }\n\n  /**\n   * Whether or not this chip listbox is selectable.\n   *\n   * When a chip listbox is not selectable, the selected states for all\n   * the chips inside the chip listbox are always ignored.\n   */\n  get selectable() {\n    return this._selectable;\n  }\n  set selectable(value) {\n    this._selectable = coerceBooleanProperty(value);\n    this._syncListboxProperties();\n  }\n\n  /** Whether this chip listbox is required. */\n  get required() {\n    return this._required;\n  }\n  set required(value) {\n    this._required = coerceBooleanProperty(value);\n  }\n\n  /** Whether checkmark indicator for single-selection options is hidden. */\n  get hideSingleSelectionIndicator() {\n    return this._hideSingleSelectionIndicator;\n  }\n  set hideSingleSelectionIndicator(value) {\n    this._hideSingleSelectionIndicator = coerceBooleanProperty(value);\n    this._syncListboxProperties();\n  }\n\n  /** Combined stream of all of the child chips' selection change events. */\n  get chipSelectionChanges() {\n    return this._getChipStream(chip => chip.selectionChange);\n  }\n\n  /** Combined stream of all of the child chips' blur events. */\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n\n  /** The value of the listbox, which is the combined value of the selected chips. */\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this.writeValue(value);\n    this._value = value;\n  }\n  ngAfterContentInit() {\n    if (this._pendingInitialValue !== undefined) {\n      Promise.resolve().then(() => {\n        this._setSelectionByValue(this._pendingInitialValue, false);\n        this._pendingInitialValue = undefined;\n      });\n    }\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      // Update listbox selectable/multiple properties on chips\n      this._syncListboxProperties();\n    });\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\n    this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n      if (!this.multiple) {\n        this._chips.forEach(chip => {\n          if (chip !== event.source) {\n            chip._setSelectedState(false, false, false);\n          }\n        });\n      }\n      if (event.isUserInput) {\n        this._propagateChanges();\n      }\n    });\n  }\n\n  /**\n   * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\n   * are no selected chips.\n   */\n  focus() {\n    if (this.disabled) {\n      return;\n    }\n    const firstSelectedChip = this._getFirstSelectedChip();\n    if (firstSelectedChip && !firstSelectedChip.disabled) {\n      firstSelectedChip.focus();\n    } else if (this._chips.length > 0) {\n      this._keyManager.setFirstItemActive();\n    } else {\n      this._elementRef.nativeElement.focus();\n    }\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  writeValue(value) {\n    if (this._chips) {\n      this._setSelectionByValue(value, false);\n    } else if (value != null) {\n      this._pendingInitialValue = value;\n    }\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  /** Selects all chips with value. */\n  _setSelectionByValue(value, isUserInput = true) {\n    this._clearSelection();\n    if (Array.isArray(value)) {\n      value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n    } else {\n      this._selectValue(value, isUserInput);\n    }\n  }\n\n  /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\n  _blur() {\n    if (!this.disabled) {\n      // Wait to see if focus moves to an individual chip.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n  _keydown(event) {\n    if (event.keyCode === TAB) {\n      super._allowFocusEscape();\n    }\n  }\n\n  /** Marks the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Emits change event to set the model value. */\n  _propagateChanges() {\n    let valueToEmit = null;\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(chip => chip.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : undefined;\n    }\n    this._value = valueToEmit;\n    this.change.emit(new MatChipListboxChange(this, valueToEmit));\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Deselects every chip in the listbox.\n   * @param skip Chip that should not be deselected.\n   */\n  _clearSelection(skip) {\n    this._chips.forEach(chip => {\n      if (chip !== skip) {\n        chip.deselect();\n      }\n    });\n  }\n\n  /**\n   * Finds and selects the chip based on its value.\n   * @returns Chip that has the corresponding value.\n   */\n  _selectValue(value, isUserInput) {\n    const correspondingChip = this._chips.find(chip => {\n      return chip.value != null && this.compareWith(chip.value, value);\n    });\n    if (correspondingChip) {\n      isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n    }\n    return correspondingChip;\n  }\n\n  /** Syncs the chip-listbox selection state with the individual chips. */\n  _syncListboxProperties() {\n    if (this._chips) {\n      // Defer setting the value in order to avoid the \"Expression\n      // has changed after it was checked\" errors from Angular.\n      Promise.resolve().then(() => {\n        this._chips.forEach(chip => {\n          chip._chipListMultiple = this.multiple;\n          chip.chipListSelectable = this._selectable;\n          chip._chipListHideSingleSelectionIndicator = this.hideSingleSelectionIndicator;\n          chip._changeDetectorRef.markForCheck();\n        });\n      });\n    }\n  }\n\n  /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\n  _getFirstSelectedChip() {\n    if (Array.isArray(this.selected)) {\n      return this.selected.length ? this.selected[0] : undefined;\n    } else {\n      return this.selected;\n    }\n  }\n\n  /**\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n   * non-interactive actions since the user can't do anything with them.\n   */\n  _skipPredicate(action) {\n    // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\n    // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\n    // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\n    // exceptions for compound widgets.\n    //\n    // From [Developing a Keyboard Interface](\n    // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n    //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n    //   Listbox...\"\n    return !action.isInteractive;\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵMatChipListbox_BaseFactory;\n    return function MatChipListbox_Factory(t) {\n      return (ɵMatChipListbox_BaseFactory || (ɵMatChipListbox_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipListbox)))(t || MatChipListbox);\n    };\n  }();\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipListbox,\n    selectors: [[\"mat-chip-listbox\"]],\n    contentQueries: function MatChipListbox_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChipOption, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n      }\n    },\n    hostAttrs: [\"ngSkipHydration\", \"\", 1, \"mdc-evolution-chip-set\", \"mat-mdc-chip-listbox\"],\n    hostVars: 11,\n    hostBindings: function MatChipListbox_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatChipListbox_focus_HostBindingHandler() {\n          return ctx.focus();\n        })(\"blur\", function MatChipListbox_blur_HostBindingHandler() {\n          return ctx._blur();\n        })(\"keydown\", function MatChipListbox_keydown_HostBindingHandler($event) {\n          return ctx._keydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"tabIndex\", ctx.empty ? -1 : ctx.tabIndex);\n        i0.ɵɵattribute(\"role\", ctx.role)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-multiselectable\", ctx.multiple)(\"aria-orientation\", ctx.ariaOrientation);\n        i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-required\", ctx.required);\n      }\n    },\n    inputs: {\n      tabIndex: \"tabIndex\",\n      multiple: \"multiple\",\n      ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"],\n      selectable: \"selectable\",\n      compareWith: \"compareWith\",\n      required: \"required\",\n      hideSingleSelectionIndicator: \"hideSingleSelectionIndicator\",\n      value: \"value\"\n    },\n    outputs: {\n      change: \"change\"\n    },\n    features: [i0.ɵɵProvidersFeature([MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 0,\n    consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n    template: function MatChipListbox_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [_c6],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipListbox, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-listbox',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      inputs: ['tabIndex'],\n      host: {\n        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\n        '[attr.role]': 'role',\n        '[tabIndex]': 'empty ? -1 : tabIndex',\n        // TODO: replace this binding with use of AriaDescriber\n        '[attr.aria-describedby]': '_ariaDescribedby || null',\n        '[attr.aria-required]': 'role ? required : null',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-multiselectable]': 'multiple',\n        '[attr.aria-orientation]': 'ariaOrientation',\n        'ngSkipHydration': '',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()',\n        '(keydown)': '_keydown($event)'\n      },\n      providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], null, {\n    multiple: [{\n      type: Input\n    }],\n    ariaOrientation: [{\n      type: Input,\n      args: ['aria-orientation']\n    }],\n    selectable: [{\n      type: Input\n    }],\n    compareWith: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    hideSingleSelectionIndicator: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChipOption, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/** Change event object that is emitted when the chip grid value has changed. */\nclass MatChipGridChange {\n  constructor( /** Chip grid that emitted the event. */\n  source, /** Value of the chip grid when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n\n/**\n * Boilerplate for applying mixins to MatChipGrid.\n * @docs-private\n */\nclass MatChipGridBase extends MatChipSet {\n  constructor(elementRef, changeDetectorRef, dir, _defaultErrorStateMatcher, _parentForm, _parentFormGroup,\n  /**\n   * Form control bound to the component.\n   * Implemented as part of `MatFormFieldControl`.\n   * @docs-private\n   */\n  ngControl) {\n    super(elementRef, changeDetectorRef, dir);\n    this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n    this._parentForm = _parentForm;\n    this._parentFormGroup = _parentFormGroup;\n    this.ngControl = ngControl;\n    /**\n     * Emits whenever the component state changes and should cause the parent\n     * form-field to update. Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    this.stateChanges = new Subject();\n  }\n}\nconst _MatChipGridMixinBase = mixinErrorState(MatChipGridBase);\n\n/**\n * An extension of the MatChipSet component used with MatChipRow chips and\n * the matChipInputFor directive.\n */\nclass MatChipGrid extends _MatChipGridMixinBase {\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get disabled() {\n    return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get id() {\n    return this._chipInput.id;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get empty() {\n    return (!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0);\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get placeholder() {\n    return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n  }\n  set placeholder(value) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n\n  /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\n  get focused() {\n    return this._chipInput.focused || this._hasFocusedChip();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat() {\n    return !this.empty || this.focused;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this._value = value;\n  }\n\n  /** Combined stream of all of the child chips' blur events. */\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n  constructor(elementRef, changeDetectorRef, dir, parentForm, parentFormGroup, defaultErrorStateMatcher, ngControl) {\n    super(elementRef, changeDetectorRef, dir, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    this.controlType = 'mat-chip-grid';\n    this._defaultRole = 'grid';\n    /**\n     * List of element ids to propagate to the chipInput's aria-describedby attribute.\n     */\n    this._ariaDescribedbyIds = [];\n    /**\n     * Function when touched. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    this._onTouched = () => {};\n    /**\n     * Function when changed. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    this._onChange = () => {};\n    this._value = [];\n    /** Emits when the chip grid value has been changed by the user. */\n    this.change = new EventEmitter();\n    /**\n     * Emits whenever the raw value of the chip-grid changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    this.valueChange = new EventEmitter();\n    this._chips = undefined;\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n  ngAfterContentInit() {\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._blur();\n      this.stateChanges.next();\n    });\n    merge(this.chipFocusChanges, this._chips.changes).pipe(takeUntil(this._destroyed)).subscribe(() => this.stateChanges.next());\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\n    }\n  }\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.stateChanges.complete();\n  }\n\n  /** Associates an HTML input element with this chip grid. */\n  registerInput(inputElement) {\n    this._chipInput = inputElement;\n    this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick(event) {\n    if (!this.disabled && !this._originatesFromChip(event)) {\n      this.focus();\n    }\n  }\n\n  /**\n   * Focuses the first chip in this chip grid, or the associated input when there\n   * are no eligible chips.\n   */\n  focus() {\n    if (this.disabled || this._chipInput.focused) {\n      return;\n    }\n    if (!this._chips.length || this._chips.first.disabled) {\n      // Delay until the next tick, because this can cause a \"changed after checked\"\n      // error if the input does something on focus (e.g. opens an autocomplete).\n      Promise.resolve().then(() => this._chipInput.focus());\n    } else if (this._chips.length) {\n      this._keyManager.setFirstItemActive();\n    }\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids) {\n    // We must keep this up to date to handle the case where ids are set\n    // before the chip input is registered.\n    this._ariaDescribedbyIds = ids;\n    this._chipInput?.setDescribedByIds(ids);\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  writeValue(value) {\n    // The user is responsible for creating the child chips, so we just store the value.\n    this._value = value;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this.stateChanges.next();\n  }\n\n  /** When blurred, mark the field as touched when focus moved outside the chip grid. */\n  _blur() {\n    if (!this.disabled) {\n      // Check whether the focus moved to chip input.\n      // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n      // to chip input, do nothing.\n      // Timeout is needed to wait for the focus() event trigger on chip input.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._propagateChanges();\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n\n  /**\n   * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the grid from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    if (!this._chipInput.focused) {\n      super._allowFocusEscape();\n    }\n  }\n\n  /** Handles custom keyboard events. */\n  _handleKeydown(event) {\n    if (event.keyCode === TAB) {\n      if (this._chipInput.focused && hasModifierKey(event, 'shiftKey') && this._chips.length && !this._chips.last.disabled) {\n        event.preventDefault();\n        if (this._keyManager.activeItem) {\n          this._keyManager.setActiveItem(this._keyManager.activeItem);\n        } else {\n          this._focusLastChip();\n        }\n      } else {\n        // Use the super method here since it doesn't check for the input\n        // focused state. This allows focus to escape if there's only one\n        // disabled chip left in the list.\n        super._allowFocusEscape();\n      }\n    } else if (!this._chipInput.focused) {\n      super._handleKeydown(event);\n    }\n    this.stateChanges.next();\n  }\n  _focusLastChip() {\n    if (this._chips.length) {\n      this._chips.last.focus();\n    }\n  }\n\n  /** Emits change event to set the model value. */\n  _propagateChanges() {\n    const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\n    this._value = valueToEmit;\n    this.change.emit(new MatChipGridChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Mark the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n  static #_ = this.ɵfac = function MatChipGrid_Factory(t) {\n    return new (t || MatChipGrid)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.Directionality, 8), i0.ɵɵdirectiveInject(i2$1.NgForm, 8), i0.ɵɵdirectiveInject(i2$1.FormGroupDirective, 8), i0.ɵɵdirectiveInject(i3.ErrorStateMatcher), i0.ɵɵdirectiveInject(i2$1.NgControl, 10));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipGrid,\n    selectors: [[\"mat-chip-grid\"]],\n    contentQueries: function MatChipGrid_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChipRow, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip-set\", \"mat-mdc-chip-grid\", \"mdc-evolution-chip-set\"],\n    hostVars: 10,\n    hostBindings: function MatChipGrid_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatChipGrid_focus_HostBindingHandler() {\n          return ctx.focus();\n        })(\"blur\", function MatChipGrid_blur_HostBindingHandler() {\n          return ctx._blur();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"tabIndex\", ctx._chips && ctx._chips.length === 0 ? -1 : ctx.tabIndex);\n        i0.ɵɵattribute(\"role\", ctx.role)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState);\n        i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-invalid\", ctx.errorState)(\"mat-mdc-chip-list-required\", ctx.required);\n      }\n    },\n    inputs: {\n      tabIndex: \"tabIndex\",\n      disabled: \"disabled\",\n      placeholder: \"placeholder\",\n      required: \"required\",\n      value: \"value\",\n      errorStateMatcher: \"errorStateMatcher\"\n    },\n    outputs: {\n      change: \"change\",\n      valueChange: \"valueChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatFormFieldControl,\n      useExisting: MatChipGrid\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 0,\n    consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n    template: function MatChipGrid_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [_c6],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipGrid, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-grid',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      inputs: ['tabIndex'],\n      host: {\n        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\n        '[attr.role]': 'role',\n        '[tabIndex]': '_chips && _chips.length === 0 ? -1 : tabIndex',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()'\n      },\n      providers: [{\n        provide: MatFormFieldControl,\n        useExisting: MatChipGrid\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2$1.NgForm,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2$1.FormGroupDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i3.ErrorStateMatcher\n    }, {\n      type: i2$1.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    errorStateMatcher: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChipRow, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n// Increasing integer for generating unique ids.\nlet nextUniqueId = 0;\n\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of a `<mat-chip-grid>`.\n */\nclass MatChipInput {\n  /** Register input for chip list */\n  set chipGrid(value) {\n    if (value) {\n      this._chipGrid = value;\n      this._chipGrid.registerInput(this);\n    }\n  }\n\n  /**\n   * Whether or not the chipEnd event will be emitted when the input is blurred.\n   */\n  get addOnBlur() {\n    return this._addOnBlur;\n  }\n  set addOnBlur(value) {\n    this._addOnBlur = coerceBooleanProperty(value);\n  }\n\n  /** Whether the input is disabled. */\n  get disabled() {\n    return this._disabled || this._chipGrid && this._chipGrid.disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  /** Whether the input is empty. */\n  get empty() {\n    return !this.inputElement.value;\n  }\n  constructor(_elementRef, defaultOptions, formField) {\n    this._elementRef = _elementRef;\n    /** Whether the control is focused. */\n    this.focused = false;\n    this._addOnBlur = false;\n    /** Emitted when a chip is to be added. */\n    this.chipEnd = new EventEmitter();\n    /** The input's placeholder text. */\n    this.placeholder = '';\n    /** Unique id for the input. */\n    this.id = `mat-mdc-chip-list-input-${nextUniqueId++}`;\n    this._disabled = false;\n    this.inputElement = this._elementRef.nativeElement;\n    this.separatorKeyCodes = defaultOptions.separatorKeyCodes;\n    if (formField) {\n      this.inputElement.classList.add('mat-mdc-form-field-input-control');\n    }\n  }\n  ngOnChanges() {\n    this._chipGrid.stateChanges.next();\n  }\n  ngOnDestroy() {\n    this.chipEnd.complete();\n  }\n  ngAfterContentInit() {\n    this._focusLastChipOnBackspace = this.empty;\n  }\n\n  /** Utility method to make host definition/tests more clear. */\n  _keydown(event) {\n    if (event) {\n      // To prevent the user from accidentally deleting chips when pressing BACKSPACE continuously,\n      // We focus the last chip on backspace only after the user has released the backspace button,\n      // And the input is empty (see behaviour in _keyup)\n      if (event.keyCode === BACKSPACE && this._focusLastChipOnBackspace) {\n        this._chipGrid._focusLastChip();\n        event.preventDefault();\n        return;\n      } else {\n        this._focusLastChipOnBackspace = false;\n      }\n    }\n    this._emitChipEnd(event);\n  }\n\n  /**\n   * Pass events to the keyboard manager. Available here for tests.\n   */\n  _keyup(event) {\n    // Allow user to move focus to chips next time he presses backspace\n    if (!this._focusLastChipOnBackspace && event.keyCode === BACKSPACE && this.empty) {\n      this._focusLastChipOnBackspace = true;\n      event.preventDefault();\n    }\n  }\n\n  /** Checks to see if the blur should emit the (chipEnd) event. */\n  _blur() {\n    if (this.addOnBlur) {\n      this._emitChipEnd();\n    }\n    this.focused = false;\n    // Blur the chip list if it is not focused\n    if (!this._chipGrid.focused) {\n      this._chipGrid._blur();\n    }\n    this._chipGrid.stateChanges.next();\n  }\n  _focus() {\n    this.focused = true;\n    this._focusLastChipOnBackspace = this.empty;\n    this._chipGrid.stateChanges.next();\n  }\n\n  /** Checks to see if the (chipEnd) event needs to be emitted. */\n  _emitChipEnd(event) {\n    if (!event || this._isSeparatorKey(event)) {\n      this.chipEnd.emit({\n        input: this.inputElement,\n        value: this.inputElement.value,\n        chipInput: this\n      });\n      event?.preventDefault();\n    }\n  }\n  _onInput() {\n    // Let chip list know whenever the value changes.\n    this._chipGrid.stateChanges.next();\n  }\n\n  /** Focuses the input. */\n  focus() {\n    this.inputElement.focus();\n  }\n\n  /** Clears the input */\n  clear() {\n    this.inputElement.value = '';\n    this._focusLastChipOnBackspace = true;\n  }\n  setDescribedByIds(ids) {\n    const element = this._elementRef.nativeElement;\n    // Set the value directly in the DOM since this binding\n    // is prone to \"changed after checked\" errors.\n    if (ids.length) {\n      element.setAttribute('aria-describedby', ids.join(' '));\n    } else {\n      element.removeAttribute('aria-describedby');\n    }\n  }\n\n  /** Checks whether a keycode is one of the configured separators. */\n  _isSeparatorKey(event) {\n    return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n  }\n  static #_ = this.ɵfac = function MatChipInput_Factory(t) {\n    return new (t || MatChipInput)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipInput,\n    selectors: [[\"input\", \"matChipInputFor\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-chip-input\", \"mat-mdc-input-element\", \"mdc-text-field__input\", \"mat-input-element\"],\n    hostVars: 6,\n    hostBindings: function MatChipInput_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) {\n          return ctx._keydown($event);\n        })(\"keyup\", function MatChipInput_keyup_HostBindingHandler($event) {\n          return ctx._keyup($event);\n        })(\"blur\", function MatChipInput_blur_HostBindingHandler() {\n          return ctx._blur();\n        })(\"focus\", function MatChipInput_focus_HostBindingHandler() {\n          return ctx._focus();\n        })(\"input\", function MatChipInput_input_HostBindingHandler() {\n          return ctx._onInput();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipGrid && ctx._chipGrid.ngControl ? ctx._chipGrid.ngControl.invalid : null)(\"aria-required\", ctx._chipGrid && ctx._chipGrid.required || null)(\"required\", ctx._chipGrid && ctx._chipGrid.required || null);\n      }\n    },\n    inputs: {\n      chipGrid: [\"matChipInputFor\", \"chipGrid\"],\n      addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"],\n      separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"],\n      placeholder: \"placeholder\",\n      id: \"id\",\n      disabled: \"disabled\"\n    },\n    outputs: {\n      chipEnd: \"matChipInputTokenEnd\"\n    },\n    exportAs: [\"matChipInput\", \"matChipInputFor\"],\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipInput, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matChipInputFor]',\n      exportAs: 'matChipInput, matChipInputFor',\n      host: {\n        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\n        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\n        // the MDC chips were landed initially with it.\n        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\n        '(keydown)': '_keydown($event)',\n        '(keyup)': '_keyup($event)',\n        '(blur)': '_blur()',\n        '(focus)': '_focus()',\n        '(input)': '_onInput()',\n        '[id]': 'id',\n        '[attr.disabled]': 'disabled || null',\n        '[attr.placeholder]': 'placeholder || null',\n        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\n        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\n        '[attr.required]': '_chipGrid && _chipGrid.required || null'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_CHIPS_DEFAULT_OPTIONS]\n      }]\n    }, {\n      type: i1$2.MatFormField,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_FORM_FIELD]\n      }]\n    }];\n  }, {\n    chipGrid: [{\n      type: Input,\n      args: ['matChipInputFor']\n    }],\n    addOnBlur: [{\n      type: Input,\n      args: ['matChipInputAddOnBlur']\n    }],\n    separatorKeyCodes: [{\n      type: Input,\n      args: ['matChipInputSeparatorKeyCodes']\n    }],\n    chipEnd: [{\n      type: Output,\n      args: ['matChipInputTokenEnd']\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\nconst CHIP_DECLARATIONS = [MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipInput, MatChipListbox, MatChipOption, MatChipRemove, MatChipRow, MatChipSet, MatChipTrailingIcon];\nclass MatChipsModule {\n  static #_ = this.ɵfac = function MatChipsModule_Factory(t) {\n    return new (t || MatChipsModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatChipsModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [ErrorStateMatcher, {\n      provide: MAT_CHIPS_DEFAULT_OPTIONS,\n      useValue: {\n        separatorKeyCodes: [ENTER]\n      }\n    }],\n    imports: [MatCommonModule, CommonModule, MatRippleModule, MatCommonModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CommonModule, MatRippleModule],\n      exports: [MatCommonModule, CHIP_DECLARATIONS],\n      declarations: [MatChipAction, CHIP_DECLARATIONS],\n      providers: [ErrorStateMatcher, {\n        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n        useValue: {\n          separatorKeyCodes: [ENTER]\n        }\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };","map":{"version":3,"names":["coerceBooleanProperty","ANIMATION_MODULE_TYPE","i0","InjectionToken","Directive","Inject","Input","EventEmitter","inject","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","Attribute","ContentChildren","Output","ContentChild","ViewChild","QueryList","forwardRef","Self","NgModule","i2","DOCUMENT","CommonModule","i3","mixinTabIndex","mixinColor","mixinDisableRipple","mixinDisabled","MatRippleLoader","MAT_RIPPLE_GLOBAL_OPTIONS","mixinErrorState","MatCommonModule","MatRippleModule","ErrorStateMatcher","i1","FocusKeyManager","Subject","merge","take","takeUntil","startWith","switchMap","ENTER","SPACE","BACKSPACE","DELETE","TAB","hasModifierKey","i1$1","i2$1","NG_VALUE_ACCESSOR","Validators","i1$2","MatFormFieldControl","MAT_FORM_FIELD","MatChip_span_3_Template","rf","ctx","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","MatChip_span_7_Template","_c0","_c1","MatChipOption_span_3_Template","ɵɵnamespaceSVG","ɵɵelement","MatChipOption_span_7_Template","_c2","MatChipRow_ng_container_0_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","MatChipRow_span_2_Template","MatChipRow_ng_container_4_Template","MatChipRow_ng_container_5_ng_content_1_Template","MatChipRow_ng_container_5_ng_template_2_Template","MatChipRow_ng_container_5_Template","ɵɵtemplate","ɵɵtemplateRefExtractor","_r6","ɵɵreference","ctx_r3","ɵɵnextContext","ɵɵadvance","ɵɵproperty","contentEditInput","MatChipRow_span_7_Template","_c3","_c4","_c5","_c6","MAT_CHIPS_DEFAULT_OPTIONS","MAT_CHIP_AVATAR","MAT_CHIP_TRAILING_ICON","MAT_CHIP_REMOVE","MAT_CHIP","_MatChipActionBase","_MatChipActionMixinBase","MatChipAction","disabled","_disabled","_parentChip","value","_getDisabledAttribute","_allowFocusWhenDisabled","_getTabindex","isInteractive","tabIndex","toString","constructor","_elementRef","_isPrimary","nativeElement","nodeName","setAttribute","focus","_handleClick","event","preventDefault","_handlePrimaryActionInteraction","_handleKeydown","keyCode","_isEditing","_","ɵfac","MatChipAction_Factory","t","ɵɵdirectiveInject","ElementRef","_2","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","hostVars","hostBindings","MatChipAction_HostBindings","ɵɵlistener","MatChipAction_click_HostBindingHandler","$event","MatChipAction_keydown_HostBindingHandler","ɵɵattribute","ɵɵclassProp","inputs","features","ɵɵInheritDefinitionFeature","ngDevMode","ɵsetClassMetadata","args","selector","host","undefined","decorators","MatChipAvatar","MatChipAvatar_Factory","ɵɵProvidersFeature","provide","useExisting","providers","MatChipTrailingIcon","arguments","ɵMatChipTrailingIcon_BaseFactory","MatChipTrailingIcon_Factory","ɵɵgetInheritedFactory","MatChipRemove","stopPropagation","remove","ɵMatChipRemove_BaseFactory","MatChipRemove_Factory","MatChipRemove_HostBindings","uid","_MatChipMixinBase","MatChip","_hasFocus","_hasFocusInternal","_value","_textElement","textContent","trim","removable","_removable","highlighted","_highlighted","ripple","_rippleLoader","getRipple","v","attachRipple","_changeDetectorRef","elementRef","_ngZone","_focusMonitor","_document","animationMode","_globalRippleOptions","_onFocus","_onBlur","role","id","ariaLabel","ariaDescription","_ariaDescriptionId","removed","destroyed","basicChipAttrName","_animationsDisabled","parseInt","defaultTabIndex","_monitorFocus","configureRipple","className","_isRippleDisabled","ngOnInit","element","_isBasicChip","hasAttribute","tagName","toLowerCase","ngAfterViewInit","querySelector","_pendingFocus","ngAfterContentInit","_actionChanges","_allLeadingIcons","changes","_allTrailingIcons","_allRemoveIcons","subscribe","markForCheck","ngDoCheck","setDisabled","ngOnDestroy","stopMonitoring","unsubscribe","emit","chip","complete","disableRipple","_hasTrailingIcon","trailingIcon","removeIcon","primaryAction","_getSourceAction","target","_getActions","find","action","contains","result","push","monitor","origin","hasFocus","next","onStable","pipe","run","MatChip_Factory","ChangeDetectorRef","NgZone","FocusMonitor","ɵɵinjectAttribute","ɵcmp","ɵɵdefineComponent","contentQueries","MatChip_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","leadingIcon","first","viewQuery","MatChip_Query","ɵɵviewQuery","MatChip_HostBindings","MatChip_keydown_HostBindingHandler","ɵɵhostProperty","color","outputs","exportAs","ngContentSelectors","decls","vars","consts","template","MatChip_Template","ɵɵprojectionDef","dependencies","NgIf","styles","encapsulation","changeDetection","None","OnPush","descendants","MatChipSelectionChange","source","selected","isUserInput","MatChipOption","_defaultOptions","optional","chipListSelectable","_chipListMultiple","_chipListHideSingleSelectionIndicator","hideSingleSelectionIndicator","_selectable","_selected","selectionChange","selectable","_setSelectedState","ariaSelected","select","deselect","selectViaInteraction","toggleSelected","_hasLeadingGraphic","isSelected","emitEvent","ɵMatChipOption_BaseFactory","MatChipOption_Factory","MatChipOption_HostBindings","MatChipOption_Template","ɵɵtext","ɵɵtextInterpolate","MatChipEditInput","initialize","initialValue","getNativeElement","setValue","_moveCursorToEndOfInput","getValue","range","createRange","selectNodeContents","collapse","sel","window","getSelection","removeAllRanges","addRange","MatChipEditInput_Factory","MatChipRow","changeDetectorRef","ngZone","focusMonitor","globalRippleOptions","_editStartPending","editable","edited","_onEditFinish","_handleFocus","_startEditing","_handleDoubleclick","detectChanges","setTimeout","_getEditInput","activeElement","body","defaultEditInput","MatChipRow_Factory","MatChipRow_ContentQueries","MatChipRow_Query","MatChipRow_HostBindings","MatChipRow_focus_HostBindingHandler","MatChipRow_dblclick_HostBindingHandler","MatChipRow_Template","NgSwitch","NgSwitchCase","MatChipSetBase","_MatChipSetMixinBase","MatChipSet","chipFocusChanges","_getChipStream","chipDestroyedChanges","_syncChipsState","empty","_chips","length","_explicitRole","_defaultRole","focused","_hasFocusedChip","_dir","_lastDestroyedFocusedChipIndex","_destroyed","_chipActions","_setUpFocusManagement","_trackChipSetChanges","_trackDestroyedFocusedChip","_keyManager","destroy","some","forEach","_originatesFromChip","onKeydown","_isValidIndex","index","_allowFocusEscape","previousTabIndex","mappingFunction","map","currentElement","classList","parentElement","chips","actions","reset","notifyOnChanges","withVerticalOrientation","withHorizontalOrientation","withHomeAndEnd","skipPredicate","_skipPredicate","document","updateActiveItem","change","direction","Promise","resolve","then","_redirectDestroyedChipFocus","chipArray","toArray","chipIndex","indexOf","newIndex","Math","min","chipToFocus","setPreviousItemActive","MatChipSet_Factory","Directionality","MatChipSet_ContentQueries","MatChipSet_HostBindings","MatChipSet_keydown_HostBindingHandler","MatChipSet_Template","MatChipListboxChange","MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR","MatChipListbox","multi","_onTouched","_onChange","_multiple","ariaOrientation","compareWith","o1","o2","_required","_hideSingleSelectionIndicator","multiple","_syncListboxProperties","selectedChips","filter","required","chipSelectionChanges","chipBlurChanges","writeValue","_pendingInitialValue","_setSelectionByValue","_blur","_propagateChanges","firstSelectedChip","_getFirstSelectedChip","setFirstItemActive","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","_clearSelection","Array","isArray","currentValue","_selectValue","_markAsTouched","_keydown","valueToEmit","skip","correspondingChip","ɵMatChipListbox_BaseFactory","MatChipListbox_Factory","MatChipListbox_ContentQueries","MatChipListbox_HostBindings","MatChipListbox_focus_HostBindingHandler","MatChipListbox_blur_HostBindingHandler","MatChipListbox_keydown_HostBindingHandler","_ariaDescribedby","MatChipListbox_Template","MatChipGridChange","MatChipGridBase","dir","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","stateChanges","_MatChipGridMixinBase","MatChipGrid","_chipInput","placeholder","_placeholder","control","hasValidator","shouldLabelFloat","parentForm","parentFormGroup","defaultErrorStateMatcher","controlType","_ariaDescribedbyIds","valueChange","valueAccessor","Error","updateErrorState","registerInput","inputElement","setDescribedByIds","onContainerClick","ids","last","activeItem","setActiveItem","_focusLastChip","MatChipGrid_Factory","NgForm","FormGroupDirective","NgControl","MatChipGrid_ContentQueries","MatChipGrid_HostBindings","MatChipGrid_focus_HostBindingHandler","MatChipGrid_blur_HostBindingHandler","errorState","errorStateMatcher","MatChipGrid_Template","nextUniqueId","MatChipInput","chipGrid","_chipGrid","addOnBlur","_addOnBlur","defaultOptions","formField","chipEnd","separatorKeyCodes","add","ngOnChanges","_focusLastChipOnBackspace","_emitChipEnd","_keyup","_focus","_isSeparatorKey","input","chipInput","_onInput","clear","join","removeAttribute","Set","has","MatChipInput_Factory","MatChipInput_HostBindings","MatChipInput_keydown_HostBindingHandler","MatChipInput_keyup_HostBindingHandler","MatChipInput_blur_HostBindingHandler","MatChipInput_focus_HostBindingHandler","MatChipInput_input_HostBindingHandler","invalid","ɵɵNgOnChangesFeature","MatFormField","CHIP_DECLARATIONS","MatChipsModule","MatChipsModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","useValue","imports","exports","declarations"],"sources":["/Users/fabriziovaccaro/Desktop/Fabri45555.github.io/node_modules/@angular/material/fesm2022/chips.mjs"],"sourcesContent":["import {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport * as i0 from '@angular/core';\nimport {\n  InjectionToken,\n  Directive,\n  Inject,\n  Input,\n  EventEmitter,\n  inject,\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Optional,\n  Attribute,\n  ContentChildren,\n  Output,\n  ContentChild,\n  ViewChild,\n  QueryList,\n  forwardRef,\n  Self,\n  NgModule\n} from '@angular/core';\nimport * as i2 from '@angular/common';\nimport {DOCUMENT, CommonModule} from '@angular/common';\nimport * as i3 from '@angular/material/core';\nimport {\n  mixinTabIndex,\n  mixinColor,\n  mixinDisableRipple,\n  mixinDisabled,\n  MatRippleLoader,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinErrorState,\n  MatCommonModule,\n  MatRippleModule,\n  ErrorStateMatcher\n} from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport {FocusKeyManager} from '@angular/cdk/a11y';\nimport {Subject, merge} from 'rxjs';\nimport {take, takeUntil, startWith, switchMap} from 'rxjs/operators';\nimport {ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey} from '@angular/cdk/keycodes';\nimport * as i1$1 from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/forms';\nimport {NG_VALUE_ACCESSOR, Validators} from '@angular/forms';\nimport * as i1$2 from '@angular/material/form-field';\nimport {MatFormFieldControl, MAT_FORM_FIELD} from '@angular/material/form-field';\n\n/** Injection token to be used to override the default options for the chips module. */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\n */\nconst MAT_CHIP = new InjectionToken('MatChip');\n\nclass _MatChipActionBase {\n}\n\nconst _MatChipActionMixinBase = mixinTabIndex(_MatChipActionBase, -1);\n\n/**\n * Section within a chip.\n * @docs-private\n */\nclass MatChipAction extends _MatChipActionMixinBase {\n  /** Whether the action is disabled. */\n  get disabled() {\n    return this._disabled || this._parentChip.disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  /**\n   * Determine the value of the disabled attribute for this chip action.\n   */\n  _getDisabledAttribute() {\n    // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n    // string to indicate that disabled attribute should be included.\n    return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\n  }\n\n  /**\n   * Determine the value of the tabindex attribute for this chip action.\n   */\n  _getTabindex() {\n    return (this.disabled && !this._allowFocusWhenDisabled) || !this.isInteractive\n      ? null\n      : this.tabIndex.toString();\n  }\n\n  constructor(_elementRef, _parentChip) {\n    super();\n    this._elementRef = _elementRef;\n    this._parentChip = _parentChip;\n    /** Whether the action is interactive. */\n    this.isInteractive = true;\n    /** Whether this is the primary action in the chip. */\n    this._isPrimary = true;\n    this._disabled = false;\n    /**\n     * Private API to allow focusing this chip when it is disabled.\n     */\n    this._allowFocusWhenDisabled = false;\n    if (_elementRef.nativeElement.nodeName === 'BUTTON') {\n      _elementRef.nativeElement.setAttribute('type', 'button');\n    }\n  }\n\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n\n  _handleClick(event) {\n    if (!this.disabled && this.isInteractive && this._isPrimary) {\n      event.preventDefault();\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) &&\n      !this.disabled &&\n      this.isInteractive &&\n      this._isPrimary &&\n      !this._parentChip._isEditing) {\n      event.preventDefault();\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatChipAction,\n      deps: [{token: i0.ElementRef}, {token: MAT_CHIP}],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatChipAction,\n      selector: \"[matChipAction]\",\n      inputs: {\n        disabled: \"disabled\",\n        tabIndex: \"tabIndex\",\n        isInteractive: \"isInteractive\",\n        _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\"\n      },\n      host: {\n        listeners: {\"click\": \"_handleClick($event)\", \"keydown\": \"_handleKeydown($event)\"},\n        properties: {\n          \"class.mdc-evolution-chip__action--primary\": \"_isPrimary\",\n          \"class.mdc-evolution-chip__action--presentational\": \"!isInteractive\",\n          \"class.mdc-evolution-chip__action--trailing\": \"!_isPrimary\",\n          \"attr.tabindex\": \"_getTabindex()\",\n          \"attr.disabled\": \"_getDisabledAttribute()\",\n          \"attr.aria-disabled\": \"disabled\"\n        },\n        classAttribute: \"mdc-evolution-chip__action mat-mdc-chip-action\"\n      },\n      usesInheritance: true,\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatChipAction, decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[matChipAction]',\n      inputs: ['disabled', 'tabIndex'],\n      host: {\n        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\n        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\n        '[class.mdc-evolution-chip__action--presentational]': '!isInteractive',\n        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary',\n        '[attr.tabindex]': '_getTabindex()',\n        '[attr.disabled]': '_getDisabledAttribute()',\n        '[attr.aria-disabled]': 'disabled',\n        '(click)': '_handleClick($event)',\n        '(keydown)': '_handleKeydown($event)',\n      },\n    }]\n  }], ctorParameters: function () {\n    return [{type: i0.ElementRef}, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [MAT_CHIP]\n      }]\n    }];\n  }, propDecorators: {\n    isInteractive: [{\n      type: Input\n    }], disabled: [{\n      type: Input\n    }], _allowFocusWhenDisabled: [{\n      type: Input\n    }]\n  }\n});\n\n/** Avatar image within a chip. */\nclass MatChipAvatar {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatChipAvatar,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatChipAvatar,\n      selector: \"mat-chip-avatar, [matChipAvatar]\",\n      host: {\n        attributes: {\"role\": \"img\"},\n        classAttribute: \"mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary\"\n      },\n      providers: [{provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar}],\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatChipAvatar, decorators: [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-avatar, [matChipAvatar]',\n      host: {\n        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n        'role': 'img',\n      },\n      providers: [{provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar}],\n    }]\n  }]\n});\n\n/** Non-interactive trailing icon in a chip. */\nclass MatChipTrailingIcon extends MatChipAction {\n  constructor() {\n    super(...arguments);\n    /**\n     * MDC considers all trailing actions as a remove icon,\n     * but we support non-interactive trailing icons.\n     */\n    this.isInteractive = false;\n    this._isPrimary = false;\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatChipTrailingIcon,\n      deps: null,\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatChipTrailingIcon,\n      selector: \"mat-chip-trailing-icon, [matChipTrailingIcon]\",\n      host: {\n        attributes: {\"aria-hidden\": \"true\"},\n        classAttribute: \"mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\"\n      },\n      providers: [{provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon}],\n      usesInheritance: true,\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatChipTrailingIcon, decorators: [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n      host: {\n        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'aria-hidden': 'true',\n      },\n      providers: [{provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon}],\n    }]\n  }]\n});\n\n/**\n * Directive to remove the parent chip when the trailing icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <mat-icon matChipRemove>cancel</mat-icon>\n * </mat-chip>\n * ```\n */\nclass MatChipRemove extends MatChipAction {\n  constructor() {\n    super(...arguments);\n    this._isPrimary = false;\n  }\n\n  _handleClick(event) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip.remove();\n    }\n  }\n\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip.remove();\n    }\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatChipRemove,\n      deps: null,\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatChipRemove,\n      selector: \"[matChipRemove]\",\n      host: {\n        attributes: {\"role\": \"button\"},\n        properties: {\"attr.aria-hidden\": \"null\"},\n        classAttribute: \"mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-mdc-focus-indicator mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\"\n      },\n      providers: [{provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove}],\n      usesInheritance: true,\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatChipRemove, decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[matChipRemove]',\n      host: {\n        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-mdc-focus-indicator ' +\n          'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'role': 'button',\n        '[attr.aria-hidden]': 'null',\n      },\n      providers: [{provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove}],\n    }]\n  }]\n});\n\nlet uid = 0;\n/**\n * Boilerplate for applying mixins to MatChip.\n * @docs-private\n */\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n})), 'primary'), -1);\n\n/**\n * Material design styled Chip base component. Used inside the MatChipSet component.\n *\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\n */\nclass MatChip extends _MatChipMixinBase {\n  _hasFocus() {\n    return this._hasFocusInternal;\n  }\n\n  /**\n   * The value of the chip. Defaults to the content inside\n   * the `mat-mdc-chip-action-label` element.\n   */\n  get value() {\n    return this._value !== undefined ? this._value : this._textElement.textContent.trim();\n  }\n\n  set value(value) {\n    this._value = value;\n  }\n\n  /**\n   * Determines whether or not the chip displays the remove styling and emits (removed) events.\n   */\n  get removable() {\n    return this._removable;\n  }\n\n  set removable(value) {\n    this._removable = coerceBooleanProperty(value);\n  }\n\n  /**\n   * Colors the chip for emphasis as if it were selected.\n   */\n  get highlighted() {\n    return this._highlighted;\n  }\n\n  set highlighted(value) {\n    this._highlighted = coerceBooleanProperty(value);\n  }\n\n  /**\n   * Reference to the MatRipple instance of the chip.\n   * @deprecated Considered an implementation detail. To be removed.\n   * @breaking-change 17.0.0\n   */\n  get ripple() {\n    return this._rippleLoader?.getRipple(this._elementRef.nativeElement);\n  }\n\n  set ripple(v) {\n    this._rippleLoader?.attachRipple(this._elementRef.nativeElement, v);\n  }\n\n  constructor(_changeDetectorRef, elementRef, _ngZone, _focusMonitor, _document, animationMode, _globalRippleOptions, tabIndex) {\n    super(elementRef);\n    this._changeDetectorRef = _changeDetectorRef;\n    this._ngZone = _ngZone;\n    this._focusMonitor = _focusMonitor;\n    this._globalRippleOptions = _globalRippleOptions;\n    /** Emits when the chip is focused. */\n    this._onFocus = new Subject();\n    /** Emits when the chip is blurred. */\n    this._onBlur = new Subject();\n    /** Role for the root of the chip. */\n    this.role = null;\n    /** Whether the chip has focus. */\n    this._hasFocusInternal = false;\n    /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n    this.id = `mat-mdc-chip-${uid++}`;\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n    // `ariaLabel` may be unnecessary, and `_computeAriaAccessibleName` only supports\n    // datepicker's use case.\n    /** ARIA label for the content of the chip. */\n    this.ariaLabel = null;\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n    // `ariaDescription` may be unnecessary, and `_computeAriaAccessibleName` only supports\n    // datepicker's use case.\n    /** ARIA description for the content of the chip. */\n    this.ariaDescription = null;\n    /** Id of a span that contains this chip's aria description. */\n    this._ariaDescriptionId = `${this.id}-aria-description`;\n    this._removable = true;\n    this._highlighted = false;\n    /** Emitted when a chip is to be removed. */\n    this.removed = new EventEmitter();\n    /** Emitted when the chip is destroyed. */\n    this.destroyed = new EventEmitter();\n    /** The unstyled chip selector for this component. */\n    this.basicChipAttrName = 'mat-basic-chip';\n    /**\n     * Handles the lazy creation of the MatChip ripple.\n     * Used to improve initial load time of large applications.\n     */\n    this._rippleLoader = inject(MatRippleLoader);\n    this._document = _document;\n    this._animationsDisabled = animationMode === 'NoopAnimations';\n    if (tabIndex != null) {\n      this.tabIndex = parseInt(tabIndex) ?? this.defaultTabIndex;\n    }\n    this._monitorFocus();\n    this._rippleLoader?.configureRipple(this._elementRef.nativeElement, {\n      className: 'mat-mdc-chip-ripple',\n      disabled: this._isRippleDisabled(),\n    });\n  }\n\n  ngOnInit() {\n    // This check needs to happen in `ngOnInit` so the overridden value of\n    // `basicChipAttrName` coming from base classes can be picked up.\n    const element = this._elementRef.nativeElement;\n    this._isBasicChip =\n      element.hasAttribute(this.basicChipAttrName) ||\n      element.tagName.toLowerCase() === this.basicChipAttrName;\n  }\n\n  ngAfterViewInit() {\n    this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\n    if (this._pendingFocus) {\n      this._pendingFocus = false;\n      this.focus();\n    }\n  }\n\n  ngAfterContentInit() {\n    // Since the styling depends on the presence of some\n    // actions, we have to mark for check on changes.\n    this._actionChanges = merge(this._allLeadingIcons.changes, this._allTrailingIcons.changes, this._allRemoveIcons.changes).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  ngDoCheck() {\n    this._rippleLoader.setDisabled(this._elementRef.nativeElement, this._isRippleDisabled());\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._actionChanges?.unsubscribe();\n    this.destroyed.emit({chip: this});\n    this.destroyed.complete();\n  }\n\n  /**\n   * Allows for programmatic removal of the chip.\n   *\n   * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n   */\n  remove() {\n    if (this.removable) {\n      this.removed.emit({chip: this});\n    }\n  }\n\n  /** Whether or not the ripple should be disabled. */\n  _isRippleDisabled() {\n    return (this.disabled ||\n      this.disableRipple ||\n      this._animationsDisabled ||\n      this._isBasicChip ||\n      !!this._globalRippleOptions?.disabled);\n  }\n\n  /** Returns whether the chip has a trailing icon. */\n  _hasTrailingIcon() {\n    return !!(this.trailingIcon || this.removeIcon);\n  }\n\n  /** Handles keyboard events on the chip. */\n  _handleKeydown(event) {\n    if (event.keyCode === BACKSPACE || event.keyCode === DELETE) {\n      event.preventDefault();\n      this.remove();\n    }\n  }\n\n  /** Allows for programmatic focusing of the chip. */\n  focus() {\n    if (!this.disabled) {\n      // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n      // This can happen if the consumer tries to focus a chip immediately after it is added.\n      // Queue the method to be called again on init.\n      if (this.primaryAction) {\n        this.primaryAction.focus();\n      } else {\n        this._pendingFocus = true;\n      }\n    }\n  }\n\n  /** Gets the action that contains a specific target node. */\n  _getSourceAction(target) {\n    return this._getActions().find(action => {\n      const element = action._elementRef.nativeElement;\n      return element === target || element.contains(target);\n    });\n  }\n\n  /** Gets all of the actions within the chip. */\n  _getActions() {\n    const result = [];\n    if (this.primaryAction) {\n      result.push(this.primaryAction);\n    }\n    if (this.removeIcon) {\n      result.push(this.removeIcon);\n    }\n    if (this.trailingIcon) {\n      result.push(this.trailingIcon);\n    }\n    return result;\n  }\n\n  /** Handles interactions with the primary action of the chip. */\n  _handlePrimaryActionInteraction() {\n    // Empty here, but is overwritten in child classes.\n  }\n\n  /** Starts the focus monitoring process on the chip. */\n  _monitorFocus() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      const hasFocus = origin !== null;\n      if (hasFocus !== this._hasFocusInternal) {\n        this._hasFocusInternal = hasFocus;\n        if (hasFocus) {\n          this._onFocus.next({chip: this});\n        } else {\n          // When animations are enabled, Angular may end up removing the chip from the DOM a little\n          // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n          // that moves focus not the next item. To work around the issue, we defer marking the chip\n          // as not focused until the next time the zone stabilizes.\n          this._ngZone.onStable\n            .pipe(take(1))\n            .subscribe(() => this._ngZone.run(() => this._onBlur.next({chip: this})));\n        }\n      }\n    });\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatChip,\n      deps: [{token: i0.ChangeDetectorRef}, {token: i0.ElementRef}, {token: i0.NgZone}, {token: i1.FocusMonitor}, {token: DOCUMENT}, {\n        token: ANIMATION_MODULE_TYPE,\n        optional: true\n      }, {token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true}, {token: 'tabindex', attribute: true}],\n      target: i0.ɵɵFactoryTarget.Component\n    });\n  }\n  static {\n    this.ɵcmp = i0.ɵɵngDeclareComponent({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatChip,\n      selector: \"mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]\",\n      inputs: {\n        color: \"color\",\n        disabled: \"disabled\",\n        disableRipple: \"disableRipple\",\n        tabIndex: \"tabIndex\",\n        role: \"role\",\n        id: \"id\",\n        ariaLabel: [\"aria-label\", \"ariaLabel\"],\n        ariaDescription: [\"aria-description\", \"ariaDescription\"],\n        value: \"value\",\n        removable: \"removable\",\n        highlighted: \"highlighted\"\n      },\n      outputs: {removed: \"removed\", destroyed: \"destroyed\"},\n      host: {\n        listeners: {\"keydown\": \"_handleKeydown($event)\"},\n        properties: {\n          \"class.mdc-evolution-chip\": \"!_isBasicChip\",\n          \"class.mdc-evolution-chip--disabled\": \"disabled\",\n          \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\",\n          \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\",\n          \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\",\n          \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\",\n          \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\",\n          \"class.mat-mdc-chip-highlighted\": \"highlighted\",\n          \"class.mat-mdc-chip-disabled\": \"disabled\",\n          \"class.mat-mdc-basic-chip\": \"_isBasicChip\",\n          \"class.mat-mdc-standard-chip\": \"!_isBasicChip\",\n          \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\",\n          \"class._mat-animation-noopable\": \"_animationsDisabled\",\n          \"id\": \"id\",\n          \"attr.role\": \"role\",\n          \"attr.tabindex\": \"role ? tabIndex : null\",\n          \"attr.aria-label\": \"ariaLabel\"\n        },\n        classAttribute: \"mat-mdc-chip\"\n      },\n      providers: [{provide: MAT_CHIP, useExisting: MatChip}],\n      queries: [{\n        propertyName: \"leadingIcon\",\n        first: true,\n        predicate: MAT_CHIP_AVATAR,\n        descendants: true\n      }, {\n        propertyName: \"trailingIcon\",\n        first: true,\n        predicate: MAT_CHIP_TRAILING_ICON,\n        descendants: true\n      }, {\n        propertyName: \"removeIcon\",\n        first: true,\n        predicate: MAT_CHIP_REMOVE,\n        descendants: true\n      }, {\n        propertyName: \"_allLeadingIcons\",\n        predicate: MAT_CHIP_AVATAR,\n        descendants: true\n      }, {\n        propertyName: \"_allTrailingIcons\",\n        predicate: MAT_CHIP_TRAILING_ICON,\n        descendants: true\n      }, {propertyName: \"_allRemoveIcons\", predicate: MAT_CHIP_REMOVE, descendants: true}],\n      viewQueries: [{propertyName: \"primaryAction\", first: true, predicate: MatChipAction, descendants: true}],\n      exportAs: [\"matChip\"],\n      usesInheritance: true,\n      ngImport: i0,\n      template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height);--mdc-chip-container-shape-family:rounded;--mdc-chip-container-shape-radius:16px 16px 16px 16px;--mdc-chip-with-avatar-avatar-shape-family:rounded;--mdc-chip-with-avatar-avatar-shape-radius:14px 14px 14px 14px;--mdc-chip-with-avatar-avatar-size:28px;--mdc-chip-with-icon-icon-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size);width:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size);width:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{flex-basis:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n      dependencies: [{\n        kind: \"directive\",\n        type: i2.NgIf,\n        selector: \"[ngIf]\",\n        inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"]\n      }, {\n        kind: \"directive\",\n        type: MatChipAction,\n        selector: \"[matChipAction]\",\n        inputs: [\"disabled\", \"tabIndex\", \"isInteractive\", \"_allowFocusWhenDisabled\"]\n      }],\n      changeDetection: i0.ChangeDetectionStrategy.OnPush,\n      encapsulation: i0.ViewEncapsulation.None\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatChip, decorators: [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]',\n      inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n      exportAs: 'matChip',\n      host: {\n        'class': 'mat-mdc-chip',\n        '[class.mdc-evolution-chip]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-basic-chip]': '_isBasicChip',\n        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[class._mat-animation-noopable]': '_animationsDisabled',\n        '[id]': 'id',\n        '[attr.role]': 'role',\n        '[attr.tabindex]': 'role ? tabIndex : null',\n        '[attr.aria-label]': 'ariaLabel',\n        '(keydown)': '_handleKeydown($event)',\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{provide: MAT_CHIP, useExisting: MatChip}],\n      template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height);--mdc-chip-container-shape-family:rounded;--mdc-chip-container-shape-radius:16px 16px 16px 16px;--mdc-chip-with-avatar-avatar-shape-family:rounded;--mdc-chip-with-avatar-avatar-shape-radius:14px 14px 14px 14px;--mdc-chip-with-avatar-avatar-size:28px;--mdc-chip-with-icon-icon-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size);width:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size);width:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{flex-basis:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], ctorParameters: function () {\n    return [{type: i0.ChangeDetectorRef}, {type: i0.ElementRef}, {type: i0.NgZone}, {type: i1.FocusMonitor}, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined, decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: undefined, decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined, decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }];\n  }, propDecorators: {\n    role: [{\n      type: Input\n    }], _allLeadingIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_AVATAR, {descendants: true}]\n    }], _allTrailingIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_TRAILING_ICON, {descendants: true}]\n    }], _allRemoveIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_REMOVE, {descendants: true}]\n    }], id: [{\n      type: Input\n    }], ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }], ariaDescription: [{\n      type: Input,\n      args: ['aria-description']\n    }], value: [{\n      type: Input\n    }], removable: [{\n      type: Input\n    }], highlighted: [{\n      type: Input\n    }], removed: [{\n      type: Output\n    }], destroyed: [{\n      type: Output\n    }], leadingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_AVATAR]\n    }], trailingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_TRAILING_ICON]\n    }], removeIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_REMOVE]\n    }], primaryAction: [{\n      type: ViewChild,\n      args: [MatChipAction]\n    }]\n  }\n});\n\n/** Event object emitted by MatChipOption when selected or deselected. */\nclass MatChipSelectionChange {\n  constructor(\n    /** Reference to the chip that emitted the event. */\n    source,\n    /** Whether the chip that emitted the event is selected. */\n    selected,\n    /** Whether the selection change was a result of a user interaction. */\n    isUserInput = false) {\n    this.source = source;\n    this.selected = selected;\n    this.isUserInput = isUserInput;\n  }\n}\n\n/**\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\n *\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\n * user cannot click disabled chips.\n */\nclass MatChipOption extends MatChip {\n  constructor() {\n    super(...arguments);\n    /** Default chip options. */\n    this._defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {optional: true});\n    /** Whether the chip list is selectable. */\n    this.chipListSelectable = true;\n    /** Whether the chip list is in multi-selection mode. */\n    this._chipListMultiple = false;\n    /** Whether the chip list hides single-selection indicator. */\n    this._chipListHideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    this._selectable = true;\n    this._selected = false;\n    /** The unstyled chip selector for this component. */\n    this.basicChipAttrName = 'mat-basic-chip-option';\n    /** Emitted when the chip is selected or deselected. */\n    this.selectionChange = new EventEmitter();\n  }\n\n  /**\n   * Whether or not the chip is selectable.\n   *\n   * When a chip is not selectable, changes to its selected state are always\n   * ignored. By default an option chip is selectable, and it becomes\n   * non-selectable if its parent chip list is not selectable.\n   */\n  get selectable() {\n    return this._selectable && this.chipListSelectable;\n  }\n\n  set selectable(value) {\n    this._selectable = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Whether the chip is selected. */\n  get selected() {\n    return this._selected;\n  }\n\n  set selected(value) {\n    this._setSelectedState(coerceBooleanProperty(value), false, true);\n  }\n\n  /**\n   * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\n   * interaction patterns.\n   *\n   * From [WAI ARIA Listbox authoring practices guide](\n   * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\n   *  \"If any options are selected, each selected option has either aria-selected or aria-checked\n   *  set to true. All options that are selectable but not selected have either aria-selected or\n   *  aria-checked set to false.\"\n   *\n   * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\n   * VoiceOver reading every option as \"selected\" (#25736).\n   */\n  get ariaSelected() {\n    return this.selectable ? this.selected.toString() : null;\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.role = 'presentation';\n  }\n\n  /** Selects the chip. */\n  select() {\n    this._setSelectedState(true, false, true);\n  }\n\n  /** Deselects the chip. */\n  deselect() {\n    this._setSelectedState(false, false, true);\n  }\n\n  /** Selects this chip and emits userInputSelection event */\n  selectViaInteraction() {\n    this._setSelectedState(true, true, true);\n  }\n\n  /** Toggles the current selected state of this chip. */\n  toggleSelected(isUserInput = false) {\n    this._setSelectedState(!this.selected, isUserInput, true);\n    return this.selected;\n  }\n\n  _handlePrimaryActionInteraction() {\n    if (!this.disabled) {\n      // Interacting with the primary action implies that the chip already has focus, however\n      // there's a bug in Safari where focus ends up lingering on the previous chip (see #27544).\n      // We work around it by explicitly focusing the primary action of the current chip.\n      this.focus();\n      if (this.selectable) {\n        this.toggleSelected(true);\n      }\n    }\n  }\n\n  _hasLeadingGraphic() {\n    if (this.leadingIcon) {\n      return true;\n    }\n    // The checkmark graphic communicates selected state for both single-select and multi-select.\n    // Include checkmark in single-select to fix a11y issue where selected state is communicated\n    // visually only using color (#25886).\n    return !this._chipListHideSingleSelectionIndicator || this._chipListMultiple;\n  }\n\n  _setSelectedState(isSelected, isUserInput, emitEvent) {\n    if (isSelected !== this.selected) {\n      this._selected = isSelected;\n      if (emitEvent) {\n        this.selectionChange.emit({\n          source: this,\n          isUserInput,\n          selected: this.selected,\n        });\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatChipOption,\n      deps: null,\n      target: i0.ɵɵFactoryTarget.Component\n    });\n  }\n  static {\n    this.ɵcmp = i0.ɵɵngDeclareComponent({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatChipOption,\n      selector: \"mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]\",\n      inputs: {\n        color: \"color\",\n        disabled: \"disabled\",\n        disableRipple: \"disableRipple\",\n        tabIndex: \"tabIndex\",\n        selectable: \"selectable\",\n        selected: \"selected\"\n      },\n      outputs: {selectionChange: \"selectionChange\"},\n      host: {\n        properties: {\n          \"class.mdc-evolution-chip\": \"!_isBasicChip\",\n          \"class.mdc-evolution-chip--filter\": \"!_isBasicChip\",\n          \"class.mdc-evolution-chip--selectable\": \"!_isBasicChip\",\n          \"class.mat-mdc-chip-selected\": \"selected\",\n          \"class.mat-mdc-chip-multiple\": \"_chipListMultiple\",\n          \"class.mat-mdc-chip-disabled\": \"disabled\",\n          \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\",\n          \"class.mdc-evolution-chip--disabled\": \"disabled\",\n          \"class.mdc-evolution-chip--selected\": \"selected\",\n          \"class.mdc-evolution-chip--selecting\": \"!_animationsDisabled\",\n          \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\",\n          \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\",\n          \"class.mdc-evolution-chip--with-primary-graphic\": \"_hasLeadingGraphic()\",\n          \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\",\n          \"class.mat-mdc-chip-highlighted\": \"highlighted\",\n          \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\",\n          \"attr.tabindex\": \"null\",\n          \"attr.aria-label\": \"null\",\n          \"attr.aria-description\": \"null\",\n          \"attr.role\": \"role\",\n          \"id\": \"id\"\n        }, classAttribute: \"mat-mdc-chip mat-mdc-chip-option\"\n      },\n      providers: [\n        {provide: MatChip, useExisting: MatChipOption},\n        {provide: MAT_CHIP, useExisting: MatChipOption},\n      ],\n      usesInheritance: true,\n      ngImport: i0,\n      template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"_hasLeadingGraphic()\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n        <svg\\n          class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n          viewBox=\\\"-2 -3 30 30\\\"\\n          focusable=\\\"false\\\"\\n          aria-hidden=\\\"true\\\">\\n          <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n        </svg>\\n      </span>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height);--mdc-chip-container-shape-family:rounded;--mdc-chip-container-shape-radius:16px 16px 16px 16px;--mdc-chip-with-avatar-avatar-shape-family:rounded;--mdc-chip-with-avatar-avatar-shape-radius:14px 14px 14px 14px;--mdc-chip-with-avatar-avatar-size:28px;--mdc-chip-with-icon-icon-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size);width:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size);width:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{flex-basis:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n      dependencies: [{\n        kind: \"directive\",\n        type: i2.NgIf,\n        selector: \"[ngIf]\",\n        inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"]\n      }, {\n        kind: \"directive\",\n        type: MatChipAction,\n        selector: \"[matChipAction]\",\n        inputs: [\"disabled\", \"tabIndex\", \"isInteractive\", \"_allowFocusWhenDisabled\"]\n      }],\n      changeDetection: i0.ChangeDetectionStrategy.OnPush,\n      encapsulation: i0.ViewEncapsulation.None\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatChipOption, decorators: [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]',\n      inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-option',\n        '[class.mdc-evolution-chip]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--filter]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--selectable]': '!_isBasicChip',\n        '[class.mat-mdc-chip-selected]': 'selected',\n        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--selected]': 'selected',\n        // This class enables the transition on the checkmark. Usually MDC adds it when selection\n        // starts and removes it once the animation is finished. We don't need to go through all\n        // the trouble, because we only care about the selection animation. MDC needs to do it,\n        // because they also have an exit animation that we don't care about.\n        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-graphic]': '_hasLeadingGraphic()',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-description]': 'null',\n        '[attr.role]': 'role',\n        '[id]': 'id',\n      },\n      providers: [\n        {provide: MatChip, useExisting: MatChipOption},\n        {provide: MAT_CHIP, useExisting: MatChipOption},\n      ],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"_hasLeadingGraphic()\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n        <svg\\n          class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n          viewBox=\\\"-2 -3 30 30\\\"\\n          focusable=\\\"false\\\"\\n          aria-hidden=\\\"true\\\">\\n          <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n        </svg>\\n      </span>\\n    </span>\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height);--mdc-chip-container-shape-family:rounded;--mdc-chip-container-shape-radius:16px 16px 16px 16px;--mdc-chip-with-avatar-avatar-shape-family:rounded;--mdc-chip-with-avatar-avatar-shape-radius:14px 14px 14px 14px;--mdc-chip-with-avatar-avatar-size:28px;--mdc-chip-with-icon-icon-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size);width:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size);width:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{flex-basis:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], propDecorators: {\n    selectable: [{\n      type: Input\n    }], selected: [{\n      type: Input\n    }], selectionChange: [{\n      type: Output\n    }]\n  }\n});\n\n/**\n * A directive that makes a span editable and exposes functions to modify and retrieve the\n * element's contents.\n */\nclass MatChipEditInput {\n  constructor(_elementRef, _document) {\n    this._elementRef = _elementRef;\n    this._document = _document;\n  }\n\n  initialize(initialValue) {\n    this.getNativeElement().focus();\n    this.setValue(initialValue);\n  }\n\n  getNativeElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  setValue(value) {\n    this.getNativeElement().textContent = value;\n    this._moveCursorToEndOfInput();\n  }\n\n  getValue() {\n    return this.getNativeElement().textContent || '';\n  }\n\n  _moveCursorToEndOfInput() {\n    const range = this._document.createRange();\n    range.selectNodeContents(this.getNativeElement());\n    range.collapse(false);\n    const sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatChipEditInput,\n      deps: [{token: i0.ElementRef}, {token: DOCUMENT}],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatChipEditInput,\n      selector: \"span[matChipEditInput]\",\n      host: {\n        attributes: {\"role\": \"textbox\", \"tabindex\": \"-1\", \"contenteditable\": \"true\"},\n        classAttribute: \"mat-chip-edit-input\"\n      },\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatChipEditInput, decorators: [{\n    type: Directive,\n    args: [{\n      selector: 'span[matChipEditInput]',\n      host: {\n        'class': 'mat-chip-edit-input',\n        'role': 'textbox',\n        'tabindex': '-1',\n        'contenteditable': 'true',\n      },\n    }]\n  }], ctorParameters: function () {\n    return [{type: i0.ElementRef}, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }\n});\n\n/**\n * An extension of the MatChip component used with MatChipGrid and\n * the matChipInputFor directive.\n */\nclass MatChipRow extends MatChip {\n  constructor(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex) {\n    super(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex);\n    this.basicChipAttrName = 'mat-basic-chip-row';\n    /**\n     * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\n     * event might occur which will interrupt the editing. This flag is used to avoid interruptions\n     * while the editing action is being initialized.\n     */\n    this._editStartPending = false;\n    this.editable = false;\n    /** Emitted when the chip is edited. */\n    this.edited = new EventEmitter();\n    this._isEditing = false;\n    this.role = 'row';\n    this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\n      if (this._isEditing && !this._editStartPending) {\n        this._onEditFinish();\n      }\n    });\n  }\n\n  _hasTrailingIcon() {\n    // The trailing icon is hidden while editing.\n    return !this._isEditing && super._hasTrailingIcon();\n  }\n\n  /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\n  _handleFocus() {\n    if (!this._isEditing && !this.disabled) {\n      this.focus();\n    }\n  }\n\n  _handleKeydown(event) {\n    if (event.keyCode === ENTER && !this.disabled) {\n      if (this._isEditing) {\n        event.preventDefault();\n        this._onEditFinish();\n      } else if (this.editable) {\n        this._startEditing(event);\n      }\n    } else if (this._isEditing) {\n      // Stop the event from reaching the chip set in order to avoid navigating.\n      event.stopPropagation();\n    } else {\n      super._handleKeydown(event);\n    }\n  }\n\n  _handleDoubleclick(event) {\n    if (!this.disabled && this.editable) {\n      this._startEditing(event);\n    }\n  }\n\n  _startEditing(event) {\n    if (!this.primaryAction ||\n      (this.removeIcon && this._getSourceAction(event.target) === this.removeIcon)) {\n      return;\n    }\n    // The value depends on the DOM so we need to extract it before we flip the flag.\n    const value = this.value;\n    this._isEditing = this._editStartPending = true;\n    // Starting the editing sequence below depends on the edit input\n    // query resolving on time. Trigger a synchronous change detection to\n    // ensure that it happens by the time we hit the timeout below.\n    this._changeDetectorRef.detectChanges();\n    // TODO(crisbeto): this timeout shouldn't be necessary given the `detectChange` call above.\n    // Defer initializing the input so it has time to be added to the DOM.\n    setTimeout(() => {\n      this._getEditInput().initialize(value);\n      this._editStartPending = false;\n    });\n  }\n\n  _onEditFinish() {\n    this._isEditing = this._editStartPending = false;\n    this.edited.emit({chip: this, value: this._getEditInput().getValue()});\n    // If the edit input is still focused or focus was returned to the body after it was destroyed,\n    // return focus to the chip contents.\n    if (this._document.activeElement === this._getEditInput().getNativeElement() ||\n      this._document.activeElement === this._document.body) {\n      this.primaryAction.focus();\n    }\n  }\n\n  _isRippleDisabled() {\n    return super._isRippleDisabled() || this._isEditing;\n  }\n\n  /**\n   * Gets the projected chip edit input, or the default input if none is projected in. One of these\n   * two values is guaranteed to be defined.\n   */\n  _getEditInput() {\n    return this.contentEditInput || this.defaultEditInput;\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatChipRow,\n      deps: [{token: i0.ChangeDetectorRef}, {token: i0.ElementRef}, {token: i0.NgZone}, {token: i1.FocusMonitor}, {token: DOCUMENT}, {\n        token: ANIMATION_MODULE_TYPE,\n        optional: true\n      }, {token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true}, {token: 'tabindex', attribute: true}],\n      target: i0.ɵɵFactoryTarget.Component\n    });\n  }\n  static {\n    this.ɵcmp = i0.ɵɵngDeclareComponent({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatChipRow,\n      selector: \"mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]\",\n      inputs: {\n        color: \"color\",\n        disabled: \"disabled\",\n        disableRipple: \"disableRipple\",\n        tabIndex: \"tabIndex\",\n        editable: \"editable\"\n      },\n      outputs: {edited: \"edited\"},\n      host: {\n        listeners: {\"focus\": \"_handleFocus($event)\", \"dblclick\": \"_handleDoubleclick($event)\"},\n        properties: {\n          \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\",\n          \"class.mat-mdc-chip-disabled\": \"disabled\",\n          \"class.mat-mdc-chip-editing\": \"_isEditing\",\n          \"class.mat-mdc-chip-editable\": \"editable\",\n          \"class.mdc-evolution-chip--disabled\": \"disabled\",\n          \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\",\n          \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\",\n          \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\",\n          \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\",\n          \"class.mat-mdc-chip-highlighted\": \"highlighted\",\n          \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\",\n          \"id\": \"id\",\n          \"attr.tabindex\": \"disabled ? null : -1\",\n          \"attr.aria-label\": \"null\",\n          \"attr.aria-description\": \"null\",\n          \"attr.role\": \"role\"\n        },\n        classAttribute: \"mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip\"\n      },\n      providers: [\n        {provide: MatChip, useExisting: MatChipRow},\n        {provide: MAT_CHIP, useExisting: MatChipRow},\n      ],\n      queries: [{propertyName: \"contentEditInput\", first: true, predicate: MatChipEditInput, descendants: true}],\n      viewQueries: [{propertyName: \"defaultEditInput\", first: true, predicate: MatChipEditInput, descendants: true}],\n      usesInheritance: true,\n      ngImport: i0,\n      template: \"<ng-container *ngIf=\\\"!_isEditing\\\">\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n</ng-container>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n  <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n    <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n  </span>\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\" [ngSwitch]=\\\"_isEditing\\\">\\n    <ng-container *ngSwitchCase=\\\"false\\\"><ng-content></ng-content></ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"true\\\">\\n      <ng-content *ngIf=\\\"contentEditInput; else defaultMatChipEditInput\\\"\\n                  select=\\\"[matChipEditInput]\\\"></ng-content>\\n      <ng-template #defaultMatChipEditInput><span matChipEditInput></span></ng-template>\\n    </ng-container>\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  role=\\\"gridcell\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height);--mdc-chip-container-shape-family:rounded;--mdc-chip-container-shape-radius:16px 16px 16px 16px;--mdc-chip-with-avatar-avatar-shape-family:rounded;--mdc-chip-with-avatar-avatar-shape-radius:14px 14px 14px 14px;--mdc-chip-with-avatar-avatar-size:28px;--mdc-chip-with-icon-icon-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size);width:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size);width:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{flex-basis:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n      dependencies: [{\n        kind: \"directive\",\n        type: i2.NgIf,\n        selector: \"[ngIf]\",\n        inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"]\n      }, {kind: \"directive\", type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"]}, {\n        kind: \"directive\",\n        type: i2.NgSwitchCase,\n        selector: \"[ngSwitchCase]\",\n        inputs: [\"ngSwitchCase\"]\n      }, {\n        kind: \"directive\",\n        type: MatChipAction,\n        selector: \"[matChipAction]\",\n        inputs: [\"disabled\", \"tabIndex\", \"isInteractive\", \"_allowFocusWhenDisabled\"]\n      }, {kind: \"directive\", type: MatChipEditInput, selector: \"span[matChipEditInput]\"}],\n      changeDetection: i0.ChangeDetectionStrategy.OnPush,\n      encapsulation: i0.ViewEncapsulation.None\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatChipRow, decorators: [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]',\n      inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-editing]': '_isEditing',\n        '[class.mat-mdc-chip-editable]': 'editable',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[id]': 'id',\n        // Has to have a negative tabindex in order to capture\n        // focus and redirect it to the primary action.\n        '[attr.tabindex]': 'disabled ? null : -1',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-description]': 'null',\n        '[attr.role]': 'role',\n        '(focus)': '_handleFocus($event)',\n        '(dblclick)': '_handleDoubleclick($event)',\n      },\n      providers: [\n        {provide: MatChip, useExisting: MatChipRow},\n        {provide: MAT_CHIP, useExisting: MatChipRow},\n      ],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-container *ngIf=\\\"!_isEditing\\\">\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n</ng-container>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n  <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\" *ngIf=\\\"leadingIcon\\\">\\n    <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n  </span>\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\" [ngSwitch]=\\\"_isEditing\\\">\\n    <ng-container *ngSwitchCase=\\\"false\\\"><ng-content></ng-content></ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"true\\\">\\n      <ng-content *ngIf=\\\"contentEditInput; else defaultMatChipEditInput\\\"\\n                  select=\\\"[matChipEditInput]\\\"></ng-content>\\n      <ng-template #defaultMatChipEditInput><span matChipEditInput></span></ng-template>\\n    </ng-container>\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n<span\\n  class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n  role=\\\"gridcell\\\"\\n  *ngIf=\\\"_hasTrailingIcon()\\\">\\n  <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n</span>\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height);--mdc-chip-container-shape-family:rounded;--mdc-chip-container-shape-radius:16px 16px 16px 16px;--mdc-chip-with-avatar-avatar-shape-family:rounded;--mdc-chip-with-avatar-avatar-shape-radius:14px 14px 14px 14px;--mdc-chip-with-avatar-avatar-size:28px;--mdc-chip-with-icon-icon-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size);width:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size);width:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, currentColor)}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:.4}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{flex-basis:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{opacity:.04}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{opacity:.12}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-chip-remove{opacity:.54}.mat-mdc-chip-remove:focus{opacity:1}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px) * -1);left:8px;right:8px}.mat-mdc-chip-remove .mat-icon{width:inherit;height:inherit;font-size:inherit;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], ctorParameters: function () {\n    return [{type: i0.ChangeDetectorRef}, {type: i0.ElementRef}, {type: i0.NgZone}, {type: i1.FocusMonitor}, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined, decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: undefined, decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined, decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }];\n  }, propDecorators: {\n    editable: [{\n      type: Input\n    }], edited: [{\n      type: Output\n    }], defaultEditInput: [{\n      type: ViewChild,\n      args: [MatChipEditInput]\n    }], contentEditInput: [{\n      type: ContentChild,\n      args: [MatChipEditInput]\n    }]\n  }\n});\n\n/**\n * Boilerplate for applying mixins to MatChipSet.\n * @docs-private\n */\nclass MatChipSetBase {\n  constructor(_elementRef) {\n  }\n}\n\nconst _MatChipSetMixinBase = mixinTabIndex(MatChipSetBase);\n\n/**\n * Basic container component for the MatChip component.\n *\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\n */\nclass MatChipSet extends _MatChipSetMixinBase {\n  /** Combined stream of all of the child chips' focus events. */\n  get chipFocusChanges() {\n    return this._getChipStream(chip => chip._onFocus);\n  }\n\n  /** Combined stream of all of the child chips' remove events. */\n  get chipDestroyedChanges() {\n    return this._getChipStream(chip => chip.destroyed);\n  }\n\n  /** Whether the chip set is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n\n  /** Whether the chip list contains chips or not. */\n  get empty() {\n    return !this._chips || this._chips.length === 0;\n  }\n\n  /** The ARIA role applied to the chip set. */\n  get role() {\n    if (this._explicitRole) {\n      return this._explicitRole;\n    }\n    return this.empty ? null : this._defaultRole;\n  }\n\n  set role(value) {\n    this._explicitRole = value;\n  }\n\n  /** Whether any of the chips inside of this chip-set has focus. */\n  get focused() {\n    return this._hasFocusedChip();\n  }\n\n  constructor(_elementRef, _changeDetectorRef, _dir) {\n    super(_elementRef);\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dir = _dir;\n    /** Index of the last destroyed chip that had focus. */\n    this._lastDestroyedFocusedChipIndex = null;\n    /** Subject that emits when the component has been destroyed. */\n    this._destroyed = new Subject();\n    /** Role to use if it hasn't been overwritten by the user. */\n    this._defaultRole = 'presentation';\n    this._disabled = false;\n    this._explicitRole = null;\n    /** Flat list of all the actions contained within the chips. */\n    this._chipActions = new QueryList();\n  }\n\n  ngAfterViewInit() {\n    this._setUpFocusManagement();\n    this._trackChipSetChanges();\n    this._trackDestroyedFocusedChip();\n  }\n\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._chipActions.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Checks whether any of the chips is focused. */\n  _hasFocusedChip() {\n    return this._chips && this._chips.some(chip => chip._hasFocus());\n  }\n\n  /** Syncs the chip-set's state with the individual chips. */\n  _syncChipsState() {\n    if (this._chips) {\n      this._chips.forEach(chip => {\n        chip.disabled = this._disabled;\n        chip._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n  focus() {\n  }\n\n  /** Handles keyboard events on the chip set. */\n  _handleKeydown(event) {\n    if (this._originatesFromChip(event)) {\n      this._keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Utility to ensure all indexes are valid.\n   *\n   * @param index The index to be checked.\n   * @returns True if the index is valid for our list of chips.\n   */\n  _isValidIndex(index) {\n    return index >= 0 && index < this._chips.length;\n  }\n\n  /**\n   * Removes the `tabindex` from the chip set and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the set from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    if (this.tabIndex !== -1) {\n      const previousTabIndex = this.tabIndex;\n      this.tabIndex = -1;\n      // Note that this needs to be a `setTimeout`, because a `Promise.resolve`\n      // doesn't allow enough time for the focus to escape.\n      setTimeout(() => (this.tabIndex = previousTabIndex));\n    }\n  }\n\n  /**\n   * Gets a stream of events from all the chips within the set.\n   * The stream will automatically incorporate any newly-added chips.\n   */\n  _getChipStream(mappingFunction) {\n    return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\n  }\n\n  /** Checks whether an event comes from inside a chip element. */\n  _originatesFromChip(event) {\n    let currentElement = event.target;\n    while (currentElement && currentElement !== this._elementRef.nativeElement) {\n      if (currentElement.classList.contains('mat-mdc-chip')) {\n        return true;\n      }\n      currentElement = currentElement.parentElement;\n    }\n    return false;\n  }\n\n  /** Sets up the chip set's focus management logic. */\n  _setUpFocusManagement() {\n    // Create a flat `QueryList` containing the actions of all of the chips.\n    // This allows us to navigate both within the chip and move to the next/previous\n    // one using the existing `ListKeyManager`.\n    this._chips.changes.pipe(startWith(this._chips)).subscribe((chips) => {\n      const actions = [];\n      chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\n      this._chipActions.reset(actions);\n      this._chipActions.notifyOnChanges();\n    });\n    this._keyManager = new FocusKeyManager(this._chipActions)\n      .withVerticalOrientation()\n      .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr')\n      .withHomeAndEnd()\n      .skipPredicate(action => this._skipPredicate(action));\n    // Keep the manager active index in sync so that navigation picks\n    // up from the current chip if the user clicks into the list directly.\n    this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({chip}) => {\n      const action = chip._getSourceAction(document.activeElement);\n      if (action) {\n        this._keyManager.updateActiveItem(action);\n      }\n    });\n    this._dir?.change\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n  }\n\n  /**\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n   * non-interactive and disabled actions since the user can't do anything with them.\n   */\n  _skipPredicate(action) {\n    // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\n    // chips.\n    return !action.isInteractive || action.disabled;\n  }\n\n  /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n  _trackChipSetChanges() {\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.disabled) {\n        // Since this happens after the content has been\n        // checked, we need to defer it to the next tick.\n        Promise.resolve().then(() => this._syncChipsState());\n      }\n      this._redirectDestroyedChipFocus();\n    });\n  }\n\n  /** Starts tracking the destroyed chips in order to capture the focused one. */\n  _trackDestroyedFocusedChip() {\n    this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe((event) => {\n      const chipArray = this._chips.toArray();\n      const chipIndex = chipArray.indexOf(event.chip);\n      // If the focused chip is destroyed, save its index so that we can move focus to the next\n      // chip. We only save the index here, rather than move the focus immediately, because we want\n      // to wait until the chip is removed from the chip list before focusing the next one. This\n      // allows us to keep focus on the same index if the chip gets swapped out.\n      if (this._isValidIndex(chipIndex) && event.chip._hasFocus()) {\n        this._lastDestroyedFocusedChipIndex = chipIndex;\n      }\n    });\n  }\n\n  /**\n   * Finds the next appropriate chip to move focus to,\n   * if the currently-focused chip is destroyed.\n   */\n  _redirectDestroyedChipFocus() {\n    if (this._lastDestroyedFocusedChipIndex == null) {\n      return;\n    }\n    if (this._chips.length) {\n      const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\n      const chipToFocus = this._chips.toArray()[newIndex];\n      if (chipToFocus.disabled) {\n        // If we're down to one disabled chip, move focus back to the set.\n        if (this._chips.length === 1) {\n          this.focus();\n        } else {\n          this._keyManager.setPreviousItemActive();\n        }\n      } else {\n        chipToFocus.focus();\n      }\n    } else {\n      this.focus();\n    }\n    this._lastDestroyedFocusedChipIndex = null;\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatChipSet,\n      deps: [{token: i0.ElementRef}, {token: i0.ChangeDetectorRef}, {token: i1$1.Directionality, optional: true}],\n      target: i0.ɵɵFactoryTarget.Component\n    });\n  }\n  static {\n    this.ɵcmp = i0.ɵɵngDeclareComponent({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatChipSet,\n      selector: \"mat-chip-set\",\n      inputs: {disabled: \"disabled\", role: \"role\"},\n      host: {\n        listeners: {\"keydown\": \"_handleKeydown($event)\"},\n        properties: {\"attr.role\": \"role\"},\n        classAttribute: \"mat-mdc-chip-set mdc-evolution-chip-set\"\n      },\n      queries: [{propertyName: \"_chips\", predicate: MatChip, descendants: true}],\n      usesInheritance: true,\n      ngImport: i0,\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      isInline: true,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"],\n      changeDetection: i0.ChangeDetectionStrategy.OnPush,\n      encapsulation: i0.ViewEncapsulation.None\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatChipSet, decorators: [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-set',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\n        '(keydown)': '_handleKeydown($event)',\n        '[attr.role]': 'role',\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], ctorParameters: function () {\n    return [{type: i0.ElementRef}, {type: i0.ChangeDetectorRef}, {\n      type: i1$1.Directionality, decorators: [{\n        type: Optional\n      }]\n    }];\n  }, propDecorators: {\n    disabled: [{\n      type: Input\n    }], role: [{\n      type: Input\n    }], _chips: [{\n      type: ContentChildren,\n      args: [MatChip, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true,\n      }]\n    }]\n  }\n});\n\n/** Change event object that is emitted when the chip listbox value has changed. */\nclass MatChipListboxChange {\n  constructor(\n    /** Chip listbox that emitted the event. */\n    source,\n    /** Value of the chip listbox when the event was emitted. */\n    value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n\n/**\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatChipListbox),\n  multi: true,\n};\n\n/**\n * An extension of the MatChipSet component that supports chip selection.\n * Used with MatChipOption chips.\n */\nclass MatChipListbox extends MatChipSet {\n  constructor() {\n    super(...arguments);\n    /**\n     * Function when touched. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    this._onTouched = () => {\n    };\n    /**\n     * Function when changed. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    this._onChange = () => {\n    };\n    // TODO: MDC uses `grid` here\n    this._defaultRole = 'listbox';\n    /** Default chip options. */\n    this._defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {optional: true});\n    this._multiple = false;\n    /** Orientation of the chip list. */\n    this.ariaOrientation = 'horizontal';\n    this._selectable = true;\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    this.compareWith = (o1, o2) => o1 === o2;\n    this._required = false;\n    this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    /** Event emitted when the selected chip listbox value has been changed by the user. */\n    this.change = new EventEmitter();\n    this._chips = undefined;\n  }\n\n  /** Whether the user should be allowed to select multiple chips. */\n  get multiple() {\n    return this._multiple;\n  }\n\n  set multiple(value) {\n    this._multiple = coerceBooleanProperty(value);\n    this._syncListboxProperties();\n  }\n\n  /** The array of selected chips inside the chip listbox. */\n  get selected() {\n    const selectedChips = this._chips.toArray().filter(chip => chip.selected);\n    return this.multiple ? selectedChips : selectedChips[0];\n  }\n\n  /**\n   * Whether or not this chip listbox is selectable.\n   *\n   * When a chip listbox is not selectable, the selected states for all\n   * the chips inside the chip listbox are always ignored.\n   */\n  get selectable() {\n    return this._selectable;\n  }\n\n  set selectable(value) {\n    this._selectable = coerceBooleanProperty(value);\n    this._syncListboxProperties();\n  }\n\n  /** Whether this chip listbox is required. */\n  get required() {\n    return this._required;\n  }\n\n  set required(value) {\n    this._required = coerceBooleanProperty(value);\n  }\n\n  /** Whether checkmark indicator for single-selection options is hidden. */\n  get hideSingleSelectionIndicator() {\n    return this._hideSingleSelectionIndicator;\n  }\n\n  set hideSingleSelectionIndicator(value) {\n    this._hideSingleSelectionIndicator = coerceBooleanProperty(value);\n    this._syncListboxProperties();\n  }\n\n  /** Combined stream of all of the child chips' selection change events. */\n  get chipSelectionChanges() {\n    return this._getChipStream(chip => chip.selectionChange);\n  }\n\n  /** Combined stream of all of the child chips' blur events. */\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n\n  /** The value of the listbox, which is the combined value of the selected chips. */\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this.writeValue(value);\n    this._value = value;\n  }\n\n  ngAfterContentInit() {\n    if (this._pendingInitialValue !== undefined) {\n      Promise.resolve().then(() => {\n        this._setSelectionByValue(this._pendingInitialValue, false);\n        this._pendingInitialValue = undefined;\n      });\n    }\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      // Update listbox selectable/multiple properties on chips\n      this._syncListboxProperties();\n    });\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\n    this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n      if (!this.multiple) {\n        this._chips.forEach(chip => {\n          if (chip !== event.source) {\n            chip._setSelectedState(false, false, false);\n          }\n        });\n      }\n      if (event.isUserInput) {\n        this._propagateChanges();\n      }\n    });\n  }\n\n  /**\n   * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\n   * are no selected chips.\n   */\n  focus() {\n    if (this.disabled) {\n      return;\n    }\n    const firstSelectedChip = this._getFirstSelectedChip();\n    if (firstSelectedChip && !firstSelectedChip.disabled) {\n      firstSelectedChip.focus();\n    } else if (this._chips.length > 0) {\n      this._keyManager.setFirstItemActive();\n    } else {\n      this._elementRef.nativeElement.focus();\n    }\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  writeValue(value) {\n    if (this._chips) {\n      this._setSelectionByValue(value, false);\n    } else if (value != null) {\n      this._pendingInitialValue = value;\n    }\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  /** Selects all chips with value. */\n  _setSelectionByValue(value, isUserInput = true) {\n    this._clearSelection();\n    if (Array.isArray(value)) {\n      value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n    } else {\n      this._selectValue(value, isUserInput);\n    }\n  }\n\n  /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\n  _blur() {\n    if (!this.disabled) {\n      // Wait to see if focus moves to an individual chip.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n\n  _keydown(event) {\n    if (event.keyCode === TAB) {\n      super._allowFocusEscape();\n    }\n  }\n\n  /** Marks the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Emits change event to set the model value. */\n  _propagateChanges() {\n    let valueToEmit = null;\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(chip => chip.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : undefined;\n    }\n    this._value = valueToEmit;\n    this.change.emit(new MatChipListboxChange(this, valueToEmit));\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Deselects every chip in the listbox.\n   * @param skip Chip that should not be deselected.\n   */\n  _clearSelection(skip) {\n    this._chips.forEach(chip => {\n      if (chip !== skip) {\n        chip.deselect();\n      }\n    });\n  }\n\n  /**\n   * Finds and selects the chip based on its value.\n   * @returns Chip that has the corresponding value.\n   */\n  _selectValue(value, isUserInput) {\n    const correspondingChip = this._chips.find(chip => {\n      return chip.value != null && this.compareWith(chip.value, value);\n    });\n    if (correspondingChip) {\n      isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n    }\n    return correspondingChip;\n  }\n\n  /** Syncs the chip-listbox selection state with the individual chips. */\n  _syncListboxProperties() {\n    if (this._chips) {\n      // Defer setting the value in order to avoid the \"Expression\n      // has changed after it was checked\" errors from Angular.\n      Promise.resolve().then(() => {\n        this._chips.forEach(chip => {\n          chip._chipListMultiple = this.multiple;\n          chip.chipListSelectable = this._selectable;\n          chip._chipListHideSingleSelectionIndicator = this.hideSingleSelectionIndicator;\n          chip._changeDetectorRef.markForCheck();\n        });\n      });\n    }\n  }\n\n  /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\n  _getFirstSelectedChip() {\n    if (Array.isArray(this.selected)) {\n      return this.selected.length ? this.selected[0] : undefined;\n    } else {\n      return this.selected;\n    }\n  }\n\n  /**\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n   * non-interactive actions since the user can't do anything with them.\n   */\n  _skipPredicate(action) {\n    // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\n    // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\n    // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\n    // exceptions for compound widgets.\n    //\n    // From [Developing a Keyboard Interface](\n    // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n    //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n    //   Listbox...\"\n    return !action.isInteractive;\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatChipListbox,\n      deps: null,\n      target: i0.ɵɵFactoryTarget.Component\n    });\n  }\n  static {\n    this.ɵcmp = i0.ɵɵngDeclareComponent({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatChipListbox,\n      selector: \"mat-chip-listbox\",\n      inputs: {\n        tabIndex: \"tabIndex\",\n        multiple: \"multiple\",\n        ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"],\n        selectable: \"selectable\",\n        compareWith: \"compareWith\",\n        required: \"required\",\n        hideSingleSelectionIndicator: \"hideSingleSelectionIndicator\",\n        value: \"value\"\n      },\n      outputs: {change: \"change\"},\n      host: {\n        attributes: {\"ngSkipHydration\": \"\"},\n        listeners: {\"focus\": \"focus()\", \"blur\": \"_blur()\", \"keydown\": \"_keydown($event)\"},\n        properties: {\n          \"attr.role\": \"role\",\n          \"tabIndex\": \"empty ? -1 : tabIndex\",\n          \"attr.aria-describedby\": \"_ariaDescribedby || null\",\n          \"attr.aria-required\": \"role ? required : null\",\n          \"attr.aria-disabled\": \"disabled.toString()\",\n          \"attr.aria-multiselectable\": \"multiple\",\n          \"attr.aria-orientation\": \"ariaOrientation\",\n          \"class.mat-mdc-chip-list-disabled\": \"disabled\",\n          \"class.mat-mdc-chip-list-required\": \"required\"\n        },\n        classAttribute: \"mdc-evolution-chip-set mat-mdc-chip-listbox\"\n      },\n      providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR],\n      queries: [{propertyName: \"_chips\", predicate: MatChipOption, descendants: true}],\n      usesInheritance: true,\n      ngImport: i0,\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      isInline: true,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"],\n      changeDetection: i0.ChangeDetectionStrategy.OnPush,\n      encapsulation: i0.ViewEncapsulation.None\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatChipListbox, decorators: [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-listbox',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      inputs: ['tabIndex'],\n      host: {\n        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\n        '[attr.role]': 'role',\n        '[tabIndex]': 'empty ? -1 : tabIndex',\n        // TODO: replace this binding with use of AriaDescriber\n        '[attr.aria-describedby]': '_ariaDescribedby || null',\n        '[attr.aria-required]': 'role ? required : null',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-multiselectable]': 'multiple',\n        '[attr.aria-orientation]': 'ariaOrientation',\n        'ngSkipHydration': '',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()',\n        '(keydown)': '_keydown($event)',\n      },\n      providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], propDecorators: {\n    multiple: [{\n      type: Input\n    }], ariaOrientation: [{\n      type: Input,\n      args: ['aria-orientation']\n    }], selectable: [{\n      type: Input\n    }], compareWith: [{\n      type: Input\n    }], required: [{\n      type: Input\n    }], hideSingleSelectionIndicator: [{\n      type: Input\n    }], value: [{\n      type: Input\n    }], change: [{\n      type: Output\n    }], _chips: [{\n      type: ContentChildren,\n      args: [MatChipOption, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true,\n      }]\n    }]\n  }\n});\n\n/** Change event object that is emitted when the chip grid value has changed. */\nclass MatChipGridChange {\n  constructor(\n    /** Chip grid that emitted the event. */\n    source,\n    /** Value of the chip grid when the event was emitted. */\n    value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n\n/**\n * Boilerplate for applying mixins to MatChipGrid.\n * @docs-private\n */\nclass MatChipGridBase extends MatChipSet {\n  constructor(elementRef, changeDetectorRef, dir, _defaultErrorStateMatcher, _parentForm, _parentFormGroup,\n              /**\n               * Form control bound to the component.\n               * Implemented as part of `MatFormFieldControl`.\n               * @docs-private\n               */\n              ngControl) {\n    super(elementRef, changeDetectorRef, dir);\n    this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n    this._parentForm = _parentForm;\n    this._parentFormGroup = _parentFormGroup;\n    this.ngControl = ngControl;\n    /**\n     * Emits whenever the component state changes and should cause the parent\n     * form-field to update. Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    this.stateChanges = new Subject();\n  }\n}\n\nconst _MatChipGridMixinBase = mixinErrorState(MatChipGridBase);\n\n/**\n * An extension of the MatChipSet component used with MatChipRow chips and\n * the matChipInputFor directive.\n */\nclass MatChipGrid extends _MatChipGridMixinBase {\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get disabled() {\n    return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get id() {\n    return this._chipInput.id;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get empty() {\n    return ((!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0));\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get placeholder() {\n    return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n  }\n\n  set placeholder(value) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n\n  /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\n  get focused() {\n    return this._chipInput.focused || this._hasFocusedChip();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n\n  set required(value) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat() {\n    return !this.empty || this.focused;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this._value = value;\n  }\n\n  /** Combined stream of all of the child chips' blur events. */\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n\n  constructor(elementRef, changeDetectorRef, dir, parentForm, parentFormGroup, defaultErrorStateMatcher, ngControl) {\n    super(elementRef, changeDetectorRef, dir, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    this.controlType = 'mat-chip-grid';\n    this._defaultRole = 'grid';\n    /**\n     * List of element ids to propagate to the chipInput's aria-describedby attribute.\n     */\n    this._ariaDescribedbyIds = [];\n    /**\n     * Function when touched. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    this._onTouched = () => {\n    };\n    /**\n     * Function when changed. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    this._onChange = () => {\n    };\n    this._value = [];\n    /** Emits when the chip grid value has been changed by the user. */\n    this.change = new EventEmitter();\n    /**\n     * Emits whenever the raw value of the chip-grid changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    this.valueChange = new EventEmitter();\n    this._chips = undefined;\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._blur();\n      this.stateChanges.next();\n    });\n    merge(this.chipFocusChanges, this._chips.changes)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this.stateChanges.next());\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\n    }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.stateChanges.complete();\n  }\n\n  /** Associates an HTML input element with this chip grid. */\n  registerInput(inputElement) {\n    this._chipInput = inputElement;\n    this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick(event) {\n    if (!this.disabled && !this._originatesFromChip(event)) {\n      this.focus();\n    }\n  }\n\n  /**\n   * Focuses the first chip in this chip grid, or the associated input when there\n   * are no eligible chips.\n   */\n  focus() {\n    if (this.disabled || this._chipInput.focused) {\n      return;\n    }\n    if (!this._chips.length || this._chips.first.disabled) {\n      // Delay until the next tick, because this can cause a \"changed after checked\"\n      // error if the input does something on focus (e.g. opens an autocomplete).\n      Promise.resolve().then(() => this._chipInput.focus());\n    } else if (this._chips.length) {\n      this._keyManager.setFirstItemActive();\n    }\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids) {\n    // We must keep this up to date to handle the case where ids are set\n    // before the chip input is registered.\n    this._ariaDescribedbyIds = ids;\n    this._chipInput?.setDescribedByIds(ids);\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  writeValue(value) {\n    // The user is responsible for creating the child chips, so we just store the value.\n    this._value = value;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this.stateChanges.next();\n  }\n\n  /** When blurred, mark the field as touched when focus moved outside the chip grid. */\n  _blur() {\n    if (!this.disabled) {\n      // Check whether the focus moved to chip input.\n      // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n      // to chip input, do nothing.\n      // Timeout is needed to wait for the focus() event trigger on chip input.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._propagateChanges();\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n\n  /**\n   * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the grid from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    if (!this._chipInput.focused) {\n      super._allowFocusEscape();\n    }\n  }\n\n  /** Handles custom keyboard events. */\n  _handleKeydown(event) {\n    if (event.keyCode === TAB) {\n      if (this._chipInput.focused &&\n        hasModifierKey(event, 'shiftKey') &&\n        this._chips.length &&\n        !this._chips.last.disabled) {\n        event.preventDefault();\n        if (this._keyManager.activeItem) {\n          this._keyManager.setActiveItem(this._keyManager.activeItem);\n        } else {\n          this._focusLastChip();\n        }\n      } else {\n        // Use the super method here since it doesn't check for the input\n        // focused state. This allows focus to escape if there's only one\n        // disabled chip left in the list.\n        super._allowFocusEscape();\n      }\n    } else if (!this._chipInput.focused) {\n      super._handleKeydown(event);\n    }\n    this.stateChanges.next();\n  }\n\n  _focusLastChip() {\n    if (this._chips.length) {\n      this._chips.last.focus();\n    }\n  }\n\n  /** Emits change event to set the model value. */\n  _propagateChanges() {\n    const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\n    this._value = valueToEmit;\n    this.change.emit(new MatChipGridChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Mark the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatChipGrid,\n      deps: [{token: i0.ElementRef}, {token: i0.ChangeDetectorRef}, {\n        token: i1$1.Directionality,\n        optional: true\n      }, {token: i2$1.NgForm, optional: true}, {\n        token: i2$1.FormGroupDirective,\n        optional: true\n      }, {token: i3.ErrorStateMatcher}, {token: i2$1.NgControl, optional: true, self: true}],\n      target: i0.ɵɵFactoryTarget.Component\n    });\n  }\n  static {\n    this.ɵcmp = i0.ɵɵngDeclareComponent({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatChipGrid,\n      selector: \"mat-chip-grid\",\n      inputs: {\n        tabIndex: \"tabIndex\",\n        disabled: \"disabled\",\n        placeholder: \"placeholder\",\n        required: \"required\",\n        value: \"value\",\n        errorStateMatcher: \"errorStateMatcher\"\n      },\n      outputs: {change: \"change\", valueChange: \"valueChange\"},\n      host: {\n        listeners: {\"focus\": \"focus()\", \"blur\": \"_blur()\"},\n        properties: {\n          \"attr.role\": \"role\",\n          \"tabIndex\": \"_chips && _chips.length === 0 ? -1 : tabIndex\",\n          \"attr.aria-disabled\": \"disabled.toString()\",\n          \"attr.aria-invalid\": \"errorState\",\n          \"class.mat-mdc-chip-list-disabled\": \"disabled\",\n          \"class.mat-mdc-chip-list-invalid\": \"errorState\",\n          \"class.mat-mdc-chip-list-required\": \"required\"\n        },\n        classAttribute: \"mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set\"\n      },\n      providers: [{provide: MatFormFieldControl, useExisting: MatChipGrid}],\n      queries: [{propertyName: \"_chips\", predicate: MatChipRow, descendants: true}],\n      usesInheritance: true,\n      ngImport: i0,\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      isInline: true,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"],\n      changeDetection: i0.ChangeDetectionStrategy.OnPush,\n      encapsulation: i0.ViewEncapsulation.None\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatChipGrid, decorators: [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-grid',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      inputs: ['tabIndex'],\n      host: {\n        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\n        '[attr.role]': 'role',\n        '[tabIndex]': '_chips && _chips.length === 0 ? -1 : tabIndex',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()',\n      },\n      providers: [{provide: MatFormFieldControl, useExisting: MatChipGrid}],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], ctorParameters: function () {\n    return [{type: i0.ElementRef}, {type: i0.ChangeDetectorRef}, {\n      type: i1$1.Directionality, decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2$1.NgForm, decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2$1.FormGroupDirective, decorators: [{\n        type: Optional\n      }]\n    }, {type: i3.ErrorStateMatcher}, {\n      type: i2$1.NgControl, decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }];\n  }, propDecorators: {\n    disabled: [{\n      type: Input\n    }], placeholder: [{\n      type: Input\n    }], required: [{\n      type: Input\n    }], value: [{\n      type: Input\n    }], errorStateMatcher: [{\n      type: Input\n    }], change: [{\n      type: Output\n    }], valueChange: [{\n      type: Output\n    }], _chips: [{\n      type: ContentChildren,\n      args: [MatChipRow, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true,\n      }]\n    }]\n  }\n});\n\n// Increasing integer for generating unique ids.\nlet nextUniqueId = 0;\n\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of a `<mat-chip-grid>`.\n */\nclass MatChipInput {\n  /** Register input for chip list */\n  set chipGrid(value) {\n    if (value) {\n      this._chipGrid = value;\n      this._chipGrid.registerInput(this);\n    }\n  }\n\n  /**\n   * Whether or not the chipEnd event will be emitted when the input is blurred.\n   */\n  get addOnBlur() {\n    return this._addOnBlur;\n  }\n\n  set addOnBlur(value) {\n    this._addOnBlur = coerceBooleanProperty(value);\n  }\n\n  /** Whether the input is disabled. */\n  get disabled() {\n    return this._disabled || (this._chipGrid && this._chipGrid.disabled);\n  }\n\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  /** Whether the input is empty. */\n  get empty() {\n    return !this.inputElement.value;\n  }\n\n  constructor(_elementRef, defaultOptions, formField) {\n    this._elementRef = _elementRef;\n    /** Whether the control is focused. */\n    this.focused = false;\n    this._addOnBlur = false;\n    /** Emitted when a chip is to be added. */\n    this.chipEnd = new EventEmitter();\n    /** The input's placeholder text. */\n    this.placeholder = '';\n    /** Unique id for the input. */\n    this.id = `mat-mdc-chip-list-input-${nextUniqueId++}`;\n    this._disabled = false;\n    this.inputElement = this._elementRef.nativeElement;\n    this.separatorKeyCodes = defaultOptions.separatorKeyCodes;\n    if (formField) {\n      this.inputElement.classList.add('mat-mdc-form-field-input-control');\n    }\n  }\n\n  ngOnChanges() {\n    this._chipGrid.stateChanges.next();\n  }\n\n  ngOnDestroy() {\n    this.chipEnd.complete();\n  }\n\n  ngAfterContentInit() {\n    this._focusLastChipOnBackspace = this.empty;\n  }\n\n  /** Utility method to make host definition/tests more clear. */\n  _keydown(event) {\n    if (event) {\n      // To prevent the user from accidentally deleting chips when pressing BACKSPACE continuously,\n      // We focus the last chip on backspace only after the user has released the backspace button,\n      // And the input is empty (see behaviour in _keyup)\n      if (event.keyCode === BACKSPACE && this._focusLastChipOnBackspace) {\n        this._chipGrid._focusLastChip();\n        event.preventDefault();\n        return;\n      } else {\n        this._focusLastChipOnBackspace = false;\n      }\n    }\n    this._emitChipEnd(event);\n  }\n\n  /**\n   * Pass events to the keyboard manager. Available here for tests.\n   */\n  _keyup(event) {\n    // Allow user to move focus to chips next time he presses backspace\n    if (!this._focusLastChipOnBackspace && event.keyCode === BACKSPACE && this.empty) {\n      this._focusLastChipOnBackspace = true;\n      event.preventDefault();\n    }\n  }\n\n  /** Checks to see if the blur should emit the (chipEnd) event. */\n  _blur() {\n    if (this.addOnBlur) {\n      this._emitChipEnd();\n    }\n    this.focused = false;\n    // Blur the chip list if it is not focused\n    if (!this._chipGrid.focused) {\n      this._chipGrid._blur();\n    }\n    this._chipGrid.stateChanges.next();\n  }\n\n  _focus() {\n    this.focused = true;\n    this._focusLastChipOnBackspace = this.empty;\n    this._chipGrid.stateChanges.next();\n  }\n\n  /** Checks to see if the (chipEnd) event needs to be emitted. */\n  _emitChipEnd(event) {\n    if (!event || this._isSeparatorKey(event)) {\n      this.chipEnd.emit({\n        input: this.inputElement,\n        value: this.inputElement.value,\n        chipInput: this,\n      });\n      event?.preventDefault();\n    }\n  }\n\n  _onInput() {\n    // Let chip list know whenever the value changes.\n    this._chipGrid.stateChanges.next();\n  }\n\n  /** Focuses the input. */\n  focus() {\n    this.inputElement.focus();\n  }\n\n  /** Clears the input */\n  clear() {\n    this.inputElement.value = '';\n    this._focusLastChipOnBackspace = true;\n  }\n\n  setDescribedByIds(ids) {\n    const element = this._elementRef.nativeElement;\n    // Set the value directly in the DOM since this binding\n    // is prone to \"changed after checked\" errors.\n    if (ids.length) {\n      element.setAttribute('aria-describedby', ids.join(' '));\n    } else {\n      element.removeAttribute('aria-describedby');\n    }\n  }\n\n  /** Checks whether a keycode is one of the configured separators. */\n  _isSeparatorKey(event) {\n    return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n  }\n\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatChipInput,\n      deps: [{token: i0.ElementRef}, {token: MAT_CHIPS_DEFAULT_OPTIONS}, {token: MAT_FORM_FIELD, optional: true}],\n      target: i0.ɵɵFactoryTarget.Directive\n    });\n  }\n  static {\n    this.ɵdir = i0.ɵɵngDeclareDirective({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      type: MatChipInput,\n      selector: \"input[matChipInputFor]\",\n      inputs: {\n        chipGrid: [\"matChipInputFor\", \"chipGrid\"],\n        addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"],\n        separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"],\n        placeholder: \"placeholder\",\n        id: \"id\",\n        disabled: \"disabled\"\n      },\n      outputs: {chipEnd: \"matChipInputTokenEnd\"},\n      host: {\n        listeners: {\n          \"keydown\": \"_keydown($event)\",\n          \"keyup\": \"_keyup($event)\",\n          \"blur\": \"_blur()\",\n          \"focus\": \"_focus()\",\n          \"input\": \"_onInput()\"\n        },\n        properties: {\n          \"id\": \"id\",\n          \"attr.disabled\": \"disabled || null\",\n          \"attr.placeholder\": \"placeholder || null\",\n          \"attr.aria-invalid\": \"_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null\",\n          \"attr.aria-required\": \"_chipGrid && _chipGrid.required || null\",\n          \"attr.required\": \"_chipGrid && _chipGrid.required || null\"\n        },\n        classAttribute: \"mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element\"\n      },\n      exportAs: [\"matChipInput\", \"matChipInputFor\"],\n      usesOnChanges: true,\n      ngImport: i0\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatChipInput, decorators: [{\n    type: Directive,\n    args: [{\n      selector: 'input[matChipInputFor]',\n      exportAs: 'matChipInput, matChipInputFor',\n      host: {\n        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\n        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\n        // the MDC chips were landed initially with it.\n        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\n        '(keydown)': '_keydown($event)',\n        '(keyup)': '_keyup($event)',\n        '(blur)': '_blur()',\n        '(focus)': '_focus()',\n        '(input)': '_onInput()',\n        '[id]': 'id',\n        '[attr.disabled]': 'disabled || null',\n        '[attr.placeholder]': 'placeholder || null',\n        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\n        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\n        '[attr.required]': '_chipGrid && _chipGrid.required || null',\n      },\n    }]\n  }], ctorParameters: function () {\n    return [{type: i0.ElementRef}, {\n      type: undefined, decorators: [{\n        type: Inject,\n        args: [MAT_CHIPS_DEFAULT_OPTIONS]\n      }]\n    }, {\n      type: i1$2.MatFormField, decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_FORM_FIELD]\n      }]\n    }];\n  }, propDecorators: {\n    chipGrid: [{\n      type: Input,\n      args: ['matChipInputFor']\n    }], addOnBlur: [{\n      type: Input,\n      args: ['matChipInputAddOnBlur']\n    }], separatorKeyCodes: [{\n      type: Input,\n      args: ['matChipInputSeparatorKeyCodes']\n    }], chipEnd: [{\n      type: Output,\n      args: ['matChipInputTokenEnd']\n    }], placeholder: [{\n      type: Input\n    }], id: [{\n      type: Input\n    }], disabled: [{\n      type: Input\n    }]\n  }\n});\n\nconst CHIP_DECLARATIONS = [\n  MatChip,\n  MatChipAvatar,\n  MatChipEditInput,\n  MatChipGrid,\n  MatChipInput,\n  MatChipListbox,\n  MatChipOption,\n  MatChipRemove,\n  MatChipRow,\n  MatChipSet,\n  MatChipTrailingIcon,\n];\n\nclass MatChipsModule {\n  static {\n    this.ɵfac = i0.ɵɵngDeclareFactory({\n      minVersion: \"12.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatChipsModule,\n      deps: [],\n      target: i0.ɵɵFactoryTarget.NgModule\n    });\n  }\n  static {\n    this.ɵmod = i0.ɵɵngDeclareNgModule({\n      minVersion: \"14.0.0\",\n      version: \"16.1.1\",\n      ngImport: i0,\n      type: MatChipsModule,\n      declarations: [MatChipAction, MatChip,\n        MatChipAvatar,\n        MatChipEditInput,\n        MatChipGrid,\n        MatChipInput,\n        MatChipListbox,\n        MatChipOption,\n        MatChipRemove,\n        MatChipRow,\n        MatChipSet,\n        MatChipTrailingIcon],\n      imports: [MatCommonModule, CommonModule, MatRippleModule],\n      exports: [MatCommonModule, MatChip,\n        MatChipAvatar,\n        MatChipEditInput,\n        MatChipGrid,\n        MatChipInput,\n        MatChipListbox,\n        MatChipOption,\n        MatChipRemove,\n        MatChipRow,\n        MatChipSet,\n        MatChipTrailingIcon]\n    });\n  }\n  static {\n    this.ɵinj = i0.ɵɵngDeclareInjector({\n      minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatChipsModule, providers: [\n        ErrorStateMatcher,\n        {\n          provide: MAT_CHIPS_DEFAULT_OPTIONS,\n          useValue: {\n            separatorKeyCodes: [ENTER],\n          },\n        },\n      ], imports: [MatCommonModule, CommonModule, MatRippleModule, MatCommonModule]\n    });\n  }\n}\n\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatChipsModule, decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CommonModule, MatRippleModule],\n      exports: [MatCommonModule, CHIP_DECLARATIONS],\n      declarations: [MatChipAction, CHIP_DECLARATIONS],\n      providers: [\n        ErrorStateMatcher,\n        {\n          provide: MAT_CHIPS_DEFAULT_OPTIONS,\n          useValue: {\n            separatorKeyCodes: [ENTER],\n          },\n        },\n      ],\n    }]\n  }]\n});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport {\n  MAT_CHIP,\n  MAT_CHIPS_DEFAULT_OPTIONS,\n  MAT_CHIP_AVATAR,\n  MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR,\n  MAT_CHIP_REMOVE,\n  MAT_CHIP_TRAILING_ICON,\n  MatChip,\n  MatChipAvatar,\n  MatChipEditInput,\n  MatChipGrid,\n  MatChipGridChange,\n  MatChipInput,\n  MatChipListbox,\n  MatChipListboxChange,\n  MatChipOption,\n  MatChipRemove,\n  MatChipRow,\n  MatChipSelectionChange,\n  MatChipSet,\n  MatChipTrailingIcon,\n  MatChipsModule\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}